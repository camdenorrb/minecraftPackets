// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.2
// source: blocks.proto

package palette

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attachment int32

const (
	Attachment_ATTACHMENT_FLOOR       Attachment = 0
	Attachment_ATTACHMENT_CEILING     Attachment = 1
	Attachment_ATTACHMENT_SINGLE_WALL Attachment = 2
	Attachment_ATTACHMENT_DOUBLE_WALL Attachment = 3
)

// Enum value maps for Attachment.
var (
	Attachment_name = map[int32]string{
		0: "ATTACHMENT_FLOOR",
		1: "ATTACHMENT_CEILING",
		2: "ATTACHMENT_SINGLE_WALL",
		3: "ATTACHMENT_DOUBLE_WALL",
	}
	Attachment_value = map[string]int32{
		"ATTACHMENT_FLOOR":       0,
		"ATTACHMENT_CEILING":     1,
		"ATTACHMENT_SINGLE_WALL": 2,
		"ATTACHMENT_DOUBLE_WALL": 3,
	}
)

func (x Attachment) Enum() *Attachment {
	p := new(Attachment)
	*p = x
	return p
}

func (x Attachment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attachment) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[0].Descriptor()
}

func (Attachment) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[0]
}

func (x Attachment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attachment.Descriptor instead.
func (Attachment) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{0}
}

type Axis int32

const (
	Axis_AXIS_X Axis = 0
	Axis_AXIS_Y Axis = 1
	Axis_AXIS_Z Axis = 2
)

// Enum value maps for Axis.
var (
	Axis_name = map[int32]string{
		0: "AXIS_X",
		1: "AXIS_Y",
		2: "AXIS_Z",
	}
	Axis_value = map[string]int32{
		"AXIS_X": 0,
		"AXIS_Y": 1,
		"AXIS_Z": 2,
	}
)

func (x Axis) Enum() *Axis {
	p := new(Axis)
	*p = x
	return p
}

func (x Axis) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Axis) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[1].Descriptor()
}

func (Axis) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[1]
}

func (x Axis) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Axis.Descriptor instead.
func (Axis) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{1}
}

type East int32

const (
	East_EAST_NONE  East = 0
	East_EAST_LOW   East = 1
	East_EAST_TALL  East = 2
	East_EAST_TRUE  East = 3
	East_EAST_FALSE East = 4
	East_EAST_UP    East = 5
	East_EAST_SIDE  East = 6
)

// Enum value maps for East.
var (
	East_name = map[int32]string{
		0: "EAST_NONE",
		1: "EAST_LOW",
		2: "EAST_TALL",
		3: "EAST_TRUE",
		4: "EAST_FALSE",
		5: "EAST_UP",
		6: "EAST_SIDE",
	}
	East_value = map[string]int32{
		"EAST_NONE":  0,
		"EAST_LOW":   1,
		"EAST_TALL":  2,
		"EAST_TRUE":  3,
		"EAST_FALSE": 4,
		"EAST_UP":    5,
		"EAST_SIDE":  6,
	}
)

func (x East) Enum() *East {
	p := new(East)
	*p = x
	return p
}

func (x East) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (East) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[2].Descriptor()
}

func (East) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[2]
}

func (x East) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use East.Descriptor instead.
func (East) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{2}
}

type Face int32

const (
	Face_FACE_FLOOR   Face = 0
	Face_FACE_WALL    Face = 1
	Face_FACE_CEILING Face = 2
)

// Enum value maps for Face.
var (
	Face_name = map[int32]string{
		0: "FACE_FLOOR",
		1: "FACE_WALL",
		2: "FACE_CEILING",
	}
	Face_value = map[string]int32{
		"FACE_FLOOR":   0,
		"FACE_WALL":    1,
		"FACE_CEILING": 2,
	}
)

func (x Face) Enum() *Face {
	p := new(Face)
	*p = x
	return p
}

func (x Face) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Face) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[3].Descriptor()
}

func (Face) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[3]
}

func (x Face) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Face.Descriptor instead.
func (Face) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{3}
}

type Facing int32

const (
	Facing_FACING_NORTH Facing = 0
	Facing_FACING_SOUTH Facing = 1
	Facing_FACING_WEST  Facing = 2
	Facing_FACING_EAST  Facing = 3
	Facing_FACING_UP    Facing = 4
	Facing_FACING_DOWN  Facing = 5
)

// Enum value maps for Facing.
var (
	Facing_name = map[int32]string{
		0: "FACING_NORTH",
		1: "FACING_SOUTH",
		2: "FACING_WEST",
		3: "FACING_EAST",
		4: "FACING_UP",
		5: "FACING_DOWN",
	}
	Facing_value = map[string]int32{
		"FACING_NORTH": 0,
		"FACING_SOUTH": 1,
		"FACING_WEST":  2,
		"FACING_EAST":  3,
		"FACING_UP":    4,
		"FACING_DOWN":  5,
	}
)

func (x Facing) Enum() *Facing {
	p := new(Facing)
	*p = x
	return p
}

func (x Facing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Facing) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[4].Descriptor()
}

func (Facing) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[4]
}

func (x Facing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Facing.Descriptor instead.
func (Facing) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{4}
}

type Half int32

const (
	Half_HALF_TOP    Half = 0
	Half_HALF_BOTTOM Half = 1
	Half_HALF_UPPER  Half = 2
	Half_HALF_LOWER  Half = 3
)

// Enum value maps for Half.
var (
	Half_name = map[int32]string{
		0: "HALF_TOP",
		1: "HALF_BOTTOM",
		2: "HALF_UPPER",
		3: "HALF_LOWER",
	}
	Half_value = map[string]int32{
		"HALF_TOP":    0,
		"HALF_BOTTOM": 1,
		"HALF_UPPER":  2,
		"HALF_LOWER":  3,
	}
)

func (x Half) Enum() *Half {
	p := new(Half)
	*p = x
	return p
}

func (x Half) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Half) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[5].Descriptor()
}

func (Half) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[5]
}

func (x Half) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Half.Descriptor instead.
func (Half) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{5}
}

type Hinge int32

const (
	Hinge_HINGE_LEFT  Hinge = 0
	Hinge_HINGE_RIGHT Hinge = 1
)

// Enum value maps for Hinge.
var (
	Hinge_name = map[int32]string{
		0: "HINGE_LEFT",
		1: "HINGE_RIGHT",
	}
	Hinge_value = map[string]int32{
		"HINGE_LEFT":  0,
		"HINGE_RIGHT": 1,
	}
)

func (x Hinge) Enum() *Hinge {
	p := new(Hinge)
	*p = x
	return p
}

func (x Hinge) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hinge) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[6].Descriptor()
}

func (Hinge) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[6]
}

func (x Hinge) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hinge.Descriptor instead.
func (Hinge) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{6}
}

type Instrument int32

const (
	Instrument_INSTRUMENT_HARP            Instrument = 0
	Instrument_INSTRUMENT_BASEDRUM        Instrument = 1
	Instrument_INSTRUMENT_SNARE           Instrument = 2
	Instrument_INSTRUMENT_HAT             Instrument = 3
	Instrument_INSTRUMENT_BASS            Instrument = 4
	Instrument_INSTRUMENT_FLUTE           Instrument = 5
	Instrument_INSTRUMENT_BELL            Instrument = 6
	Instrument_INSTRUMENT_GUITAR          Instrument = 7
	Instrument_INSTRUMENT_CHIME           Instrument = 8
	Instrument_INSTRUMENT_XYLOPHONE       Instrument = 9
	Instrument_INSTRUMENT_IRON_XYLOPHONE  Instrument = 10
	Instrument_INSTRUMENT_COW_BELL        Instrument = 11
	Instrument_INSTRUMENT_DIDGERIDOO      Instrument = 12
	Instrument_INSTRUMENT_BIT             Instrument = 13
	Instrument_INSTRUMENT_BANJO           Instrument = 14
	Instrument_INSTRUMENT_PLING           Instrument = 15
	Instrument_INSTRUMENT_ZOMBIE          Instrument = 16
	Instrument_INSTRUMENT_SKELETON        Instrument = 17
	Instrument_INSTRUMENT_CREEPER         Instrument = 18
	Instrument_INSTRUMENT_DRAGON          Instrument = 19
	Instrument_INSTRUMENT_WITHER_SKELETON Instrument = 20
	Instrument_INSTRUMENT_PIGLIN          Instrument = 21
	Instrument_INSTRUMENT_CUSTOM_HEAD     Instrument = 22
)

// Enum value maps for Instrument.
var (
	Instrument_name = map[int32]string{
		0:  "INSTRUMENT_HARP",
		1:  "INSTRUMENT_BASEDRUM",
		2:  "INSTRUMENT_SNARE",
		3:  "INSTRUMENT_HAT",
		4:  "INSTRUMENT_BASS",
		5:  "INSTRUMENT_FLUTE",
		6:  "INSTRUMENT_BELL",
		7:  "INSTRUMENT_GUITAR",
		8:  "INSTRUMENT_CHIME",
		9:  "INSTRUMENT_XYLOPHONE",
		10: "INSTRUMENT_IRON_XYLOPHONE",
		11: "INSTRUMENT_COW_BELL",
		12: "INSTRUMENT_DIDGERIDOO",
		13: "INSTRUMENT_BIT",
		14: "INSTRUMENT_BANJO",
		15: "INSTRUMENT_PLING",
		16: "INSTRUMENT_ZOMBIE",
		17: "INSTRUMENT_SKELETON",
		18: "INSTRUMENT_CREEPER",
		19: "INSTRUMENT_DRAGON",
		20: "INSTRUMENT_WITHER_SKELETON",
		21: "INSTRUMENT_PIGLIN",
		22: "INSTRUMENT_CUSTOM_HEAD",
	}
	Instrument_value = map[string]int32{
		"INSTRUMENT_HARP":            0,
		"INSTRUMENT_BASEDRUM":        1,
		"INSTRUMENT_SNARE":           2,
		"INSTRUMENT_HAT":             3,
		"INSTRUMENT_BASS":            4,
		"INSTRUMENT_FLUTE":           5,
		"INSTRUMENT_BELL":            6,
		"INSTRUMENT_GUITAR":          7,
		"INSTRUMENT_CHIME":           8,
		"INSTRUMENT_XYLOPHONE":       9,
		"INSTRUMENT_IRON_XYLOPHONE":  10,
		"INSTRUMENT_COW_BELL":        11,
		"INSTRUMENT_DIDGERIDOO":      12,
		"INSTRUMENT_BIT":             13,
		"INSTRUMENT_BANJO":           14,
		"INSTRUMENT_PLING":           15,
		"INSTRUMENT_ZOMBIE":          16,
		"INSTRUMENT_SKELETON":        17,
		"INSTRUMENT_CREEPER":         18,
		"INSTRUMENT_DRAGON":          19,
		"INSTRUMENT_WITHER_SKELETON": 20,
		"INSTRUMENT_PIGLIN":          21,
		"INSTRUMENT_CUSTOM_HEAD":     22,
	}
)

func (x Instrument) Enum() *Instrument {
	p := new(Instrument)
	*p = x
	return p
}

func (x Instrument) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instrument) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[7].Descriptor()
}

func (Instrument) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[7]
}

func (x Instrument) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instrument.Descriptor instead.
func (Instrument) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{7}
}

type Leaves int32

const (
	Leaves_LEAVES_NONE  Leaves = 0
	Leaves_LEAVES_SMALL Leaves = 1
	Leaves_LEAVES_LARGE Leaves = 2
)

// Enum value maps for Leaves.
var (
	Leaves_name = map[int32]string{
		0: "LEAVES_NONE",
		1: "LEAVES_SMALL",
		2: "LEAVES_LARGE",
	}
	Leaves_value = map[string]int32{
		"LEAVES_NONE":  0,
		"LEAVES_SMALL": 1,
		"LEAVES_LARGE": 2,
	}
)

func (x Leaves) Enum() *Leaves {
	p := new(Leaves)
	*p = x
	return p
}

func (x Leaves) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Leaves) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[8].Descriptor()
}

func (Leaves) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[8]
}

func (x Leaves) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Leaves.Descriptor instead.
func (Leaves) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{8}
}

type Mode int32

const (
	Mode_MODE_SAVE     Mode = 0
	Mode_MODE_LOAD     Mode = 1
	Mode_MODE_CORNER   Mode = 2
	Mode_MODE_DATA     Mode = 3
	Mode_MODE_COMPARE  Mode = 4
	Mode_MODE_SUBTRACT Mode = 5
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "MODE_SAVE",
		1: "MODE_LOAD",
		2: "MODE_CORNER",
		3: "MODE_DATA",
		4: "MODE_COMPARE",
		5: "MODE_SUBTRACT",
	}
	Mode_value = map[string]int32{
		"MODE_SAVE":     0,
		"MODE_LOAD":     1,
		"MODE_CORNER":   2,
		"MODE_DATA":     3,
		"MODE_COMPARE":  4,
		"MODE_SUBTRACT": 5,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[9].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[9]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{9}
}

type North int32

const (
	North_NORTH_NONE  North = 0
	North_NORTH_LOW   North = 1
	North_NORTH_TALL  North = 2
	North_NORTH_TRUE  North = 3
	North_NORTH_FALSE North = 4
	North_NORTH_UP    North = 5
	North_NORTH_SIDE  North = 6
)

// Enum value maps for North.
var (
	North_name = map[int32]string{
		0: "NORTH_NONE",
		1: "NORTH_LOW",
		2: "NORTH_TALL",
		3: "NORTH_TRUE",
		4: "NORTH_FALSE",
		5: "NORTH_UP",
		6: "NORTH_SIDE",
	}
	North_value = map[string]int32{
		"NORTH_NONE":  0,
		"NORTH_LOW":   1,
		"NORTH_TALL":  2,
		"NORTH_TRUE":  3,
		"NORTH_FALSE": 4,
		"NORTH_UP":    5,
		"NORTH_SIDE":  6,
	}
)

func (x North) Enum() *North {
	p := new(North)
	*p = x
	return p
}

func (x North) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (North) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[10].Descriptor()
}

func (North) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[10]
}

func (x North) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use North.Descriptor instead.
func (North) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{10}
}

type Orientation int32

const (
	Orientation_ORIENTATION_DOWN_EAST  Orientation = 0
	Orientation_ORIENTATION_DOWN_NORTH Orientation = 1
	Orientation_ORIENTATION_DOWN_SOUTH Orientation = 2
	Orientation_ORIENTATION_DOWN_WEST  Orientation = 3
	Orientation_ORIENTATION_UP_EAST    Orientation = 4
	Orientation_ORIENTATION_UP_NORTH   Orientation = 5
	Orientation_ORIENTATION_UP_SOUTH   Orientation = 6
	Orientation_ORIENTATION_UP_WEST    Orientation = 7
	Orientation_ORIENTATION_WEST_UP    Orientation = 8
	Orientation_ORIENTATION_EAST_UP    Orientation = 9
	Orientation_ORIENTATION_NORTH_UP   Orientation = 10
	Orientation_ORIENTATION_SOUTH_UP   Orientation = 11
)

// Enum value maps for Orientation.
var (
	Orientation_name = map[int32]string{
		0:  "ORIENTATION_DOWN_EAST",
		1:  "ORIENTATION_DOWN_NORTH",
		2:  "ORIENTATION_DOWN_SOUTH",
		3:  "ORIENTATION_DOWN_WEST",
		4:  "ORIENTATION_UP_EAST",
		5:  "ORIENTATION_UP_NORTH",
		6:  "ORIENTATION_UP_SOUTH",
		7:  "ORIENTATION_UP_WEST",
		8:  "ORIENTATION_WEST_UP",
		9:  "ORIENTATION_EAST_UP",
		10: "ORIENTATION_NORTH_UP",
		11: "ORIENTATION_SOUTH_UP",
	}
	Orientation_value = map[string]int32{
		"ORIENTATION_DOWN_EAST":  0,
		"ORIENTATION_DOWN_NORTH": 1,
		"ORIENTATION_DOWN_SOUTH": 2,
		"ORIENTATION_DOWN_WEST":  3,
		"ORIENTATION_UP_EAST":    4,
		"ORIENTATION_UP_NORTH":   5,
		"ORIENTATION_UP_SOUTH":   6,
		"ORIENTATION_UP_WEST":    7,
		"ORIENTATION_WEST_UP":    8,
		"ORIENTATION_EAST_UP":    9,
		"ORIENTATION_NORTH_UP":   10,
		"ORIENTATION_SOUTH_UP":   11,
	}
)

func (x Orientation) Enum() *Orientation {
	p := new(Orientation)
	*p = x
	return p
}

func (x Orientation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Orientation) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[11].Descriptor()
}

func (Orientation) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[11]
}

func (x Orientation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Orientation.Descriptor instead.
func (Orientation) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{11}
}

type Part int32

const (
	Part_PART_HEAD Part = 0
	Part_PART_FOOT Part = 1
)

// Enum value maps for Part.
var (
	Part_name = map[int32]string{
		0: "PART_HEAD",
		1: "PART_FOOT",
	}
	Part_value = map[string]int32{
		"PART_HEAD": 0,
		"PART_FOOT": 1,
	}
)

func (x Part) Enum() *Part {
	p := new(Part)
	*p = x
	return p
}

func (x Part) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Part) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[12].Descriptor()
}

func (Part) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[12]
}

func (x Part) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Part.Descriptor instead.
func (Part) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{12}
}

type SculkSensorPhase int32

const (
	SculkSensorPhase_SCULK_SENSOR_PHASE_INACTIVE SculkSensorPhase = 0
	SculkSensorPhase_SCULK_SENSOR_PHASE_ACTIVE   SculkSensorPhase = 1
	SculkSensorPhase_SCULK_SENSOR_PHASE_COOLDOWN SculkSensorPhase = 2
)

// Enum value maps for SculkSensorPhase.
var (
	SculkSensorPhase_name = map[int32]string{
		0: "SCULK_SENSOR_PHASE_INACTIVE",
		1: "SCULK_SENSOR_PHASE_ACTIVE",
		2: "SCULK_SENSOR_PHASE_COOLDOWN",
	}
	SculkSensorPhase_value = map[string]int32{
		"SCULK_SENSOR_PHASE_INACTIVE": 0,
		"SCULK_SENSOR_PHASE_ACTIVE":   1,
		"SCULK_SENSOR_PHASE_COOLDOWN": 2,
	}
)

func (x SculkSensorPhase) Enum() *SculkSensorPhase {
	p := new(SculkSensorPhase)
	*p = x
	return p
}

func (x SculkSensorPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SculkSensorPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[13].Descriptor()
}

func (SculkSensorPhase) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[13]
}

func (x SculkSensorPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SculkSensorPhase.Descriptor instead.
func (SculkSensorPhase) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{13}
}

type Shape int32

const (
	Shape_SHAPE_NORTH_SOUTH     Shape = 0
	Shape_SHAPE_EAST_WEST       Shape = 1
	Shape_SHAPE_ASCENDING_EAST  Shape = 2
	Shape_SHAPE_ASCENDING_WEST  Shape = 3
	Shape_SHAPE_ASCENDING_NORTH Shape = 4
	Shape_SHAPE_ASCENDING_SOUTH Shape = 5
	Shape_SHAPE_SOUTH_EAST      Shape = 6
	Shape_SHAPE_SOUTH_WEST      Shape = 7
	Shape_SHAPE_NORTH_WEST      Shape = 8
	Shape_SHAPE_NORTH_EAST      Shape = 9
	Shape_SHAPE_STRAIGHT        Shape = 10
	Shape_SHAPE_INNER_LEFT      Shape = 11
	Shape_SHAPE_INNER_RIGHT     Shape = 12
	Shape_SHAPE_OUTER_LEFT      Shape = 13
	Shape_SHAPE_OUTER_RIGHT     Shape = 14
)

// Enum value maps for Shape.
var (
	Shape_name = map[int32]string{
		0:  "SHAPE_NORTH_SOUTH",
		1:  "SHAPE_EAST_WEST",
		2:  "SHAPE_ASCENDING_EAST",
		3:  "SHAPE_ASCENDING_WEST",
		4:  "SHAPE_ASCENDING_NORTH",
		5:  "SHAPE_ASCENDING_SOUTH",
		6:  "SHAPE_SOUTH_EAST",
		7:  "SHAPE_SOUTH_WEST",
		8:  "SHAPE_NORTH_WEST",
		9:  "SHAPE_NORTH_EAST",
		10: "SHAPE_STRAIGHT",
		11: "SHAPE_INNER_LEFT",
		12: "SHAPE_INNER_RIGHT",
		13: "SHAPE_OUTER_LEFT",
		14: "SHAPE_OUTER_RIGHT",
	}
	Shape_value = map[string]int32{
		"SHAPE_NORTH_SOUTH":     0,
		"SHAPE_EAST_WEST":       1,
		"SHAPE_ASCENDING_EAST":  2,
		"SHAPE_ASCENDING_WEST":  3,
		"SHAPE_ASCENDING_NORTH": 4,
		"SHAPE_ASCENDING_SOUTH": 5,
		"SHAPE_SOUTH_EAST":      6,
		"SHAPE_SOUTH_WEST":      7,
		"SHAPE_NORTH_WEST":      8,
		"SHAPE_NORTH_EAST":      9,
		"SHAPE_STRAIGHT":        10,
		"SHAPE_INNER_LEFT":      11,
		"SHAPE_INNER_RIGHT":     12,
		"SHAPE_OUTER_LEFT":      13,
		"SHAPE_OUTER_RIGHT":     14,
	}
)

func (x Shape) Enum() *Shape {
	p := new(Shape)
	*p = x
	return p
}

func (x Shape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shape) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[14].Descriptor()
}

func (Shape) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[14]
}

func (x Shape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shape.Descriptor instead.
func (Shape) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{14}
}

type South int32

const (
	South_SOUTH_NONE  South = 0
	South_SOUTH_LOW   South = 1
	South_SOUTH_TALL  South = 2
	South_SOUTH_TRUE  South = 3
	South_SOUTH_FALSE South = 4
	South_SOUTH_UP    South = 5
	South_SOUTH_SIDE  South = 6
)

// Enum value maps for South.
var (
	South_name = map[int32]string{
		0: "SOUTH_NONE",
		1: "SOUTH_LOW",
		2: "SOUTH_TALL",
		3: "SOUTH_TRUE",
		4: "SOUTH_FALSE",
		5: "SOUTH_UP",
		6: "SOUTH_SIDE",
	}
	South_value = map[string]int32{
		"SOUTH_NONE":  0,
		"SOUTH_LOW":   1,
		"SOUTH_TALL":  2,
		"SOUTH_TRUE":  3,
		"SOUTH_FALSE": 4,
		"SOUTH_UP":    5,
		"SOUTH_SIDE":  6,
	}
)

func (x South) Enum() *South {
	p := new(South)
	*p = x
	return p
}

func (x South) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (South) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[15].Descriptor()
}

func (South) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[15]
}

func (x South) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use South.Descriptor instead.
func (South) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{15}
}

type Thickness int32

const (
	Thickness_THICKNESS_TIP_MERGE Thickness = 0
	Thickness_THICKNESS_TIP       Thickness = 1
	Thickness_THICKNESS_FRUSTUM   Thickness = 2
	Thickness_THICKNESS_MIDDLE    Thickness = 3
	Thickness_THICKNESS_BASE      Thickness = 4
)

// Enum value maps for Thickness.
var (
	Thickness_name = map[int32]string{
		0: "THICKNESS_TIP_MERGE",
		1: "THICKNESS_TIP",
		2: "THICKNESS_FRUSTUM",
		3: "THICKNESS_MIDDLE",
		4: "THICKNESS_BASE",
	}
	Thickness_value = map[string]int32{
		"THICKNESS_TIP_MERGE": 0,
		"THICKNESS_TIP":       1,
		"THICKNESS_FRUSTUM":   2,
		"THICKNESS_MIDDLE":    3,
		"THICKNESS_BASE":      4,
	}
)

func (x Thickness) Enum() *Thickness {
	p := new(Thickness)
	*p = x
	return p
}

func (x Thickness) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Thickness) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[16].Descriptor()
}

func (Thickness) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[16]
}

func (x Thickness) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Thickness.Descriptor instead.
func (Thickness) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{16}
}

type Tilt int32

const (
	Tilt_TILT_NONE     Tilt = 0
	Tilt_TILT_UNSTABLE Tilt = 1
	Tilt_TILT_PARTIAL  Tilt = 2
	Tilt_TILT_FULL     Tilt = 3
)

// Enum value maps for Tilt.
var (
	Tilt_name = map[int32]string{
		0: "TILT_NONE",
		1: "TILT_UNSTABLE",
		2: "TILT_PARTIAL",
		3: "TILT_FULL",
	}
	Tilt_value = map[string]int32{
		"TILT_NONE":     0,
		"TILT_UNSTABLE": 1,
		"TILT_PARTIAL":  2,
		"TILT_FULL":     3,
	}
)

func (x Tilt) Enum() *Tilt {
	p := new(Tilt)
	*p = x
	return p
}

func (x Tilt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tilt) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[17].Descriptor()
}

func (Tilt) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[17]
}

func (x Tilt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tilt.Descriptor instead.
func (Tilt) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{17}
}

type TrialSpawnerState int32

const (
	TrialSpawnerState_TRIAL_SPAWNER_STATE_INACTIVE                    TrialSpawnerState = 0
	TrialSpawnerState_TRIAL_SPAWNER_STATE_WAITING_FOR_PLAYERS         TrialSpawnerState = 1
	TrialSpawnerState_TRIAL_SPAWNER_STATE_ACTIVE                      TrialSpawnerState = 2
	TrialSpawnerState_TRIAL_SPAWNER_STATE_WAITING_FOR_REWARD_EJECTION TrialSpawnerState = 3
	TrialSpawnerState_TRIAL_SPAWNER_STATE_EJECTING_REWARD             TrialSpawnerState = 4
	TrialSpawnerState_TRIAL_SPAWNER_STATE_COOLDOWN                    TrialSpawnerState = 5
)

// Enum value maps for TrialSpawnerState.
var (
	TrialSpawnerState_name = map[int32]string{
		0: "TRIAL_SPAWNER_STATE_INACTIVE",
		1: "TRIAL_SPAWNER_STATE_WAITING_FOR_PLAYERS",
		2: "TRIAL_SPAWNER_STATE_ACTIVE",
		3: "TRIAL_SPAWNER_STATE_WAITING_FOR_REWARD_EJECTION",
		4: "TRIAL_SPAWNER_STATE_EJECTING_REWARD",
		5: "TRIAL_SPAWNER_STATE_COOLDOWN",
	}
	TrialSpawnerState_value = map[string]int32{
		"TRIAL_SPAWNER_STATE_INACTIVE":                    0,
		"TRIAL_SPAWNER_STATE_WAITING_FOR_PLAYERS":         1,
		"TRIAL_SPAWNER_STATE_ACTIVE":                      2,
		"TRIAL_SPAWNER_STATE_WAITING_FOR_REWARD_EJECTION": 3,
		"TRIAL_SPAWNER_STATE_EJECTING_REWARD":             4,
		"TRIAL_SPAWNER_STATE_COOLDOWN":                    5,
	}
)

func (x TrialSpawnerState) Enum() *TrialSpawnerState {
	p := new(TrialSpawnerState)
	*p = x
	return p
}

func (x TrialSpawnerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrialSpawnerState) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[18].Descriptor()
}

func (TrialSpawnerState) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[18]
}

func (x TrialSpawnerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrialSpawnerState.Descriptor instead.
func (TrialSpawnerState) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{18}
}

type Type int32

const (
	Type_TYPE_TOP    Type = 0
	Type_TYPE_BOTTOM Type = 1
	Type_TYPE_DOUBLE Type = 2
	Type_TYPE_NORMAL Type = 3
	Type_TYPE_SINGLE Type = 4
	Type_TYPE_STICKY Type = 5
	Type_TYPE_LEFT   Type = 6
	Type_TYPE_RIGHT  Type = 7
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "TYPE_TOP",
		1: "TYPE_BOTTOM",
		2: "TYPE_DOUBLE",
		3: "TYPE_NORMAL",
		4: "TYPE_SINGLE",
		5: "TYPE_STICKY",
		6: "TYPE_LEFT",
		7: "TYPE_RIGHT",
	}
	Type_value = map[string]int32{
		"TYPE_TOP":    0,
		"TYPE_BOTTOM": 1,
		"TYPE_DOUBLE": 2,
		"TYPE_NORMAL": 3,
		"TYPE_SINGLE": 4,
		"TYPE_STICKY": 5,
		"TYPE_LEFT":   6,
		"TYPE_RIGHT":  7,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[19].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[19]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{19}
}

type VerticalDirection int32

const (
	VerticalDirection_VERTICAL_DIRECTION_UP   VerticalDirection = 0
	VerticalDirection_VERTICAL_DIRECTION_DOWN VerticalDirection = 1
)

// Enum value maps for VerticalDirection.
var (
	VerticalDirection_name = map[int32]string{
		0: "VERTICAL_DIRECTION_UP",
		1: "VERTICAL_DIRECTION_DOWN",
	}
	VerticalDirection_value = map[string]int32{
		"VERTICAL_DIRECTION_UP":   0,
		"VERTICAL_DIRECTION_DOWN": 1,
	}
)

func (x VerticalDirection) Enum() *VerticalDirection {
	p := new(VerticalDirection)
	*p = x
	return p
}

func (x VerticalDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerticalDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[20].Descriptor()
}

func (VerticalDirection) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[20]
}

func (x VerticalDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerticalDirection.Descriptor instead.
func (VerticalDirection) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{20}
}

type West int32

const (
	West_WEST_NONE  West = 0
	West_WEST_LOW   West = 1
	West_WEST_TALL  West = 2
	West_WEST_TRUE  West = 3
	West_WEST_FALSE West = 4
	West_WEST_UP    West = 5
	West_WEST_SIDE  West = 6
)

// Enum value maps for West.
var (
	West_name = map[int32]string{
		0: "WEST_NONE",
		1: "WEST_LOW",
		2: "WEST_TALL",
		3: "WEST_TRUE",
		4: "WEST_FALSE",
		5: "WEST_UP",
		6: "WEST_SIDE",
	}
	West_value = map[string]int32{
		"WEST_NONE":  0,
		"WEST_LOW":   1,
		"WEST_TALL":  2,
		"WEST_TRUE":  3,
		"WEST_FALSE": 4,
		"WEST_UP":    5,
		"WEST_SIDE":  6,
	}
)

func (x West) Enum() *West {
	p := new(West)
	*p = x
	return p
}

func (x West) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (West) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[21].Descriptor()
}

func (West) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[21]
}

func (x West) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use West.Descriptor instead.
func (West) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{21}
}

type Material int32

const (
	Material_CUT_COPPER_SLAB                    Material = 0
	Material_LIGHT_GRAY_WOOL                    Material = 1
	Material_LILY_PAD                           Material = 2
	Material_MANGROVE_LEAVES                    Material = 3
	Material_POLISHED_DEEPSLATE_WALL            Material = 4
	Material_CONDUIT                            Material = 5
	Material_TURTLE_EGG                         Material = 6
	Material_WAXED_OXIDIZED_COPPER_TRAPDOOR     Material = 7
	Material_EXPOSED_COPPER_DOOR                Material = 8
	Material_OAK_BUTTON                         Material = 9
	Material_PINK_SHULKER_BOX                   Material = 10
	Material_BROWN_CONCRETE_POWDER              Material = 11
	Material_CYAN_STAINED_GLASS                 Material = 12
	Material_LARGE_AMETHYST_BUD                 Material = 13
	Material_WEATHERED_COPPER_BULB              Material = 14
	Material_WHITE_STAINED_GLASS_PANE           Material = 15
	Material_EXPOSED_COPPER                     Material = 16
	Material_JUKEBOX                            Material = 17
	Material_WEATHERED_COPPER_DOOR              Material = 18
	Material_WAXED_WEATHERED_COPPER_DOOR        Material = 19
	Material_OAK_DOOR                           Material = 20
	Material_ORANGE_STAINED_GLASS               Material = 21
	Material_POLISHED_DEEPSLATE                 Material = 22
	Material_POTTED_ALLIUM                      Material = 23
	Material_POTTED_WITHER_ROSE                 Material = 24
	Material_PEONY                              Material = 25
	Material_TUFF_BRICK_WALL                    Material = 26
	Material_WAXED_WEATHERED_CUT_COPPER         Material = 27
	Material_BLUE_ICE                           Material = 28
	Material_FERN                               Material = 29
	Material_INFESTED_STONE                     Material = 30
	Material_LIME_GLAZED_TERRACOTTA             Material = 31
	Material_ORANGE_SHULKER_BOX                 Material = 32
	Material_COAL_ORE                           Material = 33
	Material_DEEPSLATE                          Material = 34
	Material_RED_MUSHROOM                       Material = 35
	Material_LIGHT_BLUE_GLAZED_TERRACOTTA       Material = 36
	Material_LIGHT_GRAY_CANDLE_CAKE             Material = 37
	Material_OAK_WALL_SIGN                      Material = 38
	Material_PLAYER_WALL_HEAD                   Material = 39
	Material_PURPUR_STAIRS                      Material = 40
	Material_BAMBOO_DOOR                        Material = 41
	Material_BLACK_CARPET                       Material = 42
	Material_DEAD_BUBBLE_CORAL_WALL_FAN         Material = 43
	Material_GRAY_STAINED_GLASS                 Material = 44
	Material_GREEN_CONCRETE_POWDER              Material = 45
	Material_COMPOSTER                          Material = 46
	Material_DIORITE_STAIRS                     Material = 47
	Material_JUNGLE_STAIRS                      Material = 48
	Material_POLISHED_GRANITE                   Material = 49
	Material_BRICKS                             Material = 50
	Material_CHIPPED_ANVIL                      Material = 51
	Material_DARK_OAK_FENCE                     Material = 52
	Material_LAVA_CAULDRON                      Material = 53
	Material_SMOOTH_RED_SANDSTONE               Material = 54
	Material_BLUE_CANDLE                        Material = 55
	Material_GRAY_BANNER                        Material = 56
	Material_SNOW_BLOCK                         Material = 57
	Material_YELLOW_STAINED_GLASS               Material = 58
	Material_WITHER_ROSE                        Material = 59
	Material_YELLOW_SHULKER_BOX                 Material = 60
	Material_CHERRY_STAIRS                      Material = 61
	Material_END_PORTAL                         Material = 62
	Material_NETHER_PORTAL                      Material = 63
	Material_OBSIDIAN                           Material = 64
	Material_POWDER_SNOW                        Material = 65
	Material_EMERALD_ORE                        Material = 66
	Material_LIGHT_GRAY_WALL_BANNER             Material = 67
	Material_PINK_TERRACOTTA                    Material = 68
	Material_TWISTING_VINES                     Material = 69
	Material_JACK_O_LANTERN                     Material = 70
	Material_AZALEA                             Material = 71
	Material_BAMBOO_WALL_SIGN                   Material = 72
	Material_DIAMOND_ORE                        Material = 73
	Material_OAK_STAIRS                         Material = 74
	Material_COBBLESTONE_STAIRS                 Material = 75
	Material_FIRE_CORAL_WALL_FAN                Material = 76
	Material_GREEN_BED                          Material = 77
	Material_JUNGLE_BUTTON                      Material = 78
	Material_MANGROVE_WOOD                      Material = 79
	Material_RESPAWN_ANCHOR                     Material = 80
	Material_YELLOW_GLAZED_TERRACOTTA           Material = 81
	Material_BROWN_BED                          Material = 82
	Material_BROWN_CONCRETE                     Material = 83
	Material_CHERRY_LOG                         Material = 84
	Material_NETHER_BRICK_WALL                  Material = 85
	Material_OAK_WALL_HANGING_SIGN              Material = 86
	Material_CRIMSON_STEM                       Material = 87
	Material_DRAGON_EGG                         Material = 88
	Material_PINK_TULIP                         Material = 89
	Material_ATTACHED_MELON_STEM                Material = 90
	Material_BIRCH_SLAB                         Material = 91
	Material_POTTED_DEAD_BUSH                   Material = 92
	Material_RED_NETHER_BRICKS                  Material = 93
	Material_TUBE_CORAL_WALL_FAN                Material = 94
	Material_BEDROCK                            Material = 95
	Material_BROWN_STAINED_GLASS_PANE           Material = 96
	Material_CHERRY_PLANKS                      Material = 97
	Material_DARK_OAK_SAPLING                   Material = 98
	Material_OAK_LEAVES                         Material = 99
	Material_CRYING_OBSIDIAN                    Material = 100
	Material_KELP                               Material = 101
	Material_BAMBOO_SLAB                        Material = 102
	Material_CHERRY_SIGN                        Material = 103
	Material_LIGHT_GRAY_CANDLE                  Material = 104
	Material_OXIDIZED_CHISELED_COPPER           Material = 105
	Material_FIRE_CORAL_BLOCK                   Material = 106
	Material_MOSSY_STONE_BRICK_WALL             Material = 107
	Material_PINK_CONCRETE                      Material = 108
	Material_STRIPPED_DARK_OAK_WOOD             Material = 109
	Material_WAXED_CHISELED_COPPER              Material = 110
	Material_GOLD_ORE                           Material = 111
	Material_ORANGE_WALL_BANNER                 Material = 112
	Material_POLISHED_TUFF_STAIRS               Material = 113
	Material_PURPLE_CANDLE                      Material = 114
	Material_WARPED_BUTTON                      Material = 115
	Material_DEAD_TUBE_CORAL_FAN                Material = 116
	Material_MOSSY_COBBLESTONE_WALL             Material = 117
	Material_RED_STAINED_GLASS                  Material = 118
	Material_WHITE_STAINED_GLASS                Material = 119
	Material_ACACIA_BUTTON                      Material = 120
	Material_GRAY_CONCRETE                      Material = 121
	Material_RED_TERRACOTTA                     Material = 122
	Material_ROSE_BUSH                          Material = 123
	Material_WAXED_OXIDIZED_CUT_COPPER_STAIRS   Material = 124
	Material_WAXED_COPPER_GRATE                 Material = 125
	Material_WHITE_CONCRETE_POWDER              Material = 126
	Material_BRICK_SLAB                         Material = 127
	Material_CRIMSON_HYPHAE                     Material = 128
	Material_DARK_OAK_BUTTON                    Material = 129
	Material_DEEPSLATE_BRICK_WALL               Material = 130
	Material_RED_SANDSTONE_STAIRS               Material = 131
	Material_SMOOTH_QUARTZ_STAIRS               Material = 132
	Material_TWISTING_VINES_PLANT               Material = 133
	Material_BROWN_SHULKER_BOX                  Material = 134
	Material_COPPER_DOOR                        Material = 135
	Material_DETECTOR_RAIL                      Material = 136
	Material_LIME_BED                           Material = 137
	Material_MANGROVE_FENCE                     Material = 138
	Material_QUARTZ_BRICKS                      Material = 139
	Material_ANDESITE_SLAB                      Material = 140
	Material_CHORUS_PLANT                       Material = 141
	Material_JUNGLE_LOG                         Material = 142
	Material_OAK_PRESSURE_PLATE                 Material = 143
	Material_PINK_BANNER                        Material = 144
	Material_GREEN_SHULKER_BOX                  Material = 145
	Material_OAK_PLANKS                         Material = 146
	Material_TORCHFLOWER_CROP                   Material = 147
	Material_CHAIN_COMMAND_BLOCK                Material = 148
	Material_LIGHTNING_ROD                      Material = 149
	Material_PODZOL                             Material = 150
	Material_RED_CANDLE                         Material = 151
	Material_RED_WALL_BANNER                    Material = 152
	Material_DRIED_KELP_BLOCK                   Material = 153
	Material_SKELETON_WALL_SKULL                Material = 154
	Material_STICKY_PISTON                      Material = 155
	Material_POTTED_CORNFLOWER                  Material = 156
	Material_WAXED_COPPER_TRAPDOOR              Material = 157
	Material_DEEPSLATE_BRICK_STAIRS             Material = 158
	Material_GREEN_WOOL                         Material = 159
	Material_IRON_TRAPDOOR                      Material = 160
	Material_POTTED_DANDELION                   Material = 161
	Material_POTTED_WARPED_FUNGUS               Material = 162
	Material_BAMBOO_PLANKS                      Material = 163
	Material_CHISELED_QUARTZ_BLOCK              Material = 164
	Material_CRIMSON_NYLIUM                     Material = 165
	Material_POTTED_CACTUS                      Material = 166
	Material_WARPED_HYPHAE                      Material = 167
	Material_CALCITE                            Material = 168
	Material_WAXED_EXPOSED_COPPER_GRATE         Material = 169
	Material_YELLOW_CARPET                      Material = 170
	Material_ACTIVATOR_RAIL                     Material = 171
	Material_END_STONE_BRICK_SLAB               Material = 172
	Material_FARMLAND                           Material = 173
	Material_STRIPPED_BIRCH_LOG                 Material = 174
	Material_BLUE_ORCHID                        Material = 175
	Material_CRACKED_STONE_BRICKS               Material = 176
	Material_PITCHER_PLANT                      Material = 177
	Material_SHORT_GRASS                        Material = 178
	Material_REDSTONE_ORE                       Material = 179
	Material_WAXED_OXIDIZED_COPPER_GRATE        Material = 180
	Material_WHITE_GLAZED_TERRACOTTA            Material = 181
	Material_BIRCH_TRAPDOOR                     Material = 182
	Material_CRIMSON_ROOTS                      Material = 183
	Material_LIGHT_BLUE_WALL_BANNER             Material = 184
	Material_OAK_SIGN                           Material = 185
	Material_PIGLIN_HEAD                        Material = 186
	Material_MAGENTA_CONCRETE_POWDER            Material = 187
	Material_RED_CONCRETE_POWDER                Material = 188
	Material_WAXED_EXPOSED_COPPER_BULB          Material = 189
	Material_CARVED_PUMPKIN                     Material = 190
	Material_COBBLED_DEEPSLATE_WALL             Material = 191
	Material_COPPER_BULB                        Material = 192
	Material_LIGHT_BLUE_SHULKER_BOX             Material = 193
	Material_LIGHT_BLUE_STAINED_GLASS           Material = 194
	Material_SMOOTH_STONE                       Material = 195
	Material_SPRUCE_LOG                         Material = 196
	Material_WHITE_CANDLE_CAKE                  Material = 197
	Material_CRAFTING_TABLE                     Material = 198
	Material_DIORITE                            Material = 199
	Material_LIGHT_GRAY_STAINED_GLASS_PANE      Material = 200
	Material_LIME_STAINED_GLASS_PANE            Material = 201
	Material_NETHER_SPROUTS                     Material = 202
	Material_BLACK_CANDLE_CAKE                  Material = 203
	Material_CHISELED_SANDSTONE                 Material = 204
	Material_CRIMSON_WALL_SIGN                  Material = 205
	Material_GLASS_PANE                         Material = 206
	Material_SUNFLOWER                          Material = 207
	Material_BLACK_WOOL                         Material = 208
	Material_DEAD_HORN_CORAL                    Material = 209
	Material_EXPOSED_CHISELED_COPPER            Material = 210
	Material_GLOW_LICHEN                        Material = 211
	Material_POTTED_BLUE_ORCHID                 Material = 212
	Material_BUBBLE_CORAL                       Material = 213
	Material_IRON_DOOR                          Material = 214
	Material_POTTED_WHITE_TULIP                 Material = 215
	Material_BLACKSTONE_WALL                    Material = 216
	Material_BLUE_BANNER                        Material = 217
	Material_SMITHING_TABLE                     Material = 218
	Material_REINFORCED_DEEPSLATE               Material = 219
	Material_BAMBOO_SIGN                        Material = 220
	Material_BLACKSTONE_SLAB                    Material = 221
	Material_CUT_COPPER                         Material = 222
	Material_DARK_OAK_LEAVES                    Material = 223
	Material_MANGROVE_SLAB                      Material = 224
	Material_BEETROOTS                          Material = 225
	Material_DEEPSLATE_LAPIS_ORE                Material = 226
	Material_GRINDSTONE                         Material = 227
	Material_POWERED_RAIL                       Material = 228
	Material_BARRIER                            Material = 229
	Material_GILDED_BLACKSTONE                  Material = 230
	Material_WARPED_NYLIUM                      Material = 231
	Material_CACTUS                             Material = 232
	Material_HAY_BLOCK                          Material = 233
	Material_POLISHED_GRANITE_STAIRS            Material = 234
	Material_JUNGLE_SIGN                        Material = 235
	Material_JUNGLE_WALL_HANGING_SIGN           Material = 236
	Material_BIRCH_PRESSURE_PLATE               Material = 237
	Material_POTTED_FLOWERING_AZALEA_BUSH       Material = 238
	Material_SAND                               Material = 239
	Material_SNOW                               Material = 240
	Material_BIRCH_FENCE_GATE                   Material = 241
	Material_CHERRY_SAPLING                     Material = 242
	Material_CRACKED_DEEPSLATE_TILES            Material = 243
	Material_LIGHT_GRAY_CONCRETE_POWDER         Material = 244
	Material_RED_SANDSTONE_SLAB                 Material = 245
	Material_COMPARATOR                         Material = 246
	Material_CYAN_SHULKER_BOX                   Material = 247
	Material_INFESTED_CRACKED_STONE_BRICKS      Material = 248
	Material_ANDESITE_WALL                      Material = 249
	Material_ATTACHED_PUMPKIN_STEM              Material = 250
	Material_LIME_WALL_BANNER                   Material = 251
	Material_SMOOTH_SANDSTONE_SLAB              Material = 252
	Material_STONECUTTER                        Material = 253
	Material_WAXED_WEATHERED_CUT_COPPER_SLAB    Material = 254
	Material_GRANITE_WALL                       Material = 255
	Material_WHITE_BED                          Material = 256
	Material_GREEN_WALL_BANNER                  Material = 257
	Material_RED_CANDLE_CAKE                    Material = 258
	Material_LIGHT_GRAY_GLAZED_TERRACOTTA       Material = 259
	Material_POTTED_DARK_OAK_SAPLING            Material = 260
	Material_COPPER_ORE                         Material = 261
	Material_POTTED_AZURE_BLUET                 Material = 262
	Material_BIRCH_DOOR                         Material = 263
	Material_BONE_BLOCK                         Material = 264
	Material_GRAY_WOOL                          Material = 265
	Material_JUNGLE_SLAB                        Material = 266
	Material_COPPER_BLOCK                       Material = 267
	Material_DEEPSLATE_BRICK_SLAB               Material = 268
	Material_LIGHT_GRAY_SHULKER_BOX             Material = 269
	Material_STRIPPED_CHERRY_WOOD               Material = 270
	Material_BIRCH_LEAVES                       Material = 271
	Material_HORN_CORAL_BLOCK                   Material = 272
	Material_JUNGLE_WOOD                        Material = 273
	Material_QUARTZ_SLAB                        Material = 274
	Material_WEATHERED_CUT_COPPER_SLAB          Material = 275
	Material_BLUE_STAINED_GLASS                 Material = 276
	Material_DARK_OAK_FENCE_GATE                Material = 277
	Material_DEAD_TUBE_CORAL_BLOCK              Material = 278
	Material_MANGROVE_WALL_SIGN                 Material = 279
	Material_OXEYE_DAISY                        Material = 280
	Material_BAMBOO_SAPLING                     Material = 281
	Material_DARK_OAK_WOOD                      Material = 282
	Material_HORN_CORAL_WALL_FAN                Material = 283
	Material_IRON_BLOCK                         Material = 284
	Material_OXIDIZED_COPPER_DOOR               Material = 285
	Material_PINK_WALL_BANNER                   Material = 286
	Material_PURPUR_PILLAR                      Material = 287
	Material_WAXED_OXIDIZED_COPPER              Material = 288
	Material_ACACIA_FENCE_GATE                  Material = 289
	Material_CHISELED_COPPER                    Material = 290
	Material_LIME_CANDLE                        Material = 291
	Material_BIRCH_WALL_HANGING_SIGN            Material = 292
	Material_DROPPER                            Material = 293
	Material_LIGHT_BLUE_BED                     Material = 294
	Material_REPEATING_COMMAND_BLOCK            Material = 295
	Material_WAXED_WEATHERED_COPPER_GRATE       Material = 296
	Material_SPONGE                             Material = 297
	Material_SPRUCE_SIGN                        Material = 298
	Material_TUBE_CORAL_FAN                     Material = 299
	Material_ALLIUM                             Material = 300
	Material_BAMBOO_WALL_HANGING_SIGN           Material = 301
	Material_BIRCH_FENCE                        Material = 302
	Material_LIGHT_GRAY_BED                     Material = 303
	Material_LIME_CANDLE_CAKE                   Material = 304
	Material_DARK_PRISMARINE_SLAB               Material = 305
	Material_END_STONE                          Material = 306
	Material_SWEET_BERRY_BUSH                   Material = 307
	Material_WARPED_TRAPDOOR                    Material = 308
	Material_WHITE_TERRACOTTA                   Material = 309
	Material_MAGENTA_SHULKER_BOX                Material = 310
	Material_RAW_GOLD_BLOCK                     Material = 311
	Material_SOUL_FIRE                          Material = 312
	Material_SOUL_TORCH                         Material = 313
	Material_SPRUCE_FENCE                       Material = 314
	Material_OBSERVER                           Material = 315
	Material_WEATHERED_CUT_COPPER_STAIRS        Material = 316
	Material_TRIAL_SPAWNER                      Material = 317
	Material_CUT_RED_SANDSTONE_SLAB             Material = 318
	Material_GRANITE_STAIRS                     Material = 319
	Material_LIME_WOOL                          Material = 320
	Material_MAGENTA_CONCRETE                   Material = 321
	Material_OAK_HANGING_SIGN                   Material = 322
	Material_CARROTS                            Material = 323
	Material_DEAD_HORN_CORAL_BLOCK              Material = 324
	Material_NETHER_GOLD_ORE                    Material = 325
	Material_ORANGE_STAINED_GLASS_PANE          Material = 326
	Material_COBBLESTONE_WALL                   Material = 327
	Material_JUNGLE_TRAPDOOR                    Material = 328
	Material_STONE_STAIRS                       Material = 329
	Material_MANGROVE_HANGING_SIGN              Material = 330
	Material_MUD_BRICKS                         Material = 331
	Material_STRIPPED_JUNGLE_WOOD               Material = 332
	Material_AZALEA_LEAVES                      Material = 333
	Material_BAMBOO_MOSAIC_STAIRS               Material = 334
	Material_BEEHIVE                            Material = 335
	Material_HANGING_ROOTS                      Material = 336
	Material_INFESTED_DEEPSLATE                 Material = 337
	Material_CHERRY_FENCE                       Material = 338
	Material_LECTERN                            Material = 339
	Material_LILAC                              Material = 340
	Material_CHERRY_FENCE_GATE                  Material = 341
	Material_LADDER                             Material = 342
	Material_LIGHT_GRAY_CONCRETE                Material = 343
	Material_OAK_FENCE                          Material = 344
	Material_PITCHER_CROP                       Material = 345
	Material_BIRCH_HANGING_SIGN                 Material = 346
	Material_DEAD_FIRE_CORAL_BLOCK              Material = 347
	Material_LILY_OF_THE_VALLEY                 Material = 348
	Material_CHERRY_WOOD                        Material = 349
	Material_VINE                               Material = 350
	Material_WAXED_OXIDIZED_CUT_COPPER_SLAB     Material = 351
	Material_PRISMARINE                         Material = 352
	Material_TINTED_GLASS                       Material = 353
	Material_BLUE_GLAZED_TERRACOTTA             Material = 354
	Material_LIGHT_BLUE_TERRACOTTA              Material = 355
	Material_MANGROVE_PROPAGULE                 Material = 356
	Material_PACKED_ICE                         Material = 357
	Material_DEAD_BRAIN_CORAL                   Material = 358
	Material_SMOOTH_SANDSTONE_STAIRS            Material = 359
	Material_RED_GLAZED_TERRACOTTA              Material = 360
	Material_RED_NETHER_BRICK_SLAB              Material = 361
	Material_REDSTONE_LAMP                      Material = 362
	Material_ACACIA_WALL_SIGN                   Material = 363
	Material_BIG_DRIPLEAF_STEM                  Material = 364
	Material_CHISELED_TUFF                      Material = 365
	Material_FLOWERING_AZALEA_LEAVES            Material = 366
	Material_MANGROVE_DOOR                      Material = 367
	Material_SPRUCE_LEAVES                      Material = 368
	Material_STRIPPED_CRIMSON_STEM              Material = 369
	Material_LAPIS_BLOCK                        Material = 370
	Material_PRISMARINE_STAIRS                  Material = 371
	Material_QUARTZ_PILLAR                      Material = 372
	Material_LODESTONE                          Material = 373
	Material_STRIPPED_BAMBOO_BLOCK              Material = 374
	Material_BLUE_BED                           Material = 375
	Material_CARTOGRAPHY_TABLE                  Material = 376
	Material_DEAD_BUBBLE_CORAL_BLOCK            Material = 377
	Material_END_STONE_BRICK_STAIRS             Material = 378
	Material_OAK_FENCE_GATE                     Material = 379
	Material_DEEPSLATE_IRON_ORE                 Material = 380
	Material_DEEPSLATE_TILE_SLAB                Material = 381
	Material_POLISHED_GRANITE_SLAB              Material = 382
	Material_WAXED_OXIDIZED_CHISELED_COPPER     Material = 383
	Material_AZURE_BLUET                        Material = 384
	Material_CUT_SANDSTONE                      Material = 385
	Material_LIME_BANNER                        Material = 386
	Material_SEA_LANTERN                        Material = 387
	Material_BRAIN_CORAL_WALL_FAN               Material = 388
	Material_LIME_CARPET                        Material = 389
	Material_MAGENTA_BED                        Material = 390
	Material_BROWN_MUSHROOM_BLOCK               Material = 391
	Material_DEAD_BUBBLE_CORAL                  Material = 392
	Material_GREEN_TERRACOTTA                   Material = 393
	Material_PINK_CANDLE_CAKE                   Material = 394
	Material_WHITE_CONCRETE                     Material = 395
	Material_BEACON                             Material = 396
	Material_BLACK_BED                          Material = 397
	Material_CYAN_BANNER                        Material = 398
	Material_SMOOTH_QUARTZ                      Material = 399
	Material_WAXED_OXIDIZED_COPPER_DOOR         Material = 400
	Material_LOOM                               Material = 401
	Material_NETHER_BRICK_STAIRS                Material = 402
	Material_ORANGE_GLAZED_TERRACOTTA           Material = 403
	Material_STONE_SLAB                         Material = 404
	Material_CAULDRON                           Material = 405
	Material_CORNFLOWER                         Material = 406
	Material_DEAD_FIRE_CORAL_FAN                Material = 407
	Material_GREEN_CONCRETE                     Material = 408
	Material_POINTED_DRIPSTONE                  Material = 409
	Material_CHORUS_FLOWER                      Material = 410
	Material_HOPPER                             Material = 411
	Material_RAW_COPPER_BLOCK                   Material = 412
	Material_WEATHERED_CUT_COPPER               Material = 413
	Material_CHAIN                              Material = 414
	Material_DEAD_BUBBLE_CORAL_FAN              Material = 415
	Material_DEEPSLATE_COAL_ORE                 Material = 416
	Material_YELLOW_BANNER                      Material = 417
	Material_BREWING_STAND                      Material = 418
	Material_DIORITE_WALL                       Material = 419
	Material_SPRUCE_HANGING_SIGN                Material = 420
	Material_STRIPPED_DARK_OAK_LOG              Material = 421
	Material_STRUCTURE_VOID                     Material = 422
	Material_SMOOTH_STONE_SLAB                  Material = 423
	Material_WARPED_WALL_HANGING_SIGN           Material = 424
	Material_WARPED_WART_BLOCK                  Material = 425
	Material_BLAST_FURNACE                      Material = 426
	Material_LIGHT_GRAY_TERRACOTTA              Material = 427
	Material_MAGENTA_CANDLE                     Material = 428
	Material_MOSSY_STONE_BRICK_STAIRS           Material = 429
	Material_RED_NETHER_BRICK_STAIRS            Material = 430
	Material_STRIPPED_CHERRY_LOG                Material = 431
	Material_STRIPPED_WARPED_STEM               Material = 432
	Material_CHISELED_BOOKSHELF                 Material = 433
	Material_COMMAND_BLOCK                      Material = 434
	Material_LIME_CONCRETE_POWDER               Material = 435
	Material_MANGROVE_TRAPDOOR                  Material = 436
	Material_MELON_STEM                         Material = 437
	Material_COBBLED_DEEPSLATE_STAIRS           Material = 438
	Material_WHITE_CANDLE                       Material = 439
	Material_POLISHED_BLACKSTONE_BRICK_SLAB     Material = 440
	Material_REDSTONE_TORCH                     Material = 441
	Material_STRIPPED_SPRUCE_WOOD               Material = 442
	Material_WEEPING_VINES_PLANT                Material = 443
	Material_YELLOW_CONCRETE                    Material = 444
	Material_GREEN_CARPET                       Material = 445
	Material_SANDSTONE_STAIRS                   Material = 446
	Material_SEAGRASS                           Material = 447
	Material_CHISELED_STONE_BRICKS              Material = 448
	Material_CRIMSON_SLAB                       Material = 449
	Material_CYAN_CANDLE_CAKE                   Material = 450
	Material_ORANGE_CARPET                      Material = 451
	Material_SPRUCE_SAPLING                     Material = 452
	Material_SPRUCE_BUTTON                      Material = 453
	Material_GRANITE_SLAB                       Material = 454
	Material_POLISHED_BLACKSTONE_WALL           Material = 455
	Material_POLISHED_DIORITE_STAIRS            Material = 456
	Material_RED_SANDSTONE                      Material = 457
	Material_SOUL_SOIL                          Material = 458
	Material_ANCIENT_DEBRIS                     Material = 459
	Material_CREEPER_HEAD                       Material = 460
	Material_GLOWSTONE                          Material = 461
	Material_OXIDIZED_COPPER_TRAPDOOR           Material = 462
	Material_WARPED_SLAB                        Material = 463
	Material_WHITE_WOOL                         Material = 464
	Material_DARK_OAK_TRAPDOOR                  Material = 465
	Material_RED_SANDSTONE_WALL                 Material = 466
	Material_WEATHERED_COPPER                   Material = 467
	Material_GOLD_BLOCK                         Material = 468
	Material_HONEY_BLOCK                        Material = 469
	Material_INFESTED_COBBLESTONE               Material = 470
	Material_MAGENTA_WOOL                       Material = 471
	Material_PINK_STAINED_GLASS_PANE            Material = 472
	Material_ACACIA_FENCE                       Material = 473
	Material_BROWN_STAINED_GLASS                Material = 474
	Material_SCULK_CATALYST                     Material = 475
	Material_SUSPICIOUS_SAND                    Material = 476
	Material_WAXED_EXPOSED_CUT_COPPER_SLAB      Material = 477
	Material_BUBBLE_CORAL_FAN                   Material = 478
	Material_DEEPSLATE_TILE_WALL                Material = 479
	Material_GRAY_TERRACOTTA                    Material = 480
	Material_PURPLE_SHULKER_BOX                 Material = 481
	Material_QUARTZ_STAIRS                      Material = 482
	Material_DEAD_BUSH                          Material = 483
	Material_LIME_STAINED_GLASS                 Material = 484
	Material_PURPLE_GLAZED_TERRACOTTA           Material = 485
	Material_POLISHED_ANDESITE_STAIRS           Material = 486
	Material_SMALL_DRIPLEAF                     Material = 487
	Material_DIRT                               Material = 488
	Material_GRAY_GLAZED_TERRACOTTA             Material = 489
	Material_LARGE_FERN                         Material = 490
	Material_LIGHT_BLUE_WOOL                    Material = 491
	Material_LIME_CONCRETE                      Material = 492
	Material_STONE_BRICK_WALL                   Material = 493
	Material_BLACKSTONE                         Material = 494
	Material_COBWEB                             Material = 495
	Material_DIORITE_SLAB                       Material = 496
	Material_NETHER_WART_BLOCK                  Material = 497
	Material_PURPLE_BED                         Material = 498
	Material_BAMBOO_FENCE_GATE                  Material = 499
	Material_MOSSY_COBBLESTONE_SLAB             Material = 500
	Material_TUFF_BRICK_SLAB                    Material = 501
	Material_BROWN_WOOL                         Material = 502
	Material_OAK_TRAPDOOR                       Material = 503
	Material_YELLOW_CONCRETE_POWDER             Material = 504
	Material_CRIMSON_BUTTON                     Material = 505
	Material_BUDDING_AMETHYST                   Material = 506
	Material_PINK_WOOL                          Material = 507
	Material_YELLOW_TERRACOTTA                  Material = 508
	Material_BLUE_TERRACOTTA                    Material = 509
	Material_DEEPSLATE_TILE_STAIRS              Material = 510
	Material_NETHERRACK                         Material = 511
	Material_WARPED_STAIRS                      Material = 512
	Material_WEATHERED_COPPER_GRATE             Material = 513
	Material_ACACIA_PRESSURE_PLATE              Material = 514
	Material_BLUE_STAINED_GLASS_PANE            Material = 515
	Material_BRAIN_CORAL_BLOCK                  Material = 516
	Material_DAYLIGHT_DETECTOR                  Material = 517
	Material_END_GATEWAY                        Material = 518
	Material_POLISHED_BLACKSTONE_BRICK_WALL     Material = 519
	Material_WEATHERED_CHISELED_COPPER          Material = 520
	Material_YELLOW_WALL_BANNER                 Material = 521
	Material_CYAN_CARPET                        Material = 522
	Material_DEAD_FIRE_CORAL                    Material = 523
	Material_ENCHANTING_TABLE                   Material = 524
	Material_ICE                                Material = 525
	Material_LIME_SHULKER_BOX                   Material = 526
	Material_BLUE_CONCRETE                      Material = 527
	Material_MYCELIUM                           Material = 528
	Material_CAMPFIRE                           Material = 529
	Material_STRIPPED_OAK_WOOD                  Material = 530
	Material_CRACKED_DEEPSLATE_BRICKS           Material = 531
	Material_GRAY_WALL_BANNER                   Material = 532
	Material_GREEN_CANDLE                       Material = 533
	Material_TUFF_BRICK_STAIRS                  Material = 534
	Material_DIRT_PATH                          Material = 535
	Material_LIGHT_WEIGHTED_PRESSURE_PLATE      Material = 536
	Material_PISTON_HEAD                        Material = 537
	Material_PRISMARINE_SLAB                    Material = 538
	Material_STRIPPED_BIRCH_WOOD                Material = 539
	Material_BIRCH_SIGN                         Material = 540
	Material_CRIMSON_DOOR                       Material = 541
	Material_CYAN_CANDLE                        Material = 542
	Material_IRON_BARS                          Material = 543
	Material_BAMBOO_HANGING_SIGN                Material = 544
	Material_MAGENTA_STAINED_GLASS_PANE         Material = 545
	Material_POTTED_OAK_SAPLING                 Material = 546
	Material_PRISMARINE_BRICKS                  Material = 547
	Material_REDSTONE_WIRE                      Material = 548
	Material_ACACIA_DOOR                        Material = 549
	Material_AMETHYST_CLUSTER                   Material = 550
	Material_CUT_SANDSTONE_SLAB                 Material = 551
	Material_POTTED_LILY_OF_THE_VALLEY          Material = 552
	Material_RED_SHULKER_BOX                    Material = 553
	Material_CRIMSON_SIGN                       Material = 554
	Material_FIRE                               Material = 555
	Material_JIGSAW                             Material = 556
	Material_WITHER_SKELETON_SKULL              Material = 557
	Material_CHISELED_RED_SANDSTONE             Material = 558
	Material_MAGENTA_CANDLE_CAKE                Material = 559
	Material_RED_MUSHROOM_BLOCK                 Material = 560
	Material_SPRUCE_DOOR                        Material = 561
	Material_DARK_PRISMARINE                    Material = 562
	Material_DARK_OAK_WALL_HANGING_SIGN         Material = 563
	Material_LIGHT_BLUE_CANDLE_CAKE             Material = 564
	Material_PEARLESCENT_FROGLIGHT              Material = 565
	Material_SPRUCE_WOOD                        Material = 566
	Material_TALL_GRASS                         Material = 567
	Material_PURPUR_BLOCK                       Material = 568
	Material_ACACIA_PLANKS                      Material = 569
	Material_CLAY                               Material = 570
	Material_DARK_OAK_PRESSURE_PLATE            Material = 571
	Material_GRAY_CANDLE                        Material = 572
	Material_INFESTED_STONE_BRICKS              Material = 573
	Material_WAXED_WEATHERED_CHISELED_COPPER    Material = 574
	Material_CRACKED_POLISHED_BLACKSTONE_BRICKS Material = 575
	Material_FIRE_CORAL_FAN                     Material = 576
	Material_HORN_CORAL_FAN                     Material = 577
	Material_POTTED_TORCHFLOWER                 Material = 578
	Material_WAXED_EXPOSED_CUT_COPPER           Material = 579
	Material_SMOOTH_RED_SANDSTONE_SLAB          Material = 580
	Material_STONE_BRICKS                       Material = 581
	Material_WHEAT                              Material = 582
	Material_MAGENTA_STAINED_GLASS              Material = 583
	Material_MANGROVE_LOG                       Material = 584
	Material_PINK_BED                           Material = 585
	Material_PINK_CARPET                        Material = 586
	Material_POLISHED_BLACKSTONE_BRICKS         Material = 587
	Material_CRIMSON_STAIRS                     Material = 588
	Material_RED_NETHER_BRICK_WALL              Material = 589
	Material_SANDSTONE_SLAB                     Material = 590
	Material_SOUL_SAND                          Material = 591
	Material_TORCH                              Material = 592
	Material_GREEN_STAINED_GLASS                Material = 593
	Material_LANTERN                            Material = 594
	Material_SCULK_SENSOR                       Material = 595
	Material_TARGET                             Material = 596
	Material_WHITE_TULIP                        Material = 597
	Material_GRAY_BED                           Material = 598
	Material_CAVE_VINES                         Material = 599
	Material_CHERRY_BUTTON                      Material = 600
	Material_KELP_PLANT                         Material = 601
	Material_WATER                              Material = 602
	Material_ANDESITE_STAIRS                    Material = 603
	Material_PIGLIN_WALL_HEAD                   Material = 604
	Material_ACACIA_TRAPDOOR                    Material = 605
	Material_CHERRY_WALL_SIGN                   Material = 606
	Material_MOSSY_STONE_BRICKS                 Material = 607
	Material_POTTED_MANGROVE_PROPAGULE          Material = 608
	Material_PUMPKIN                            Material = 609
	Material_RED_CARPET                         Material = 610
	Material_SMOOTH_SANDSTONE                   Material = 611
	Material_DEAD_TUBE_CORAL_WALL_FAN           Material = 612
	Material_FIRE_CORAL                         Material = 613
	Material_INFESTED_MOSSY_STONE_BRICKS        Material = 614
	Material_MANGROVE_FENCE_GATE                Material = 615
	Material_MOSSY_COBBLESTONE_STAIRS           Material = 616
	Material_BIRCH_STAIRS                       Material = 617
	Material_BRICK_STAIRS                       Material = 618
	Material_SHULKER_BOX                        Material = 619
	Material_DEEPSLATE_EMERALD_ORE              Material = 620
	Material_STRUCTURE_BLOCK                    Material = 621
	Material_WARPED_DOOR                        Material = 622
	Material_BLACK_WALL_BANNER                  Material = 623
	Material_DARK_OAK_HANGING_SIGN              Material = 624
	Material_WET_SPONGE                         Material = 625
	Material_POTTED_PINK_TULIP                  Material = 626
	Material_SOUL_LANTERN                       Material = 627
	Material_SPRUCE_WALL_HANGING_SIGN           Material = 628
	Material_BIRCH_PLANKS                       Material = 629
	Material_BROWN_CANDLE                       Material = 630
	Material_MOVING_PISTON                      Material = 631
	Material_MUD_BRICK_SLAB                     Material = 632
	Material_MUD_BRICK_STAIRS                   Material = 633
	Material_BAMBOO_TRAPDOOR                    Material = 634
	Material_GRAY_CARPET                        Material = 635
	Material_ORANGE_BANNER                      Material = 636
	Material_BELL                               Material = 637
	Material_GREEN_BANNER                       Material = 638
	Material_SMOOTH_BASALT                      Material = 639
	Material_SUGAR_CANE                         Material = 640
	Material_ACACIA_HANGING_SIGN                Material = 641
	Material_BLUE_WALL_BANNER                   Material = 642
	Material_COBBLED_DEEPSLATE                  Material = 643
	Material_END_PORTAL_FRAME                   Material = 644
	Material_TUFF_SLAB                          Material = 645
	Material_DEEPSLATE_REDSTONE_ORE             Material = 646
	Material_PURPLE_WOOL                        Material = 647
	Material_WAXED_COPPER_BLOCK                 Material = 648
	Material_BLACK_CONCRETE_POWDER              Material = 649
	Material_MANGROVE_BUTTON                    Material = 650
	Material_OXIDIZED_CUT_COPPER                Material = 651
	Material_BAMBOO_MOSAIC_SLAB                 Material = 652
	Material_DEAD_HORN_CORAL_FAN                Material = 653
	Material_TALL_SEAGRASS                      Material = 654
	Material_WARPED_SIGN                        Material = 655
	Material_ACACIA_LOG                         Material = 656
	Material_RED_WOOL                           Material = 657
	Material_WARPED_FENCE_GATE                  Material = 658
	Material_WAXED_OXIDIZED_COPPER_BULB         Material = 659
	Material_ACACIA_WOOD                        Material = 660
	Material_HONEYCOMB_BLOCK                    Material = 661
	Material_MANGROVE_PLANKS                    Material = 662
	Material_WHITE_BANNER                       Material = 663
	Material_WITHER_SKELETON_WALL_SKULL         Material = 664
	Material_CRIMSON_PRESSURE_PLATE             Material = 665
	Material_SPRUCE_SLAB                        Material = 666
	Material_CHERRY_PRESSURE_PLATE              Material = 667
	Material_TUFF_BRICKS                        Material = 668
	Material_BOOKSHELF                          Material = 669
	Material_POLISHED_ANDESITE                  Material = 670
	Material_YELLOW_WOOL                        Material = 671
	Material_CYAN_TERRACOTTA                    Material = 672
	Material_EXPOSED_COPPER_TRAPDOOR            Material = 673
	Material_REDSTONE_WALL_TORCH                Material = 674
	Material_TUBE_CORAL_BLOCK                   Material = 675
	Material_WAXED_WEATHERED_COPPER_BULB        Material = 676
	Material_BIG_DRIPLEAF                       Material = 677
	Material_BIRCH_WALL_SIGN                    Material = 678
	Material_DAMAGED_ANVIL                      Material = 679
	Material_END_STONE_BRICK_WALL               Material = 680
	Material_RAIL                               Material = 681
	Material_JUNGLE_PRESSURE_PLATE              Material = 682
	Material_OAK_LOG                            Material = 683
	Material_RED_TULIP                          Material = 684
	Material_TUFF_WALL                          Material = 685
	Material_YELLOW_BED                         Material = 686
	Material_BLUE_CONCRETE_POWDER               Material = 687
	Material_ORANGE_TERRACOTTA                  Material = 688
	Material_PRISMARINE_BRICK_SLAB              Material = 689
	Material_SHROOMLIGHT                        Material = 690
	Material_ORANGE_TULIP                       Material = 691
	Material_WALL_TORCH                         Material = 692
	Material_CANDLE                             Material = 693
	Material_DEEPSLATE_TILES                    Material = 694
	Material_FLETCHING_TABLE                    Material = 695
	Material_POTTED_BIRCH_SAPLING               Material = 696
	Material_WHITE_SHULKER_BOX                  Material = 697
	Material_BIRCH_SAPLING                      Material = 698
	Material_CHEST                              Material = 699
	Material_DARK_OAK_STAIRS                    Material = 700
	Material_MEDIUM_AMETHYST_BUD                Material = 701
	Material_POTTED_AZALEA_BUSH                 Material = 702
	Material_WAXED_CUT_COPPER_SLAB              Material = 703
	Material_DEAD_BRAIN_CORAL_WALL_FAN          Material = 704
	Material_SPRUCE_TRAPDOOR                    Material = 705
	Material_SPORE_BLOSSOM                      Material = 706
	Material_TRIPWIRE                           Material = 707
	Material_TUFF                               Material = 708
	Material_CYAN_CONCRETE_POWDER               Material = 709
	Material_LAVA                               Material = 710
	Material_ORANGE_CANDLE_CAKE                 Material = 711
	Material_STONE_BUTTON                       Material = 712
	Material_BAMBOO_MOSAIC                      Material = 713
	Material_COPPER_TRAPDOOR                    Material = 714
	Material_CYAN_CONCRETE                      Material = 715
	Material_MAGENTA_WALL_BANNER                Material = 716
	Material_COBBLED_DEEPSLATE_SLAB             Material = 717
	Material_CRIMSON_WALL_HANGING_SIGN          Material = 718
	Material_DARK_OAK_WALL_SIGN                 Material = 719
	Material_POLISHED_BLACKSTONE_PRESSURE_PLATE Material = 720
	Material_WEEPING_VINES                      Material = 721
	Material_BLACK_BANNER                       Material = 722
	Material_BLUE_CANDLE_CAKE                   Material = 723
	Material_BLUE_SHULKER_BOX                   Material = 724
	Material_BROWN_CARPET                       Material = 725
	Material_WARPED_ROOTS                       Material = 726
	Material_CALIBRATED_SCULK_SENSOR            Material = 727
	Material_POLISHED_ANDESITE_SLAB             Material = 728
	Material_SANDSTONE_WALL                     Material = 729
	Material_YELLOW_CANDLE                      Material = 730
	Material_RED_CONCRETE                       Material = 731
	Material_ACACIA_LEAVES                      Material = 732
	Material_COCOA                              Material = 733
	Material_NETHER_BRICKS                      Material = 734
	Material_NETHER_WART                        Material = 735
	Material_OAK_SLAB                           Material = 736
	Material_BIRCH_BUTTON                       Material = 737
	Material_BROWN_WALL_BANNER                  Material = 738
	Material_AIR                                Material = 739
	Material_BIRCH_LOG                          Material = 740
	Material_BLACK_SHULKER_BOX                  Material = 741
	Material_MUD                                Material = 742
	Material_FURNACE                            Material = 743
	Material_GREEN_CANDLE_CAKE                  Material = 744
	Material_ORANGE_WOOL                        Material = 745
	Material_BRAIN_CORAL_FAN                    Material = 746
	Material_SPRUCE_WALL_SIGN                   Material = 747
	Material_WARPED_WALL_SIGN                   Material = 748
	Material_SPRUCE_PRESSURE_PLATE              Material = 749
	Material_CAKE                               Material = 750
	Material_POLISHED_BLACKSTONE_BUTTON         Material = 751
	Material_POTTED_ACACIA_SAPLING              Material = 752
	Material_WAXED_CUT_COPPER_STAIRS            Material = 753
	Material_WAXED_WEATHERED_COPPER             Material = 754
	Material_BLUE_CARPET                        Material = 755
	Material_DEAD_BRAIN_CORAL_BLOCK             Material = 756
	Material_POPPY                              Material = 757
	Material_PURPLE_CONCRETE_POWDER             Material = 758
	Material_REDSTONE_BLOCK                     Material = 759
	Material_ACACIA_SLAB                        Material = 760
	Material_CANDLE_CAKE                        Material = 761
	Material_SEA_PICKLE                         Material = 762
	Material_BAMBOO_PRESSURE_PLATE              Material = 763
	Material_GREEN_STAINED_GLASS_PANE           Material = 764
	Material_BARREL                             Material = 765
	Material_BRAIN_CORAL                        Material = 766
	Material_CHISELED_DEEPSLATE                 Material = 767
	Material_GRAY_CONCRETE_POWDER               Material = 768
	Material_PINK_CANDLE                        Material = 769
	Material_CREEPER_WALL_HEAD                  Material = 770
	Material_DARK_OAK_SIGN                      Material = 771
	Material_PISTON                             Material = 772
	Material_PLAYER_HEAD                        Material = 773
	Material_SPAWNER                            Material = 774
	Material_BAMBOO                             Material = 775
	Material_OXIDIZED_COPPER_BULB               Material = 776
	Material_PURPLE_CONCRETE                    Material = 777
	Material_POLISHED_BLACKSTONE_BRICK_STAIRS   Material = 778
	Material_PURPLE_WALL_BANNER                 Material = 779
	Material_ACACIA_STAIRS                      Material = 780
	Material_BRICK_WALL                         Material = 781
	Material_BUBBLE_CORAL_WALL_FAN              Material = 782
	Material_IRON_ORE                           Material = 783
	Material_MUD_BRICK_WALL                     Material = 784
	Material_MOSS_BLOCK                         Material = 785
	Material_PINK_PETALS                        Material = 786
	Material_POLISHED_TUFF                      Material = 787
	Material_CHERRY_LEAVES                      Material = 788
	Material_LIGHT_BLUE_CONCRETE                Material = 789
	Material_LIGHT_BLUE_STAINED_GLASS_PANE      Material = 790
	Material_MANGROVE_SIGN                      Material = 791
	Material_MANGROVE_WALL_HANGING_SIGN         Material = 792
	Material_END_STONE_BRICKS                   Material = 793
	Material_STRIPPED_MANGROVE_LOG              Material = 794
	Material_WARPED_HANGING_SIGN                Material = 795
	Material_CRIMSON_FENCE_GATE                 Material = 796
	Material_DARK_OAK_PLANKS                    Material = 797
	Material_ENDER_CHEST                        Material = 798
	Material_GRAVEL                             Material = 799
	Material_ORANGE_CONCRETE_POWDER             Material = 800
	Material_COBBLESTONE                        Material = 801
	Material_DARK_OAK_DOOR                      Material = 802
	Material_MOSS_CARPET                        Material = 803
	Material_QUARTZ_BLOCK                       Material = 804
	Material_WARPED_PRESSURE_PLATE              Material = 805
	Material_TORCHFLOWER                        Material = 806
	Material_TUBE_CORAL                         Material = 807
	Material_TUFF_STAIRS                        Material = 808
	Material_BUBBLE_COLUMN                      Material = 809
	Material_DRAGON_HEAD                        Material = 810
	Material_PURPUR_SLAB                        Material = 811
	Material_SCULK_SHRIEKER                     Material = 812
	Material_STRIPPED_CRIMSON_HYPHAE            Material = 813
	Material_WATER_CAULDRON                     Material = 814
	Material_BLUE_WOOL                          Material = 815
	Material_BUBBLE_CORAL_BLOCK                 Material = 816
	Material_FLOWER_POT                         Material = 817
	Material_CAVE_VINES_PLANT                   Material = 818
	Material_CHISELED_TUFF_BRICKS               Material = 819
	Material_POTTED_RED_MUSHROOM                Material = 820
	Material_VOID_AIR                           Material = 821
	Material_WHITE_CARPET                       Material = 822
	Material_LIGHT_BLUE_CANDLE                  Material = 823
	Material_OXIDIZED_COPPER_GRATE              Material = 824
	Material_SCAFFOLDING                        Material = 825
	Material_BLACKSTONE_STAIRS                  Material = 826
	Material_CHISELED_NETHER_BRICKS             Material = 827
	Material_COPPER_GRATE                       Material = 828
	Material_CYAN_WALL_BANNER                   Material = 829
	Material_DEEPSLATE_GOLD_ORE                 Material = 830
	Material_SOUL_WALL_TORCH                    Material = 831
	Material_BLACK_STAINED_GLASS                Material = 832
	Material_NETHER_QUARTZ_ORE                  Material = 833
	Material_RED_BED                            Material = 834
	Material_ZOMBIE_WALL_HEAD                   Material = 835
	Material_CAVE_AIR                           Material = 836
	Material_CHERRY_DOOR                        Material = 837
	Material_SKELETON_SKULL                     Material = 838
	Material_ZOMBIE_HEAD                        Material = 839
	Material_COBBLESTONE_SLAB                   Material = 840
	Material_EXPOSED_CUT_COPPER                 Material = 841
	Material_OCHRE_FROGLIGHT                    Material = 842
	Material_ORANGE_BED                         Material = 843
	Material_SMOOTH_QUARTZ_SLAB                 Material = 844
	Material_CRIMSON_PLANKS                     Material = 845
	Material_WAXED_COPPER_BULB                  Material = 846
	Material_CRAFTER                            Material = 847
	Material_POLISHED_DEEPSLATE_STAIRS          Material = 848
	Material_CUT_RED_SANDSTONE                  Material = 849
	Material_EXPOSED_COPPER_GRATE               Material = 850
	Material_EXPOSED_CUT_COPPER_SLAB            Material = 851
	Material_SOUL_CAMPFIRE                      Material = 852
	Material_BROWN_MUSHROOM                     Material = 853
	Material_CRACKED_NETHER_BRICKS              Material = 854
	Material_CYAN_GLAZED_TERRACOTTA             Material = 855
	Material_NETHER_BRICK_FENCE                 Material = 856
	Material_POTTED_OXEYE_DAISY                 Material = 857
	Material_STRIPPED_WARPED_HYPHAE             Material = 858
	Material_DRAGON_WALL_HEAD                   Material = 859
	Material_JUNGLE_HANGING_SIGN                Material = 860
	Material_MOSSY_STONE_BRICK_SLAB             Material = 861
	Material_SCULK_VEIN                         Material = 862
	Material_STONE_BRICK_STAIRS                 Material = 863
	Material_DEAD_TUBE_CORAL                    Material = 864
	Material_OXIDIZED_CUT_COPPER_STAIRS         Material = 865
	Material_POTTED_SPRUCE_SAPLING              Material = 866
	Material_PUMPKIN_STEM                       Material = 867
	Material_POWDER_SNOW_CAULDRON               Material = 868
	Material_RED_BANNER                         Material = 869
	Material_WAXED_COPPER_DOOR                  Material = 870
	Material_LIGHT_GRAY_CARPET                  Material = 871
	Material_MELON                              Material = 872
	Material_PACKED_MUD                         Material = 873
	Material_PETRIFIED_OAK_SLAB                 Material = 874
	Material_POTTED_RED_TULIP                   Material = 875
	Material_DEEPSLATE_DIAMOND_ORE              Material = 876
	Material_POLISHED_BLACKSTONE_STAIRS         Material = 877
	Material_POTATOES                           Material = 878
	Material_SMOOTH_RED_SANDSTONE_STAIRS        Material = 879
	Material_SPRUCE_STAIRS                      Material = 880
	Material_MAGENTA_GLAZED_TERRACOTTA          Material = 881
	Material_WARPED_PLANKS                      Material = 882
	Material_WAXED_WEATHERED_COPPER_TRAPDOOR    Material = 883
	Material_MAGMA_BLOCK                        Material = 884
	Material_MANGROVE_STAIRS                    Material = 885
	Material_WAXED_EXPOSED_CHISELED_COPPER      Material = 886
	Material_WAXED_EXPOSED_COPPER_TRAPDOOR      Material = 887
	Material_OAK_WOOD                           Material = 888
	Material_POLISHED_DIORITE                   Material = 889
	Material_POTTED_ORANGE_TULIP                Material = 890
	Material_RED_SAND                           Material = 891
	Material_SMOKER                             Material = 892
	Material_JUNGLE_SAPLING                     Material = 893
	Material_LIGHT_BLUE_CONCRETE_POWDER         Material = 894
	Material_LIGHT_GRAY_STAINED_GLASS           Material = 895
	Material_WAXED_EXPOSED_COPPER               Material = 896
	Material_CUT_COPPER_STAIRS                  Material = 897
	Material_FLOWERING_AZALEA                   Material = 898
	Material_OXIDIZED_CUT_COPPER_SLAB           Material = 899
	Material_POTTED_CRIMSON_ROOTS               Material = 900
	Material_RED_STAINED_GLASS_PANE             Material = 901
	Material_DEAD_HORN_CORAL_WALL_FAN           Material = 902
	Material_GRANITE                            Material = 903
	Material_NETHER_BRICK_SLAB                  Material = 904
	Material_WAXED_EXPOSED_COPPER_DOOR          Material = 905
	Material_ACACIA_SAPLING                     Material = 906
	Material_CHERRY_HANGING_SIGN                Material = 907
	Material_JUNGLE_DOOR                        Material = 908
	Material_POTTED_JUNGLE_SAPLING              Material = 909
	Material_SLIME_BLOCK                        Material = 910
	Material_VERDANT_FROGLIGHT                  Material = 911
	Material_WHITE_WALL_BANNER                  Material = 912
	Material_AMETHYST_BLOCK                     Material = 913
	Material_COAL_BLOCK                         Material = 914
	Material_DANDELION                          Material = 915
	Material_MANGROVE_PRESSURE_PLATE            Material = 916
	Material_SMALL_AMETHYST_BUD                 Material = 917
	Material_EXPOSED_COPPER_BULB                Material = 918
	Material_INFESTED_CHISELED_STONE_BRICKS     Material = 919
	Material_WARPED_STEM                        Material = 920
	Material_BLACK_TERRACOTTA                   Material = 921
	Material_CHERRY_WALL_HANGING_SIGN           Material = 922
	Material_PURPLE_STAINED_GLASS_PANE          Material = 923
	Material_LIME_TERRACOTTA                    Material = 924
	Material_PURPLE_TERRACOTTA                  Material = 925
	Material_STONE_BRICK_SLAB                   Material = 926
	Material_STRIPPED_OAK_LOG                   Material = 927
	Material_BLACK_GLAZED_TERRACOTTA            Material = 928
	Material_TERRACOTTA                         Material = 929
	Material_RAW_IRON_BLOCK                     Material = 930
	Material_STRIPPED_ACACIA_LOG                Material = 931
	Material_BLACK_STAINED_GLASS_PANE           Material = 932
	Material_DECORATED_POT                      Material = 933
	Material_DEEPSLATE_COPPER_ORE               Material = 934
	Material_STRIPPED_SPRUCE_LOG                Material = 935
	Material_DARK_OAK_SLAB                      Material = 936
	Material_DEAD_FIRE_CORAL_WALL_FAN           Material = 937
	Material_SPRUCE_FENCE_GATE                  Material = 938
	Material_DARK_PRISMARINE_STAIRS             Material = 939
	Material_LEVER                              Material = 940
	Material_POLISHED_DEEPSLATE_SLAB            Material = 941
	Material_BAMBOO_BLOCK                       Material = 942
	Material_BAMBOO_FENCE                       Material = 943
	Material_DIAMOND_BLOCK                      Material = 944
	Material_ORANGE_CONCRETE                    Material = 945
	Material_WAXED_OXIDIZED_CUT_COPPER          Material = 946
	Material_PINK_GLAZED_TERRACOTTA             Material = 947
	Material_WAXED_CUT_COPPER                   Material = 948
	Material_BROWN_BANNER                       Material = 949
	Material_CHISELED_POLISHED_BLACKSTONE       Material = 950
	Material_GREEN_GLAZED_TERRACOTTA            Material = 951
	Material_MAGENTA_BANNER                     Material = 952
	Material_MANGROVE_ROOTS                     Material = 953
	Material_OAK_SAPLING                        Material = 954
	Material_STRIPPED_MANGROVE_WOOD             Material = 955
	Material_SUSPICIOUS_GRAVEL                  Material = 956
	Material_BAMBOO_BUTTON                      Material = 957
	Material_GRAY_STAINED_GLASS_PANE            Material = 958
	Material_HEAVY_WEIGHTED_PRESSURE_PLATE      Material = 959
	Material_HORN_CORAL                         Material = 960
	Material_JUNGLE_FENCE_GATE                  Material = 961
	Material_BIRCH_WOOD                         Material = 962
	Material_CHERRY_SLAB                        Material = 963
	Material_END_ROD                            Material = 964
	Material_PRISMARINE_WALL                    Material = 965
	Material_DRIPSTONE_BLOCK                    Material = 966
	Material_LIGHT                              Material = 967
	Material_POTTED_BAMBOO                      Material = 968
	Material_ANDESITE                           Material = 969
	Material_NETHERITE_BLOCK                    Material = 970
	Material_POTTED_FERN                        Material = 971
	Material_STRIPPED_JUNGLE_LOG                Material = 972
	Material_STRIPPED_ACACIA_WOOD               Material = 973
	Material_WARPED_FENCE                       Material = 974
	Material_MUSHROOM_STEM                      Material = 975
	Material_STONE                              Material = 976
	Material_CHERRY_TRAPDOOR                    Material = 977
	Material_CYAN_BED                           Material = 978
	Material_DEEPSLATE_BRICKS                   Material = 979
	Material_JUNGLE_FENCE                       Material = 980
	Material_LIGHT_BLUE_BANNER                  Material = 981
	Material_MUDDY_MANGROVE_ROOTS               Material = 982
	Material_WAXED_EXPOSED_CUT_COPPER_STAIRS    Material = 983
	Material_WEATHERED_COPPER_TRAPDOOR          Material = 984
	Material_YELLOW_CANDLE_CAKE                 Material = 985
	Material_GLASS                              Material = 986
	Material_GRASS_BLOCK                        Material = 987
	Material_JUNGLE_PLANKS                      Material = 988
	Material_BLACK_CANDLE                       Material = 989
	Material_CYAN_STAINED_GLASS_PANE            Material = 990
	Material_CYAN_WOOL                          Material = 991
	Material_FROGSPAWN                          Material = 992
	Material_FROSTED_ICE                        Material = 993
	Material_MAGENTA_TERRACOTTA                 Material = 994
	Material_TNT                                Material = 995
	Material_BLACK_CONCRETE                     Material = 996
	Material_STONE_PRESSURE_PLATE               Material = 997
	Material_CRIMSON_FUNGUS                     Material = 998
	Material_DEAD_BRAIN_CORAL_FAN               Material = 999
	Material_GRAY_CANDLE_CAKE                   Material = 1000
	Material_JUNGLE_LEAVES                      Material = 1001
	Material_COARSE_DIRT                        Material = 1002
	Material_CRIMSON_FENCE                      Material = 1003
	Material_LAPIS_ORE                          Material = 1004
	Material_SANDSTONE                          Material = 1005
	Material_POLISHED_BLACKSTONE                Material = 1006
	Material_POTTED_POPPY                       Material = 1007
	Material_PURPLE_CANDLE_CAKE                 Material = 1008
	Material_WARPED_FUNGUS                      Material = 1009
	Material_CRIMSON_TRAPDOOR                   Material = 1010
	Material_LIGHT_BLUE_CARPET                  Material = 1011
	Material_LIGHT_GRAY_BANNER                  Material = 1012
	Material_TRAPPED_CHEST                      Material = 1013
	Material_TRIPWIRE_HOOK                      Material = 1014
	Material_PURPLE_STAINED_GLASS               Material = 1015
	Material_ACACIA_SIGN                        Material = 1016
	Material_EXPOSED_CUT_COPPER_STAIRS          Material = 1017
	Material_POLISHED_BLACKSTONE_SLAB           Material = 1018
	Material_POLISHED_TUFF_SLAB                 Material = 1019
	Material_POTTED_CHERRY_SAPLING              Material = 1020
	Material_SNIFFER_EGG                        Material = 1021
	Material_BASALT                             Material = 1022
	Material_BROWN_CANDLE_CAKE                  Material = 1023
	Material_JUNGLE_WALL_SIGN                   Material = 1024
	Material_POLISHED_DIORITE_SLAB              Material = 1025
	Material_PRISMARINE_BRICK_STAIRS            Material = 1026
	Material_ACACIA_WALL_HANGING_SIGN           Material = 1027
	Material_DARK_OAK_LOG                       Material = 1028
	Material_POLISHED_TUFF_WALL                 Material = 1029
	Material_NOTE_BLOCK                         Material = 1030
	Material_SPRUCE_PLANKS                      Material = 1031
	Material_BROWN_GLAZED_TERRACOTTA            Material = 1032
	Material_MOSSY_COBBLESTONE                  Material = 1033
	Material_WAXED_WEATHERED_CUT_COPPER_STAIRS  Material = 1034
	Material_BAMBOO_STAIRS                      Material = 1035
	Material_CRIMSON_HANGING_SIGN               Material = 1036
	Material_GRAY_SHULKER_BOX                   Material = 1037
	Material_OXIDIZED_COPPER                    Material = 1038
	Material_POLISHED_BASALT                    Material = 1039
	Material_SCULK                              Material = 1040
	Material_YELLOW_STAINED_GLASS_PANE          Material = 1041
	Material_ANVIL                              Material = 1042
	Material_EMERALD_BLOCK                      Material = 1043
	Material_PINK_STAINED_GLASS                 Material = 1044
	Material_PURPLE_BANNER                      Material = 1045
	Material_REPEATER                           Material = 1046
	Material_ORANGE_CANDLE                      Material = 1047
	Material_PINK_CONCRETE_POWDER               Material = 1048
	Material_PURPLE_CARPET                      Material = 1049
	Material_POTTED_CRIMSON_FUNGUS              Material = 1050
	Material_POTTED_WARPED_ROOTS                Material = 1051
	Material_ROOTED_DIRT                        Material = 1052
	Material_BEE_NEST                           Material = 1053
	Material_BROWN_TERRACOTTA                   Material = 1054
	Material_DISPENSER                          Material = 1055
	Material_MAGENTA_CARPET                     Material = 1056
	Material_POTTED_BROWN_MUSHROOM              Material = 1057
)

// Enum value maps for Material.
var (
	Material_name = map[int32]string{
		0:    "CUT_COPPER_SLAB",
		1:    "LIGHT_GRAY_WOOL",
		2:    "LILY_PAD",
		3:    "MANGROVE_LEAVES",
		4:    "POLISHED_DEEPSLATE_WALL",
		5:    "CONDUIT",
		6:    "TURTLE_EGG",
		7:    "WAXED_OXIDIZED_COPPER_TRAPDOOR",
		8:    "EXPOSED_COPPER_DOOR",
		9:    "OAK_BUTTON",
		10:   "PINK_SHULKER_BOX",
		11:   "BROWN_CONCRETE_POWDER",
		12:   "CYAN_STAINED_GLASS",
		13:   "LARGE_AMETHYST_BUD",
		14:   "WEATHERED_COPPER_BULB",
		15:   "WHITE_STAINED_GLASS_PANE",
		16:   "EXPOSED_COPPER",
		17:   "JUKEBOX",
		18:   "WEATHERED_COPPER_DOOR",
		19:   "WAXED_WEATHERED_COPPER_DOOR",
		20:   "OAK_DOOR",
		21:   "ORANGE_STAINED_GLASS",
		22:   "POLISHED_DEEPSLATE",
		23:   "POTTED_ALLIUM",
		24:   "POTTED_WITHER_ROSE",
		25:   "PEONY",
		26:   "TUFF_BRICK_WALL",
		27:   "WAXED_WEATHERED_CUT_COPPER",
		28:   "BLUE_ICE",
		29:   "FERN",
		30:   "INFESTED_STONE",
		31:   "LIME_GLAZED_TERRACOTTA",
		32:   "ORANGE_SHULKER_BOX",
		33:   "COAL_ORE",
		34:   "DEEPSLATE",
		35:   "RED_MUSHROOM",
		36:   "LIGHT_BLUE_GLAZED_TERRACOTTA",
		37:   "LIGHT_GRAY_CANDLE_CAKE",
		38:   "OAK_WALL_SIGN",
		39:   "PLAYER_WALL_HEAD",
		40:   "PURPUR_STAIRS",
		41:   "BAMBOO_DOOR",
		42:   "BLACK_CARPET",
		43:   "DEAD_BUBBLE_CORAL_WALL_FAN",
		44:   "GRAY_STAINED_GLASS",
		45:   "GREEN_CONCRETE_POWDER",
		46:   "COMPOSTER",
		47:   "DIORITE_STAIRS",
		48:   "JUNGLE_STAIRS",
		49:   "POLISHED_GRANITE",
		50:   "BRICKS",
		51:   "CHIPPED_ANVIL",
		52:   "DARK_OAK_FENCE",
		53:   "LAVA_CAULDRON",
		54:   "SMOOTH_RED_SANDSTONE",
		55:   "BLUE_CANDLE",
		56:   "GRAY_BANNER",
		57:   "SNOW_BLOCK",
		58:   "YELLOW_STAINED_GLASS",
		59:   "WITHER_ROSE",
		60:   "YELLOW_SHULKER_BOX",
		61:   "CHERRY_STAIRS",
		62:   "END_PORTAL",
		63:   "NETHER_PORTAL",
		64:   "OBSIDIAN",
		65:   "POWDER_SNOW",
		66:   "EMERALD_ORE",
		67:   "LIGHT_GRAY_WALL_BANNER",
		68:   "PINK_TERRACOTTA",
		69:   "TWISTING_VINES",
		70:   "JACK_O_LANTERN",
		71:   "AZALEA",
		72:   "BAMBOO_WALL_SIGN",
		73:   "DIAMOND_ORE",
		74:   "OAK_STAIRS",
		75:   "COBBLESTONE_STAIRS",
		76:   "FIRE_CORAL_WALL_FAN",
		77:   "GREEN_BED",
		78:   "JUNGLE_BUTTON",
		79:   "MANGROVE_WOOD",
		80:   "RESPAWN_ANCHOR",
		81:   "YELLOW_GLAZED_TERRACOTTA",
		82:   "BROWN_BED",
		83:   "BROWN_CONCRETE",
		84:   "CHERRY_LOG",
		85:   "NETHER_BRICK_WALL",
		86:   "OAK_WALL_HANGING_SIGN",
		87:   "CRIMSON_STEM",
		88:   "DRAGON_EGG",
		89:   "PINK_TULIP",
		90:   "ATTACHED_MELON_STEM",
		91:   "BIRCH_SLAB",
		92:   "POTTED_DEAD_BUSH",
		93:   "RED_NETHER_BRICKS",
		94:   "TUBE_CORAL_WALL_FAN",
		95:   "BEDROCK",
		96:   "BROWN_STAINED_GLASS_PANE",
		97:   "CHERRY_PLANKS",
		98:   "DARK_OAK_SAPLING",
		99:   "OAK_LEAVES",
		100:  "CRYING_OBSIDIAN",
		101:  "KELP",
		102:  "BAMBOO_SLAB",
		103:  "CHERRY_SIGN",
		104:  "LIGHT_GRAY_CANDLE",
		105:  "OXIDIZED_CHISELED_COPPER",
		106:  "FIRE_CORAL_BLOCK",
		107:  "MOSSY_STONE_BRICK_WALL",
		108:  "PINK_CONCRETE",
		109:  "STRIPPED_DARK_OAK_WOOD",
		110:  "WAXED_CHISELED_COPPER",
		111:  "GOLD_ORE",
		112:  "ORANGE_WALL_BANNER",
		113:  "POLISHED_TUFF_STAIRS",
		114:  "PURPLE_CANDLE",
		115:  "WARPED_BUTTON",
		116:  "DEAD_TUBE_CORAL_FAN",
		117:  "MOSSY_COBBLESTONE_WALL",
		118:  "RED_STAINED_GLASS",
		119:  "WHITE_STAINED_GLASS",
		120:  "ACACIA_BUTTON",
		121:  "GRAY_CONCRETE",
		122:  "RED_TERRACOTTA",
		123:  "ROSE_BUSH",
		124:  "WAXED_OXIDIZED_CUT_COPPER_STAIRS",
		125:  "WAXED_COPPER_GRATE",
		126:  "WHITE_CONCRETE_POWDER",
		127:  "BRICK_SLAB",
		128:  "CRIMSON_HYPHAE",
		129:  "DARK_OAK_BUTTON",
		130:  "DEEPSLATE_BRICK_WALL",
		131:  "RED_SANDSTONE_STAIRS",
		132:  "SMOOTH_QUARTZ_STAIRS",
		133:  "TWISTING_VINES_PLANT",
		134:  "BROWN_SHULKER_BOX",
		135:  "COPPER_DOOR",
		136:  "DETECTOR_RAIL",
		137:  "LIME_BED",
		138:  "MANGROVE_FENCE",
		139:  "QUARTZ_BRICKS",
		140:  "ANDESITE_SLAB",
		141:  "CHORUS_PLANT",
		142:  "JUNGLE_LOG",
		143:  "OAK_PRESSURE_PLATE",
		144:  "PINK_BANNER",
		145:  "GREEN_SHULKER_BOX",
		146:  "OAK_PLANKS",
		147:  "TORCHFLOWER_CROP",
		148:  "CHAIN_COMMAND_BLOCK",
		149:  "LIGHTNING_ROD",
		150:  "PODZOL",
		151:  "RED_CANDLE",
		152:  "RED_WALL_BANNER",
		153:  "DRIED_KELP_BLOCK",
		154:  "SKELETON_WALL_SKULL",
		155:  "STICKY_PISTON",
		156:  "POTTED_CORNFLOWER",
		157:  "WAXED_COPPER_TRAPDOOR",
		158:  "DEEPSLATE_BRICK_STAIRS",
		159:  "GREEN_WOOL",
		160:  "IRON_TRAPDOOR",
		161:  "POTTED_DANDELION",
		162:  "POTTED_WARPED_FUNGUS",
		163:  "BAMBOO_PLANKS",
		164:  "CHISELED_QUARTZ_BLOCK",
		165:  "CRIMSON_NYLIUM",
		166:  "POTTED_CACTUS",
		167:  "WARPED_HYPHAE",
		168:  "CALCITE",
		169:  "WAXED_EXPOSED_COPPER_GRATE",
		170:  "YELLOW_CARPET",
		171:  "ACTIVATOR_RAIL",
		172:  "END_STONE_BRICK_SLAB",
		173:  "FARMLAND",
		174:  "STRIPPED_BIRCH_LOG",
		175:  "BLUE_ORCHID",
		176:  "CRACKED_STONE_BRICKS",
		177:  "PITCHER_PLANT",
		178:  "SHORT_GRASS",
		179:  "REDSTONE_ORE",
		180:  "WAXED_OXIDIZED_COPPER_GRATE",
		181:  "WHITE_GLAZED_TERRACOTTA",
		182:  "BIRCH_TRAPDOOR",
		183:  "CRIMSON_ROOTS",
		184:  "LIGHT_BLUE_WALL_BANNER",
		185:  "OAK_SIGN",
		186:  "PIGLIN_HEAD",
		187:  "MAGENTA_CONCRETE_POWDER",
		188:  "RED_CONCRETE_POWDER",
		189:  "WAXED_EXPOSED_COPPER_BULB",
		190:  "CARVED_PUMPKIN",
		191:  "COBBLED_DEEPSLATE_WALL",
		192:  "COPPER_BULB",
		193:  "LIGHT_BLUE_SHULKER_BOX",
		194:  "LIGHT_BLUE_STAINED_GLASS",
		195:  "SMOOTH_STONE",
		196:  "SPRUCE_LOG",
		197:  "WHITE_CANDLE_CAKE",
		198:  "CRAFTING_TABLE",
		199:  "DIORITE",
		200:  "LIGHT_GRAY_STAINED_GLASS_PANE",
		201:  "LIME_STAINED_GLASS_PANE",
		202:  "NETHER_SPROUTS",
		203:  "BLACK_CANDLE_CAKE",
		204:  "CHISELED_SANDSTONE",
		205:  "CRIMSON_WALL_SIGN",
		206:  "GLASS_PANE",
		207:  "SUNFLOWER",
		208:  "BLACK_WOOL",
		209:  "DEAD_HORN_CORAL",
		210:  "EXPOSED_CHISELED_COPPER",
		211:  "GLOW_LICHEN",
		212:  "POTTED_BLUE_ORCHID",
		213:  "BUBBLE_CORAL",
		214:  "IRON_DOOR",
		215:  "POTTED_WHITE_TULIP",
		216:  "BLACKSTONE_WALL",
		217:  "BLUE_BANNER",
		218:  "SMITHING_TABLE",
		219:  "REINFORCED_DEEPSLATE",
		220:  "BAMBOO_SIGN",
		221:  "BLACKSTONE_SLAB",
		222:  "CUT_COPPER",
		223:  "DARK_OAK_LEAVES",
		224:  "MANGROVE_SLAB",
		225:  "BEETROOTS",
		226:  "DEEPSLATE_LAPIS_ORE",
		227:  "GRINDSTONE",
		228:  "POWERED_RAIL",
		229:  "BARRIER",
		230:  "GILDED_BLACKSTONE",
		231:  "WARPED_NYLIUM",
		232:  "CACTUS",
		233:  "HAY_BLOCK",
		234:  "POLISHED_GRANITE_STAIRS",
		235:  "JUNGLE_SIGN",
		236:  "JUNGLE_WALL_HANGING_SIGN",
		237:  "BIRCH_PRESSURE_PLATE",
		238:  "POTTED_FLOWERING_AZALEA_BUSH",
		239:  "SAND",
		240:  "SNOW",
		241:  "BIRCH_FENCE_GATE",
		242:  "CHERRY_SAPLING",
		243:  "CRACKED_DEEPSLATE_TILES",
		244:  "LIGHT_GRAY_CONCRETE_POWDER",
		245:  "RED_SANDSTONE_SLAB",
		246:  "COMPARATOR",
		247:  "CYAN_SHULKER_BOX",
		248:  "INFESTED_CRACKED_STONE_BRICKS",
		249:  "ANDESITE_WALL",
		250:  "ATTACHED_PUMPKIN_STEM",
		251:  "LIME_WALL_BANNER",
		252:  "SMOOTH_SANDSTONE_SLAB",
		253:  "STONECUTTER",
		254:  "WAXED_WEATHERED_CUT_COPPER_SLAB",
		255:  "GRANITE_WALL",
		256:  "WHITE_BED",
		257:  "GREEN_WALL_BANNER",
		258:  "RED_CANDLE_CAKE",
		259:  "LIGHT_GRAY_GLAZED_TERRACOTTA",
		260:  "POTTED_DARK_OAK_SAPLING",
		261:  "COPPER_ORE",
		262:  "POTTED_AZURE_BLUET",
		263:  "BIRCH_DOOR",
		264:  "BONE_BLOCK",
		265:  "GRAY_WOOL",
		266:  "JUNGLE_SLAB",
		267:  "COPPER_BLOCK",
		268:  "DEEPSLATE_BRICK_SLAB",
		269:  "LIGHT_GRAY_SHULKER_BOX",
		270:  "STRIPPED_CHERRY_WOOD",
		271:  "BIRCH_LEAVES",
		272:  "HORN_CORAL_BLOCK",
		273:  "JUNGLE_WOOD",
		274:  "QUARTZ_SLAB",
		275:  "WEATHERED_CUT_COPPER_SLAB",
		276:  "BLUE_STAINED_GLASS",
		277:  "DARK_OAK_FENCE_GATE",
		278:  "DEAD_TUBE_CORAL_BLOCK",
		279:  "MANGROVE_WALL_SIGN",
		280:  "OXEYE_DAISY",
		281:  "BAMBOO_SAPLING",
		282:  "DARK_OAK_WOOD",
		283:  "HORN_CORAL_WALL_FAN",
		284:  "IRON_BLOCK",
		285:  "OXIDIZED_COPPER_DOOR",
		286:  "PINK_WALL_BANNER",
		287:  "PURPUR_PILLAR",
		288:  "WAXED_OXIDIZED_COPPER",
		289:  "ACACIA_FENCE_GATE",
		290:  "CHISELED_COPPER",
		291:  "LIME_CANDLE",
		292:  "BIRCH_WALL_HANGING_SIGN",
		293:  "DROPPER",
		294:  "LIGHT_BLUE_BED",
		295:  "REPEATING_COMMAND_BLOCK",
		296:  "WAXED_WEATHERED_COPPER_GRATE",
		297:  "SPONGE",
		298:  "SPRUCE_SIGN",
		299:  "TUBE_CORAL_FAN",
		300:  "ALLIUM",
		301:  "BAMBOO_WALL_HANGING_SIGN",
		302:  "BIRCH_FENCE",
		303:  "LIGHT_GRAY_BED",
		304:  "LIME_CANDLE_CAKE",
		305:  "DARK_PRISMARINE_SLAB",
		306:  "END_STONE",
		307:  "SWEET_BERRY_BUSH",
		308:  "WARPED_TRAPDOOR",
		309:  "WHITE_TERRACOTTA",
		310:  "MAGENTA_SHULKER_BOX",
		311:  "RAW_GOLD_BLOCK",
		312:  "SOUL_FIRE",
		313:  "SOUL_TORCH",
		314:  "SPRUCE_FENCE",
		315:  "OBSERVER",
		316:  "WEATHERED_CUT_COPPER_STAIRS",
		317:  "TRIAL_SPAWNER",
		318:  "CUT_RED_SANDSTONE_SLAB",
		319:  "GRANITE_STAIRS",
		320:  "LIME_WOOL",
		321:  "MAGENTA_CONCRETE",
		322:  "OAK_HANGING_SIGN",
		323:  "CARROTS",
		324:  "DEAD_HORN_CORAL_BLOCK",
		325:  "NETHER_GOLD_ORE",
		326:  "ORANGE_STAINED_GLASS_PANE",
		327:  "COBBLESTONE_WALL",
		328:  "JUNGLE_TRAPDOOR",
		329:  "STONE_STAIRS",
		330:  "MANGROVE_HANGING_SIGN",
		331:  "MUD_BRICKS",
		332:  "STRIPPED_JUNGLE_WOOD",
		333:  "AZALEA_LEAVES",
		334:  "BAMBOO_MOSAIC_STAIRS",
		335:  "BEEHIVE",
		336:  "HANGING_ROOTS",
		337:  "INFESTED_DEEPSLATE",
		338:  "CHERRY_FENCE",
		339:  "LECTERN",
		340:  "LILAC",
		341:  "CHERRY_FENCE_GATE",
		342:  "LADDER",
		343:  "LIGHT_GRAY_CONCRETE",
		344:  "OAK_FENCE",
		345:  "PITCHER_CROP",
		346:  "BIRCH_HANGING_SIGN",
		347:  "DEAD_FIRE_CORAL_BLOCK",
		348:  "LILY_OF_THE_VALLEY",
		349:  "CHERRY_WOOD",
		350:  "VINE",
		351:  "WAXED_OXIDIZED_CUT_COPPER_SLAB",
		352:  "PRISMARINE",
		353:  "TINTED_GLASS",
		354:  "BLUE_GLAZED_TERRACOTTA",
		355:  "LIGHT_BLUE_TERRACOTTA",
		356:  "MANGROVE_PROPAGULE",
		357:  "PACKED_ICE",
		358:  "DEAD_BRAIN_CORAL",
		359:  "SMOOTH_SANDSTONE_STAIRS",
		360:  "RED_GLAZED_TERRACOTTA",
		361:  "RED_NETHER_BRICK_SLAB",
		362:  "REDSTONE_LAMP",
		363:  "ACACIA_WALL_SIGN",
		364:  "BIG_DRIPLEAF_STEM",
		365:  "CHISELED_TUFF",
		366:  "FLOWERING_AZALEA_LEAVES",
		367:  "MANGROVE_DOOR",
		368:  "SPRUCE_LEAVES",
		369:  "STRIPPED_CRIMSON_STEM",
		370:  "LAPIS_BLOCK",
		371:  "PRISMARINE_STAIRS",
		372:  "QUARTZ_PILLAR",
		373:  "LODESTONE",
		374:  "STRIPPED_BAMBOO_BLOCK",
		375:  "BLUE_BED",
		376:  "CARTOGRAPHY_TABLE",
		377:  "DEAD_BUBBLE_CORAL_BLOCK",
		378:  "END_STONE_BRICK_STAIRS",
		379:  "OAK_FENCE_GATE",
		380:  "DEEPSLATE_IRON_ORE",
		381:  "DEEPSLATE_TILE_SLAB",
		382:  "POLISHED_GRANITE_SLAB",
		383:  "WAXED_OXIDIZED_CHISELED_COPPER",
		384:  "AZURE_BLUET",
		385:  "CUT_SANDSTONE",
		386:  "LIME_BANNER",
		387:  "SEA_LANTERN",
		388:  "BRAIN_CORAL_WALL_FAN",
		389:  "LIME_CARPET",
		390:  "MAGENTA_BED",
		391:  "BROWN_MUSHROOM_BLOCK",
		392:  "DEAD_BUBBLE_CORAL",
		393:  "GREEN_TERRACOTTA",
		394:  "PINK_CANDLE_CAKE",
		395:  "WHITE_CONCRETE",
		396:  "BEACON",
		397:  "BLACK_BED",
		398:  "CYAN_BANNER",
		399:  "SMOOTH_QUARTZ",
		400:  "WAXED_OXIDIZED_COPPER_DOOR",
		401:  "LOOM",
		402:  "NETHER_BRICK_STAIRS",
		403:  "ORANGE_GLAZED_TERRACOTTA",
		404:  "STONE_SLAB",
		405:  "CAULDRON",
		406:  "CORNFLOWER",
		407:  "DEAD_FIRE_CORAL_FAN",
		408:  "GREEN_CONCRETE",
		409:  "POINTED_DRIPSTONE",
		410:  "CHORUS_FLOWER",
		411:  "HOPPER",
		412:  "RAW_COPPER_BLOCK",
		413:  "WEATHERED_CUT_COPPER",
		414:  "CHAIN",
		415:  "DEAD_BUBBLE_CORAL_FAN",
		416:  "DEEPSLATE_COAL_ORE",
		417:  "YELLOW_BANNER",
		418:  "BREWING_STAND",
		419:  "DIORITE_WALL",
		420:  "SPRUCE_HANGING_SIGN",
		421:  "STRIPPED_DARK_OAK_LOG",
		422:  "STRUCTURE_VOID",
		423:  "SMOOTH_STONE_SLAB",
		424:  "WARPED_WALL_HANGING_SIGN",
		425:  "WARPED_WART_BLOCK",
		426:  "BLAST_FURNACE",
		427:  "LIGHT_GRAY_TERRACOTTA",
		428:  "MAGENTA_CANDLE",
		429:  "MOSSY_STONE_BRICK_STAIRS",
		430:  "RED_NETHER_BRICK_STAIRS",
		431:  "STRIPPED_CHERRY_LOG",
		432:  "STRIPPED_WARPED_STEM",
		433:  "CHISELED_BOOKSHELF",
		434:  "COMMAND_BLOCK",
		435:  "LIME_CONCRETE_POWDER",
		436:  "MANGROVE_TRAPDOOR",
		437:  "MELON_STEM",
		438:  "COBBLED_DEEPSLATE_STAIRS",
		439:  "WHITE_CANDLE",
		440:  "POLISHED_BLACKSTONE_BRICK_SLAB",
		441:  "REDSTONE_TORCH",
		442:  "STRIPPED_SPRUCE_WOOD",
		443:  "WEEPING_VINES_PLANT",
		444:  "YELLOW_CONCRETE",
		445:  "GREEN_CARPET",
		446:  "SANDSTONE_STAIRS",
		447:  "SEAGRASS",
		448:  "CHISELED_STONE_BRICKS",
		449:  "CRIMSON_SLAB",
		450:  "CYAN_CANDLE_CAKE",
		451:  "ORANGE_CARPET",
		452:  "SPRUCE_SAPLING",
		453:  "SPRUCE_BUTTON",
		454:  "GRANITE_SLAB",
		455:  "POLISHED_BLACKSTONE_WALL",
		456:  "POLISHED_DIORITE_STAIRS",
		457:  "RED_SANDSTONE",
		458:  "SOUL_SOIL",
		459:  "ANCIENT_DEBRIS",
		460:  "CREEPER_HEAD",
		461:  "GLOWSTONE",
		462:  "OXIDIZED_COPPER_TRAPDOOR",
		463:  "WARPED_SLAB",
		464:  "WHITE_WOOL",
		465:  "DARK_OAK_TRAPDOOR",
		466:  "RED_SANDSTONE_WALL",
		467:  "WEATHERED_COPPER",
		468:  "GOLD_BLOCK",
		469:  "HONEY_BLOCK",
		470:  "INFESTED_COBBLESTONE",
		471:  "MAGENTA_WOOL",
		472:  "PINK_STAINED_GLASS_PANE",
		473:  "ACACIA_FENCE",
		474:  "BROWN_STAINED_GLASS",
		475:  "SCULK_CATALYST",
		476:  "SUSPICIOUS_SAND",
		477:  "WAXED_EXPOSED_CUT_COPPER_SLAB",
		478:  "BUBBLE_CORAL_FAN",
		479:  "DEEPSLATE_TILE_WALL",
		480:  "GRAY_TERRACOTTA",
		481:  "PURPLE_SHULKER_BOX",
		482:  "QUARTZ_STAIRS",
		483:  "DEAD_BUSH",
		484:  "LIME_STAINED_GLASS",
		485:  "PURPLE_GLAZED_TERRACOTTA",
		486:  "POLISHED_ANDESITE_STAIRS",
		487:  "SMALL_DRIPLEAF",
		488:  "DIRT",
		489:  "GRAY_GLAZED_TERRACOTTA",
		490:  "LARGE_FERN",
		491:  "LIGHT_BLUE_WOOL",
		492:  "LIME_CONCRETE",
		493:  "STONE_BRICK_WALL",
		494:  "BLACKSTONE",
		495:  "COBWEB",
		496:  "DIORITE_SLAB",
		497:  "NETHER_WART_BLOCK",
		498:  "PURPLE_BED",
		499:  "BAMBOO_FENCE_GATE",
		500:  "MOSSY_COBBLESTONE_SLAB",
		501:  "TUFF_BRICK_SLAB",
		502:  "BROWN_WOOL",
		503:  "OAK_TRAPDOOR",
		504:  "YELLOW_CONCRETE_POWDER",
		505:  "CRIMSON_BUTTON",
		506:  "BUDDING_AMETHYST",
		507:  "PINK_WOOL",
		508:  "YELLOW_TERRACOTTA",
		509:  "BLUE_TERRACOTTA",
		510:  "DEEPSLATE_TILE_STAIRS",
		511:  "NETHERRACK",
		512:  "WARPED_STAIRS",
		513:  "WEATHERED_COPPER_GRATE",
		514:  "ACACIA_PRESSURE_PLATE",
		515:  "BLUE_STAINED_GLASS_PANE",
		516:  "BRAIN_CORAL_BLOCK",
		517:  "DAYLIGHT_DETECTOR",
		518:  "END_GATEWAY",
		519:  "POLISHED_BLACKSTONE_BRICK_WALL",
		520:  "WEATHERED_CHISELED_COPPER",
		521:  "YELLOW_WALL_BANNER",
		522:  "CYAN_CARPET",
		523:  "DEAD_FIRE_CORAL",
		524:  "ENCHANTING_TABLE",
		525:  "ICE",
		526:  "LIME_SHULKER_BOX",
		527:  "BLUE_CONCRETE",
		528:  "MYCELIUM",
		529:  "CAMPFIRE",
		530:  "STRIPPED_OAK_WOOD",
		531:  "CRACKED_DEEPSLATE_BRICKS",
		532:  "GRAY_WALL_BANNER",
		533:  "GREEN_CANDLE",
		534:  "TUFF_BRICK_STAIRS",
		535:  "DIRT_PATH",
		536:  "LIGHT_WEIGHTED_PRESSURE_PLATE",
		537:  "PISTON_HEAD",
		538:  "PRISMARINE_SLAB",
		539:  "STRIPPED_BIRCH_WOOD",
		540:  "BIRCH_SIGN",
		541:  "CRIMSON_DOOR",
		542:  "CYAN_CANDLE",
		543:  "IRON_BARS",
		544:  "BAMBOO_HANGING_SIGN",
		545:  "MAGENTA_STAINED_GLASS_PANE",
		546:  "POTTED_OAK_SAPLING",
		547:  "PRISMARINE_BRICKS",
		548:  "REDSTONE_WIRE",
		549:  "ACACIA_DOOR",
		550:  "AMETHYST_CLUSTER",
		551:  "CUT_SANDSTONE_SLAB",
		552:  "POTTED_LILY_OF_THE_VALLEY",
		553:  "RED_SHULKER_BOX",
		554:  "CRIMSON_SIGN",
		555:  "FIRE",
		556:  "JIGSAW",
		557:  "WITHER_SKELETON_SKULL",
		558:  "CHISELED_RED_SANDSTONE",
		559:  "MAGENTA_CANDLE_CAKE",
		560:  "RED_MUSHROOM_BLOCK",
		561:  "SPRUCE_DOOR",
		562:  "DARK_PRISMARINE",
		563:  "DARK_OAK_WALL_HANGING_SIGN",
		564:  "LIGHT_BLUE_CANDLE_CAKE",
		565:  "PEARLESCENT_FROGLIGHT",
		566:  "SPRUCE_WOOD",
		567:  "TALL_GRASS",
		568:  "PURPUR_BLOCK",
		569:  "ACACIA_PLANKS",
		570:  "CLAY",
		571:  "DARK_OAK_PRESSURE_PLATE",
		572:  "GRAY_CANDLE",
		573:  "INFESTED_STONE_BRICKS",
		574:  "WAXED_WEATHERED_CHISELED_COPPER",
		575:  "CRACKED_POLISHED_BLACKSTONE_BRICKS",
		576:  "FIRE_CORAL_FAN",
		577:  "HORN_CORAL_FAN",
		578:  "POTTED_TORCHFLOWER",
		579:  "WAXED_EXPOSED_CUT_COPPER",
		580:  "SMOOTH_RED_SANDSTONE_SLAB",
		581:  "STONE_BRICKS",
		582:  "WHEAT",
		583:  "MAGENTA_STAINED_GLASS",
		584:  "MANGROVE_LOG",
		585:  "PINK_BED",
		586:  "PINK_CARPET",
		587:  "POLISHED_BLACKSTONE_BRICKS",
		588:  "CRIMSON_STAIRS",
		589:  "RED_NETHER_BRICK_WALL",
		590:  "SANDSTONE_SLAB",
		591:  "SOUL_SAND",
		592:  "TORCH",
		593:  "GREEN_STAINED_GLASS",
		594:  "LANTERN",
		595:  "SCULK_SENSOR",
		596:  "TARGET",
		597:  "WHITE_TULIP",
		598:  "GRAY_BED",
		599:  "CAVE_VINES",
		600:  "CHERRY_BUTTON",
		601:  "KELP_PLANT",
		602:  "WATER",
		603:  "ANDESITE_STAIRS",
		604:  "PIGLIN_WALL_HEAD",
		605:  "ACACIA_TRAPDOOR",
		606:  "CHERRY_WALL_SIGN",
		607:  "MOSSY_STONE_BRICKS",
		608:  "POTTED_MANGROVE_PROPAGULE",
		609:  "PUMPKIN",
		610:  "RED_CARPET",
		611:  "SMOOTH_SANDSTONE",
		612:  "DEAD_TUBE_CORAL_WALL_FAN",
		613:  "FIRE_CORAL",
		614:  "INFESTED_MOSSY_STONE_BRICKS",
		615:  "MANGROVE_FENCE_GATE",
		616:  "MOSSY_COBBLESTONE_STAIRS",
		617:  "BIRCH_STAIRS",
		618:  "BRICK_STAIRS",
		619:  "SHULKER_BOX",
		620:  "DEEPSLATE_EMERALD_ORE",
		621:  "STRUCTURE_BLOCK",
		622:  "WARPED_DOOR",
		623:  "BLACK_WALL_BANNER",
		624:  "DARK_OAK_HANGING_SIGN",
		625:  "WET_SPONGE",
		626:  "POTTED_PINK_TULIP",
		627:  "SOUL_LANTERN",
		628:  "SPRUCE_WALL_HANGING_SIGN",
		629:  "BIRCH_PLANKS",
		630:  "BROWN_CANDLE",
		631:  "MOVING_PISTON",
		632:  "MUD_BRICK_SLAB",
		633:  "MUD_BRICK_STAIRS",
		634:  "BAMBOO_TRAPDOOR",
		635:  "GRAY_CARPET",
		636:  "ORANGE_BANNER",
		637:  "BELL",
		638:  "GREEN_BANNER",
		639:  "SMOOTH_BASALT",
		640:  "SUGAR_CANE",
		641:  "ACACIA_HANGING_SIGN",
		642:  "BLUE_WALL_BANNER",
		643:  "COBBLED_DEEPSLATE",
		644:  "END_PORTAL_FRAME",
		645:  "TUFF_SLAB",
		646:  "DEEPSLATE_REDSTONE_ORE",
		647:  "PURPLE_WOOL",
		648:  "WAXED_COPPER_BLOCK",
		649:  "BLACK_CONCRETE_POWDER",
		650:  "MANGROVE_BUTTON",
		651:  "OXIDIZED_CUT_COPPER",
		652:  "BAMBOO_MOSAIC_SLAB",
		653:  "DEAD_HORN_CORAL_FAN",
		654:  "TALL_SEAGRASS",
		655:  "WARPED_SIGN",
		656:  "ACACIA_LOG",
		657:  "RED_WOOL",
		658:  "WARPED_FENCE_GATE",
		659:  "WAXED_OXIDIZED_COPPER_BULB",
		660:  "ACACIA_WOOD",
		661:  "HONEYCOMB_BLOCK",
		662:  "MANGROVE_PLANKS",
		663:  "WHITE_BANNER",
		664:  "WITHER_SKELETON_WALL_SKULL",
		665:  "CRIMSON_PRESSURE_PLATE",
		666:  "SPRUCE_SLAB",
		667:  "CHERRY_PRESSURE_PLATE",
		668:  "TUFF_BRICKS",
		669:  "BOOKSHELF",
		670:  "POLISHED_ANDESITE",
		671:  "YELLOW_WOOL",
		672:  "CYAN_TERRACOTTA",
		673:  "EXPOSED_COPPER_TRAPDOOR",
		674:  "REDSTONE_WALL_TORCH",
		675:  "TUBE_CORAL_BLOCK",
		676:  "WAXED_WEATHERED_COPPER_BULB",
		677:  "BIG_DRIPLEAF",
		678:  "BIRCH_WALL_SIGN",
		679:  "DAMAGED_ANVIL",
		680:  "END_STONE_BRICK_WALL",
		681:  "RAIL",
		682:  "JUNGLE_PRESSURE_PLATE",
		683:  "OAK_LOG",
		684:  "RED_TULIP",
		685:  "TUFF_WALL",
		686:  "YELLOW_BED",
		687:  "BLUE_CONCRETE_POWDER",
		688:  "ORANGE_TERRACOTTA",
		689:  "PRISMARINE_BRICK_SLAB",
		690:  "SHROOMLIGHT",
		691:  "ORANGE_TULIP",
		692:  "WALL_TORCH",
		693:  "CANDLE",
		694:  "DEEPSLATE_TILES",
		695:  "FLETCHING_TABLE",
		696:  "POTTED_BIRCH_SAPLING",
		697:  "WHITE_SHULKER_BOX",
		698:  "BIRCH_SAPLING",
		699:  "CHEST",
		700:  "DARK_OAK_STAIRS",
		701:  "MEDIUM_AMETHYST_BUD",
		702:  "POTTED_AZALEA_BUSH",
		703:  "WAXED_CUT_COPPER_SLAB",
		704:  "DEAD_BRAIN_CORAL_WALL_FAN",
		705:  "SPRUCE_TRAPDOOR",
		706:  "SPORE_BLOSSOM",
		707:  "TRIPWIRE",
		708:  "TUFF",
		709:  "CYAN_CONCRETE_POWDER",
		710:  "LAVA",
		711:  "ORANGE_CANDLE_CAKE",
		712:  "STONE_BUTTON",
		713:  "BAMBOO_MOSAIC",
		714:  "COPPER_TRAPDOOR",
		715:  "CYAN_CONCRETE",
		716:  "MAGENTA_WALL_BANNER",
		717:  "COBBLED_DEEPSLATE_SLAB",
		718:  "CRIMSON_WALL_HANGING_SIGN",
		719:  "DARK_OAK_WALL_SIGN",
		720:  "POLISHED_BLACKSTONE_PRESSURE_PLATE",
		721:  "WEEPING_VINES",
		722:  "BLACK_BANNER",
		723:  "BLUE_CANDLE_CAKE",
		724:  "BLUE_SHULKER_BOX",
		725:  "BROWN_CARPET",
		726:  "WARPED_ROOTS",
		727:  "CALIBRATED_SCULK_SENSOR",
		728:  "POLISHED_ANDESITE_SLAB",
		729:  "SANDSTONE_WALL",
		730:  "YELLOW_CANDLE",
		731:  "RED_CONCRETE",
		732:  "ACACIA_LEAVES",
		733:  "COCOA",
		734:  "NETHER_BRICKS",
		735:  "NETHER_WART",
		736:  "OAK_SLAB",
		737:  "BIRCH_BUTTON",
		738:  "BROWN_WALL_BANNER",
		739:  "AIR",
		740:  "BIRCH_LOG",
		741:  "BLACK_SHULKER_BOX",
		742:  "MUD",
		743:  "FURNACE",
		744:  "GREEN_CANDLE_CAKE",
		745:  "ORANGE_WOOL",
		746:  "BRAIN_CORAL_FAN",
		747:  "SPRUCE_WALL_SIGN",
		748:  "WARPED_WALL_SIGN",
		749:  "SPRUCE_PRESSURE_PLATE",
		750:  "CAKE",
		751:  "POLISHED_BLACKSTONE_BUTTON",
		752:  "POTTED_ACACIA_SAPLING",
		753:  "WAXED_CUT_COPPER_STAIRS",
		754:  "WAXED_WEATHERED_COPPER",
		755:  "BLUE_CARPET",
		756:  "DEAD_BRAIN_CORAL_BLOCK",
		757:  "POPPY",
		758:  "PURPLE_CONCRETE_POWDER",
		759:  "REDSTONE_BLOCK",
		760:  "ACACIA_SLAB",
		761:  "CANDLE_CAKE",
		762:  "SEA_PICKLE",
		763:  "BAMBOO_PRESSURE_PLATE",
		764:  "GREEN_STAINED_GLASS_PANE",
		765:  "BARREL",
		766:  "BRAIN_CORAL",
		767:  "CHISELED_DEEPSLATE",
		768:  "GRAY_CONCRETE_POWDER",
		769:  "PINK_CANDLE",
		770:  "CREEPER_WALL_HEAD",
		771:  "DARK_OAK_SIGN",
		772:  "PISTON",
		773:  "PLAYER_HEAD",
		774:  "SPAWNER",
		775:  "BAMBOO",
		776:  "OXIDIZED_COPPER_BULB",
		777:  "PURPLE_CONCRETE",
		778:  "POLISHED_BLACKSTONE_BRICK_STAIRS",
		779:  "PURPLE_WALL_BANNER",
		780:  "ACACIA_STAIRS",
		781:  "BRICK_WALL",
		782:  "BUBBLE_CORAL_WALL_FAN",
		783:  "IRON_ORE",
		784:  "MUD_BRICK_WALL",
		785:  "MOSS_BLOCK",
		786:  "PINK_PETALS",
		787:  "POLISHED_TUFF",
		788:  "CHERRY_LEAVES",
		789:  "LIGHT_BLUE_CONCRETE",
		790:  "LIGHT_BLUE_STAINED_GLASS_PANE",
		791:  "MANGROVE_SIGN",
		792:  "MANGROVE_WALL_HANGING_SIGN",
		793:  "END_STONE_BRICKS",
		794:  "STRIPPED_MANGROVE_LOG",
		795:  "WARPED_HANGING_SIGN",
		796:  "CRIMSON_FENCE_GATE",
		797:  "DARK_OAK_PLANKS",
		798:  "ENDER_CHEST",
		799:  "GRAVEL",
		800:  "ORANGE_CONCRETE_POWDER",
		801:  "COBBLESTONE",
		802:  "DARK_OAK_DOOR",
		803:  "MOSS_CARPET",
		804:  "QUARTZ_BLOCK",
		805:  "WARPED_PRESSURE_PLATE",
		806:  "TORCHFLOWER",
		807:  "TUBE_CORAL",
		808:  "TUFF_STAIRS",
		809:  "BUBBLE_COLUMN",
		810:  "DRAGON_HEAD",
		811:  "PURPUR_SLAB",
		812:  "SCULK_SHRIEKER",
		813:  "STRIPPED_CRIMSON_HYPHAE",
		814:  "WATER_CAULDRON",
		815:  "BLUE_WOOL",
		816:  "BUBBLE_CORAL_BLOCK",
		817:  "FLOWER_POT",
		818:  "CAVE_VINES_PLANT",
		819:  "CHISELED_TUFF_BRICKS",
		820:  "POTTED_RED_MUSHROOM",
		821:  "VOID_AIR",
		822:  "WHITE_CARPET",
		823:  "LIGHT_BLUE_CANDLE",
		824:  "OXIDIZED_COPPER_GRATE",
		825:  "SCAFFOLDING",
		826:  "BLACKSTONE_STAIRS",
		827:  "CHISELED_NETHER_BRICKS",
		828:  "COPPER_GRATE",
		829:  "CYAN_WALL_BANNER",
		830:  "DEEPSLATE_GOLD_ORE",
		831:  "SOUL_WALL_TORCH",
		832:  "BLACK_STAINED_GLASS",
		833:  "NETHER_QUARTZ_ORE",
		834:  "RED_BED",
		835:  "ZOMBIE_WALL_HEAD",
		836:  "CAVE_AIR",
		837:  "CHERRY_DOOR",
		838:  "SKELETON_SKULL",
		839:  "ZOMBIE_HEAD",
		840:  "COBBLESTONE_SLAB",
		841:  "EXPOSED_CUT_COPPER",
		842:  "OCHRE_FROGLIGHT",
		843:  "ORANGE_BED",
		844:  "SMOOTH_QUARTZ_SLAB",
		845:  "CRIMSON_PLANKS",
		846:  "WAXED_COPPER_BULB",
		847:  "CRAFTER",
		848:  "POLISHED_DEEPSLATE_STAIRS",
		849:  "CUT_RED_SANDSTONE",
		850:  "EXPOSED_COPPER_GRATE",
		851:  "EXPOSED_CUT_COPPER_SLAB",
		852:  "SOUL_CAMPFIRE",
		853:  "BROWN_MUSHROOM",
		854:  "CRACKED_NETHER_BRICKS",
		855:  "CYAN_GLAZED_TERRACOTTA",
		856:  "NETHER_BRICK_FENCE",
		857:  "POTTED_OXEYE_DAISY",
		858:  "STRIPPED_WARPED_HYPHAE",
		859:  "DRAGON_WALL_HEAD",
		860:  "JUNGLE_HANGING_SIGN",
		861:  "MOSSY_STONE_BRICK_SLAB",
		862:  "SCULK_VEIN",
		863:  "STONE_BRICK_STAIRS",
		864:  "DEAD_TUBE_CORAL",
		865:  "OXIDIZED_CUT_COPPER_STAIRS",
		866:  "POTTED_SPRUCE_SAPLING",
		867:  "PUMPKIN_STEM",
		868:  "POWDER_SNOW_CAULDRON",
		869:  "RED_BANNER",
		870:  "WAXED_COPPER_DOOR",
		871:  "LIGHT_GRAY_CARPET",
		872:  "MELON",
		873:  "PACKED_MUD",
		874:  "PETRIFIED_OAK_SLAB",
		875:  "POTTED_RED_TULIP",
		876:  "DEEPSLATE_DIAMOND_ORE",
		877:  "POLISHED_BLACKSTONE_STAIRS",
		878:  "POTATOES",
		879:  "SMOOTH_RED_SANDSTONE_STAIRS",
		880:  "SPRUCE_STAIRS",
		881:  "MAGENTA_GLAZED_TERRACOTTA",
		882:  "WARPED_PLANKS",
		883:  "WAXED_WEATHERED_COPPER_TRAPDOOR",
		884:  "MAGMA_BLOCK",
		885:  "MANGROVE_STAIRS",
		886:  "WAXED_EXPOSED_CHISELED_COPPER",
		887:  "WAXED_EXPOSED_COPPER_TRAPDOOR",
		888:  "OAK_WOOD",
		889:  "POLISHED_DIORITE",
		890:  "POTTED_ORANGE_TULIP",
		891:  "RED_SAND",
		892:  "SMOKER",
		893:  "JUNGLE_SAPLING",
		894:  "LIGHT_BLUE_CONCRETE_POWDER",
		895:  "LIGHT_GRAY_STAINED_GLASS",
		896:  "WAXED_EXPOSED_COPPER",
		897:  "CUT_COPPER_STAIRS",
		898:  "FLOWERING_AZALEA",
		899:  "OXIDIZED_CUT_COPPER_SLAB",
		900:  "POTTED_CRIMSON_ROOTS",
		901:  "RED_STAINED_GLASS_PANE",
		902:  "DEAD_HORN_CORAL_WALL_FAN",
		903:  "GRANITE",
		904:  "NETHER_BRICK_SLAB",
		905:  "WAXED_EXPOSED_COPPER_DOOR",
		906:  "ACACIA_SAPLING",
		907:  "CHERRY_HANGING_SIGN",
		908:  "JUNGLE_DOOR",
		909:  "POTTED_JUNGLE_SAPLING",
		910:  "SLIME_BLOCK",
		911:  "VERDANT_FROGLIGHT",
		912:  "WHITE_WALL_BANNER",
		913:  "AMETHYST_BLOCK",
		914:  "COAL_BLOCK",
		915:  "DANDELION",
		916:  "MANGROVE_PRESSURE_PLATE",
		917:  "SMALL_AMETHYST_BUD",
		918:  "EXPOSED_COPPER_BULB",
		919:  "INFESTED_CHISELED_STONE_BRICKS",
		920:  "WARPED_STEM",
		921:  "BLACK_TERRACOTTA",
		922:  "CHERRY_WALL_HANGING_SIGN",
		923:  "PURPLE_STAINED_GLASS_PANE",
		924:  "LIME_TERRACOTTA",
		925:  "PURPLE_TERRACOTTA",
		926:  "STONE_BRICK_SLAB",
		927:  "STRIPPED_OAK_LOG",
		928:  "BLACK_GLAZED_TERRACOTTA",
		929:  "TERRACOTTA",
		930:  "RAW_IRON_BLOCK",
		931:  "STRIPPED_ACACIA_LOG",
		932:  "BLACK_STAINED_GLASS_PANE",
		933:  "DECORATED_POT",
		934:  "DEEPSLATE_COPPER_ORE",
		935:  "STRIPPED_SPRUCE_LOG",
		936:  "DARK_OAK_SLAB",
		937:  "DEAD_FIRE_CORAL_WALL_FAN",
		938:  "SPRUCE_FENCE_GATE",
		939:  "DARK_PRISMARINE_STAIRS",
		940:  "LEVER",
		941:  "POLISHED_DEEPSLATE_SLAB",
		942:  "BAMBOO_BLOCK",
		943:  "BAMBOO_FENCE",
		944:  "DIAMOND_BLOCK",
		945:  "ORANGE_CONCRETE",
		946:  "WAXED_OXIDIZED_CUT_COPPER",
		947:  "PINK_GLAZED_TERRACOTTA",
		948:  "WAXED_CUT_COPPER",
		949:  "BROWN_BANNER",
		950:  "CHISELED_POLISHED_BLACKSTONE",
		951:  "GREEN_GLAZED_TERRACOTTA",
		952:  "MAGENTA_BANNER",
		953:  "MANGROVE_ROOTS",
		954:  "OAK_SAPLING",
		955:  "STRIPPED_MANGROVE_WOOD",
		956:  "SUSPICIOUS_GRAVEL",
		957:  "BAMBOO_BUTTON",
		958:  "GRAY_STAINED_GLASS_PANE",
		959:  "HEAVY_WEIGHTED_PRESSURE_PLATE",
		960:  "HORN_CORAL",
		961:  "JUNGLE_FENCE_GATE",
		962:  "BIRCH_WOOD",
		963:  "CHERRY_SLAB",
		964:  "END_ROD",
		965:  "PRISMARINE_WALL",
		966:  "DRIPSTONE_BLOCK",
		967:  "LIGHT",
		968:  "POTTED_BAMBOO",
		969:  "ANDESITE",
		970:  "NETHERITE_BLOCK",
		971:  "POTTED_FERN",
		972:  "STRIPPED_JUNGLE_LOG",
		973:  "STRIPPED_ACACIA_WOOD",
		974:  "WARPED_FENCE",
		975:  "MUSHROOM_STEM",
		976:  "STONE",
		977:  "CHERRY_TRAPDOOR",
		978:  "CYAN_BED",
		979:  "DEEPSLATE_BRICKS",
		980:  "JUNGLE_FENCE",
		981:  "LIGHT_BLUE_BANNER",
		982:  "MUDDY_MANGROVE_ROOTS",
		983:  "WAXED_EXPOSED_CUT_COPPER_STAIRS",
		984:  "WEATHERED_COPPER_TRAPDOOR",
		985:  "YELLOW_CANDLE_CAKE",
		986:  "GLASS",
		987:  "GRASS_BLOCK",
		988:  "JUNGLE_PLANKS",
		989:  "BLACK_CANDLE",
		990:  "CYAN_STAINED_GLASS_PANE",
		991:  "CYAN_WOOL",
		992:  "FROGSPAWN",
		993:  "FROSTED_ICE",
		994:  "MAGENTA_TERRACOTTA",
		995:  "TNT",
		996:  "BLACK_CONCRETE",
		997:  "STONE_PRESSURE_PLATE",
		998:  "CRIMSON_FUNGUS",
		999:  "DEAD_BRAIN_CORAL_FAN",
		1000: "GRAY_CANDLE_CAKE",
		1001: "JUNGLE_LEAVES",
		1002: "COARSE_DIRT",
		1003: "CRIMSON_FENCE",
		1004: "LAPIS_ORE",
		1005: "SANDSTONE",
		1006: "POLISHED_BLACKSTONE",
		1007: "POTTED_POPPY",
		1008: "PURPLE_CANDLE_CAKE",
		1009: "WARPED_FUNGUS",
		1010: "CRIMSON_TRAPDOOR",
		1011: "LIGHT_BLUE_CARPET",
		1012: "LIGHT_GRAY_BANNER",
		1013: "TRAPPED_CHEST",
		1014: "TRIPWIRE_HOOK",
		1015: "PURPLE_STAINED_GLASS",
		1016: "ACACIA_SIGN",
		1017: "EXPOSED_CUT_COPPER_STAIRS",
		1018: "POLISHED_BLACKSTONE_SLAB",
		1019: "POLISHED_TUFF_SLAB",
		1020: "POTTED_CHERRY_SAPLING",
		1021: "SNIFFER_EGG",
		1022: "BASALT",
		1023: "BROWN_CANDLE_CAKE",
		1024: "JUNGLE_WALL_SIGN",
		1025: "POLISHED_DIORITE_SLAB",
		1026: "PRISMARINE_BRICK_STAIRS",
		1027: "ACACIA_WALL_HANGING_SIGN",
		1028: "DARK_OAK_LOG",
		1029: "POLISHED_TUFF_WALL",
		1030: "NOTE_BLOCK",
		1031: "SPRUCE_PLANKS",
		1032: "BROWN_GLAZED_TERRACOTTA",
		1033: "MOSSY_COBBLESTONE",
		1034: "WAXED_WEATHERED_CUT_COPPER_STAIRS",
		1035: "BAMBOO_STAIRS",
		1036: "CRIMSON_HANGING_SIGN",
		1037: "GRAY_SHULKER_BOX",
		1038: "OXIDIZED_COPPER",
		1039: "POLISHED_BASALT",
		1040: "SCULK",
		1041: "YELLOW_STAINED_GLASS_PANE",
		1042: "ANVIL",
		1043: "EMERALD_BLOCK",
		1044: "PINK_STAINED_GLASS",
		1045: "PURPLE_BANNER",
		1046: "REPEATER",
		1047: "ORANGE_CANDLE",
		1048: "PINK_CONCRETE_POWDER",
		1049: "PURPLE_CARPET",
		1050: "POTTED_CRIMSON_FUNGUS",
		1051: "POTTED_WARPED_ROOTS",
		1052: "ROOTED_DIRT",
		1053: "BEE_NEST",
		1054: "BROWN_TERRACOTTA",
		1055: "DISPENSER",
		1056: "MAGENTA_CARPET",
		1057: "POTTED_BROWN_MUSHROOM",
	}
	Material_value = map[string]int32{
		"CUT_COPPER_SLAB":                    0,
		"LIGHT_GRAY_WOOL":                    1,
		"LILY_PAD":                           2,
		"MANGROVE_LEAVES":                    3,
		"POLISHED_DEEPSLATE_WALL":            4,
		"CONDUIT":                            5,
		"TURTLE_EGG":                         6,
		"WAXED_OXIDIZED_COPPER_TRAPDOOR":     7,
		"EXPOSED_COPPER_DOOR":                8,
		"OAK_BUTTON":                         9,
		"PINK_SHULKER_BOX":                   10,
		"BROWN_CONCRETE_POWDER":              11,
		"CYAN_STAINED_GLASS":                 12,
		"LARGE_AMETHYST_BUD":                 13,
		"WEATHERED_COPPER_BULB":              14,
		"WHITE_STAINED_GLASS_PANE":           15,
		"EXPOSED_COPPER":                     16,
		"JUKEBOX":                            17,
		"WEATHERED_COPPER_DOOR":              18,
		"WAXED_WEATHERED_COPPER_DOOR":        19,
		"OAK_DOOR":                           20,
		"ORANGE_STAINED_GLASS":               21,
		"POLISHED_DEEPSLATE":                 22,
		"POTTED_ALLIUM":                      23,
		"POTTED_WITHER_ROSE":                 24,
		"PEONY":                              25,
		"TUFF_BRICK_WALL":                    26,
		"WAXED_WEATHERED_CUT_COPPER":         27,
		"BLUE_ICE":                           28,
		"FERN":                               29,
		"INFESTED_STONE":                     30,
		"LIME_GLAZED_TERRACOTTA":             31,
		"ORANGE_SHULKER_BOX":                 32,
		"COAL_ORE":                           33,
		"DEEPSLATE":                          34,
		"RED_MUSHROOM":                       35,
		"LIGHT_BLUE_GLAZED_TERRACOTTA":       36,
		"LIGHT_GRAY_CANDLE_CAKE":             37,
		"OAK_WALL_SIGN":                      38,
		"PLAYER_WALL_HEAD":                   39,
		"PURPUR_STAIRS":                      40,
		"BAMBOO_DOOR":                        41,
		"BLACK_CARPET":                       42,
		"DEAD_BUBBLE_CORAL_WALL_FAN":         43,
		"GRAY_STAINED_GLASS":                 44,
		"GREEN_CONCRETE_POWDER":              45,
		"COMPOSTER":                          46,
		"DIORITE_STAIRS":                     47,
		"JUNGLE_STAIRS":                      48,
		"POLISHED_GRANITE":                   49,
		"BRICKS":                             50,
		"CHIPPED_ANVIL":                      51,
		"DARK_OAK_FENCE":                     52,
		"LAVA_CAULDRON":                      53,
		"SMOOTH_RED_SANDSTONE":               54,
		"BLUE_CANDLE":                        55,
		"GRAY_BANNER":                        56,
		"SNOW_BLOCK":                         57,
		"YELLOW_STAINED_GLASS":               58,
		"WITHER_ROSE":                        59,
		"YELLOW_SHULKER_BOX":                 60,
		"CHERRY_STAIRS":                      61,
		"END_PORTAL":                         62,
		"NETHER_PORTAL":                      63,
		"OBSIDIAN":                           64,
		"POWDER_SNOW":                        65,
		"EMERALD_ORE":                        66,
		"LIGHT_GRAY_WALL_BANNER":             67,
		"PINK_TERRACOTTA":                    68,
		"TWISTING_VINES":                     69,
		"JACK_O_LANTERN":                     70,
		"AZALEA":                             71,
		"BAMBOO_WALL_SIGN":                   72,
		"DIAMOND_ORE":                        73,
		"OAK_STAIRS":                         74,
		"COBBLESTONE_STAIRS":                 75,
		"FIRE_CORAL_WALL_FAN":                76,
		"GREEN_BED":                          77,
		"JUNGLE_BUTTON":                      78,
		"MANGROVE_WOOD":                      79,
		"RESPAWN_ANCHOR":                     80,
		"YELLOW_GLAZED_TERRACOTTA":           81,
		"BROWN_BED":                          82,
		"BROWN_CONCRETE":                     83,
		"CHERRY_LOG":                         84,
		"NETHER_BRICK_WALL":                  85,
		"OAK_WALL_HANGING_SIGN":              86,
		"CRIMSON_STEM":                       87,
		"DRAGON_EGG":                         88,
		"PINK_TULIP":                         89,
		"ATTACHED_MELON_STEM":                90,
		"BIRCH_SLAB":                         91,
		"POTTED_DEAD_BUSH":                   92,
		"RED_NETHER_BRICKS":                  93,
		"TUBE_CORAL_WALL_FAN":                94,
		"BEDROCK":                            95,
		"BROWN_STAINED_GLASS_PANE":           96,
		"CHERRY_PLANKS":                      97,
		"DARK_OAK_SAPLING":                   98,
		"OAK_LEAVES":                         99,
		"CRYING_OBSIDIAN":                    100,
		"KELP":                               101,
		"BAMBOO_SLAB":                        102,
		"CHERRY_SIGN":                        103,
		"LIGHT_GRAY_CANDLE":                  104,
		"OXIDIZED_CHISELED_COPPER":           105,
		"FIRE_CORAL_BLOCK":                   106,
		"MOSSY_STONE_BRICK_WALL":             107,
		"PINK_CONCRETE":                      108,
		"STRIPPED_DARK_OAK_WOOD":             109,
		"WAXED_CHISELED_COPPER":              110,
		"GOLD_ORE":                           111,
		"ORANGE_WALL_BANNER":                 112,
		"POLISHED_TUFF_STAIRS":               113,
		"PURPLE_CANDLE":                      114,
		"WARPED_BUTTON":                      115,
		"DEAD_TUBE_CORAL_FAN":                116,
		"MOSSY_COBBLESTONE_WALL":             117,
		"RED_STAINED_GLASS":                  118,
		"WHITE_STAINED_GLASS":                119,
		"ACACIA_BUTTON":                      120,
		"GRAY_CONCRETE":                      121,
		"RED_TERRACOTTA":                     122,
		"ROSE_BUSH":                          123,
		"WAXED_OXIDIZED_CUT_COPPER_STAIRS":   124,
		"WAXED_COPPER_GRATE":                 125,
		"WHITE_CONCRETE_POWDER":              126,
		"BRICK_SLAB":                         127,
		"CRIMSON_HYPHAE":                     128,
		"DARK_OAK_BUTTON":                    129,
		"DEEPSLATE_BRICK_WALL":               130,
		"RED_SANDSTONE_STAIRS":               131,
		"SMOOTH_QUARTZ_STAIRS":               132,
		"TWISTING_VINES_PLANT":               133,
		"BROWN_SHULKER_BOX":                  134,
		"COPPER_DOOR":                        135,
		"DETECTOR_RAIL":                      136,
		"LIME_BED":                           137,
		"MANGROVE_FENCE":                     138,
		"QUARTZ_BRICKS":                      139,
		"ANDESITE_SLAB":                      140,
		"CHORUS_PLANT":                       141,
		"JUNGLE_LOG":                         142,
		"OAK_PRESSURE_PLATE":                 143,
		"PINK_BANNER":                        144,
		"GREEN_SHULKER_BOX":                  145,
		"OAK_PLANKS":                         146,
		"TORCHFLOWER_CROP":                   147,
		"CHAIN_COMMAND_BLOCK":                148,
		"LIGHTNING_ROD":                      149,
		"PODZOL":                             150,
		"RED_CANDLE":                         151,
		"RED_WALL_BANNER":                    152,
		"DRIED_KELP_BLOCK":                   153,
		"SKELETON_WALL_SKULL":                154,
		"STICKY_PISTON":                      155,
		"POTTED_CORNFLOWER":                  156,
		"WAXED_COPPER_TRAPDOOR":              157,
		"DEEPSLATE_BRICK_STAIRS":             158,
		"GREEN_WOOL":                         159,
		"IRON_TRAPDOOR":                      160,
		"POTTED_DANDELION":                   161,
		"POTTED_WARPED_FUNGUS":               162,
		"BAMBOO_PLANKS":                      163,
		"CHISELED_QUARTZ_BLOCK":              164,
		"CRIMSON_NYLIUM":                     165,
		"POTTED_CACTUS":                      166,
		"WARPED_HYPHAE":                      167,
		"CALCITE":                            168,
		"WAXED_EXPOSED_COPPER_GRATE":         169,
		"YELLOW_CARPET":                      170,
		"ACTIVATOR_RAIL":                     171,
		"END_STONE_BRICK_SLAB":               172,
		"FARMLAND":                           173,
		"STRIPPED_BIRCH_LOG":                 174,
		"BLUE_ORCHID":                        175,
		"CRACKED_STONE_BRICKS":               176,
		"PITCHER_PLANT":                      177,
		"SHORT_GRASS":                        178,
		"REDSTONE_ORE":                       179,
		"WAXED_OXIDIZED_COPPER_GRATE":        180,
		"WHITE_GLAZED_TERRACOTTA":            181,
		"BIRCH_TRAPDOOR":                     182,
		"CRIMSON_ROOTS":                      183,
		"LIGHT_BLUE_WALL_BANNER":             184,
		"OAK_SIGN":                           185,
		"PIGLIN_HEAD":                        186,
		"MAGENTA_CONCRETE_POWDER":            187,
		"RED_CONCRETE_POWDER":                188,
		"WAXED_EXPOSED_COPPER_BULB":          189,
		"CARVED_PUMPKIN":                     190,
		"COBBLED_DEEPSLATE_WALL":             191,
		"COPPER_BULB":                        192,
		"LIGHT_BLUE_SHULKER_BOX":             193,
		"LIGHT_BLUE_STAINED_GLASS":           194,
		"SMOOTH_STONE":                       195,
		"SPRUCE_LOG":                         196,
		"WHITE_CANDLE_CAKE":                  197,
		"CRAFTING_TABLE":                     198,
		"DIORITE":                            199,
		"LIGHT_GRAY_STAINED_GLASS_PANE":      200,
		"LIME_STAINED_GLASS_PANE":            201,
		"NETHER_SPROUTS":                     202,
		"BLACK_CANDLE_CAKE":                  203,
		"CHISELED_SANDSTONE":                 204,
		"CRIMSON_WALL_SIGN":                  205,
		"GLASS_PANE":                         206,
		"SUNFLOWER":                          207,
		"BLACK_WOOL":                         208,
		"DEAD_HORN_CORAL":                    209,
		"EXPOSED_CHISELED_COPPER":            210,
		"GLOW_LICHEN":                        211,
		"POTTED_BLUE_ORCHID":                 212,
		"BUBBLE_CORAL":                       213,
		"IRON_DOOR":                          214,
		"POTTED_WHITE_TULIP":                 215,
		"BLACKSTONE_WALL":                    216,
		"BLUE_BANNER":                        217,
		"SMITHING_TABLE":                     218,
		"REINFORCED_DEEPSLATE":               219,
		"BAMBOO_SIGN":                        220,
		"BLACKSTONE_SLAB":                    221,
		"CUT_COPPER":                         222,
		"DARK_OAK_LEAVES":                    223,
		"MANGROVE_SLAB":                      224,
		"BEETROOTS":                          225,
		"DEEPSLATE_LAPIS_ORE":                226,
		"GRINDSTONE":                         227,
		"POWERED_RAIL":                       228,
		"BARRIER":                            229,
		"GILDED_BLACKSTONE":                  230,
		"WARPED_NYLIUM":                      231,
		"CACTUS":                             232,
		"HAY_BLOCK":                          233,
		"POLISHED_GRANITE_STAIRS":            234,
		"JUNGLE_SIGN":                        235,
		"JUNGLE_WALL_HANGING_SIGN":           236,
		"BIRCH_PRESSURE_PLATE":               237,
		"POTTED_FLOWERING_AZALEA_BUSH":       238,
		"SAND":                               239,
		"SNOW":                               240,
		"BIRCH_FENCE_GATE":                   241,
		"CHERRY_SAPLING":                     242,
		"CRACKED_DEEPSLATE_TILES":            243,
		"LIGHT_GRAY_CONCRETE_POWDER":         244,
		"RED_SANDSTONE_SLAB":                 245,
		"COMPARATOR":                         246,
		"CYAN_SHULKER_BOX":                   247,
		"INFESTED_CRACKED_STONE_BRICKS":      248,
		"ANDESITE_WALL":                      249,
		"ATTACHED_PUMPKIN_STEM":              250,
		"LIME_WALL_BANNER":                   251,
		"SMOOTH_SANDSTONE_SLAB":              252,
		"STONECUTTER":                        253,
		"WAXED_WEATHERED_CUT_COPPER_SLAB":    254,
		"GRANITE_WALL":                       255,
		"WHITE_BED":                          256,
		"GREEN_WALL_BANNER":                  257,
		"RED_CANDLE_CAKE":                    258,
		"LIGHT_GRAY_GLAZED_TERRACOTTA":       259,
		"POTTED_DARK_OAK_SAPLING":            260,
		"COPPER_ORE":                         261,
		"POTTED_AZURE_BLUET":                 262,
		"BIRCH_DOOR":                         263,
		"BONE_BLOCK":                         264,
		"GRAY_WOOL":                          265,
		"JUNGLE_SLAB":                        266,
		"COPPER_BLOCK":                       267,
		"DEEPSLATE_BRICK_SLAB":               268,
		"LIGHT_GRAY_SHULKER_BOX":             269,
		"STRIPPED_CHERRY_WOOD":               270,
		"BIRCH_LEAVES":                       271,
		"HORN_CORAL_BLOCK":                   272,
		"JUNGLE_WOOD":                        273,
		"QUARTZ_SLAB":                        274,
		"WEATHERED_CUT_COPPER_SLAB":          275,
		"BLUE_STAINED_GLASS":                 276,
		"DARK_OAK_FENCE_GATE":                277,
		"DEAD_TUBE_CORAL_BLOCK":              278,
		"MANGROVE_WALL_SIGN":                 279,
		"OXEYE_DAISY":                        280,
		"BAMBOO_SAPLING":                     281,
		"DARK_OAK_WOOD":                      282,
		"HORN_CORAL_WALL_FAN":                283,
		"IRON_BLOCK":                         284,
		"OXIDIZED_COPPER_DOOR":               285,
		"PINK_WALL_BANNER":                   286,
		"PURPUR_PILLAR":                      287,
		"WAXED_OXIDIZED_COPPER":              288,
		"ACACIA_FENCE_GATE":                  289,
		"CHISELED_COPPER":                    290,
		"LIME_CANDLE":                        291,
		"BIRCH_WALL_HANGING_SIGN":            292,
		"DROPPER":                            293,
		"LIGHT_BLUE_BED":                     294,
		"REPEATING_COMMAND_BLOCK":            295,
		"WAXED_WEATHERED_COPPER_GRATE":       296,
		"SPONGE":                             297,
		"SPRUCE_SIGN":                        298,
		"TUBE_CORAL_FAN":                     299,
		"ALLIUM":                             300,
		"BAMBOO_WALL_HANGING_SIGN":           301,
		"BIRCH_FENCE":                        302,
		"LIGHT_GRAY_BED":                     303,
		"LIME_CANDLE_CAKE":                   304,
		"DARK_PRISMARINE_SLAB":               305,
		"END_STONE":                          306,
		"SWEET_BERRY_BUSH":                   307,
		"WARPED_TRAPDOOR":                    308,
		"WHITE_TERRACOTTA":                   309,
		"MAGENTA_SHULKER_BOX":                310,
		"RAW_GOLD_BLOCK":                     311,
		"SOUL_FIRE":                          312,
		"SOUL_TORCH":                         313,
		"SPRUCE_FENCE":                       314,
		"OBSERVER":                           315,
		"WEATHERED_CUT_COPPER_STAIRS":        316,
		"TRIAL_SPAWNER":                      317,
		"CUT_RED_SANDSTONE_SLAB":             318,
		"GRANITE_STAIRS":                     319,
		"LIME_WOOL":                          320,
		"MAGENTA_CONCRETE":                   321,
		"OAK_HANGING_SIGN":                   322,
		"CARROTS":                            323,
		"DEAD_HORN_CORAL_BLOCK":              324,
		"NETHER_GOLD_ORE":                    325,
		"ORANGE_STAINED_GLASS_PANE":          326,
		"COBBLESTONE_WALL":                   327,
		"JUNGLE_TRAPDOOR":                    328,
		"STONE_STAIRS":                       329,
		"MANGROVE_HANGING_SIGN":              330,
		"MUD_BRICKS":                         331,
		"STRIPPED_JUNGLE_WOOD":               332,
		"AZALEA_LEAVES":                      333,
		"BAMBOO_MOSAIC_STAIRS":               334,
		"BEEHIVE":                            335,
		"HANGING_ROOTS":                      336,
		"INFESTED_DEEPSLATE":                 337,
		"CHERRY_FENCE":                       338,
		"LECTERN":                            339,
		"LILAC":                              340,
		"CHERRY_FENCE_GATE":                  341,
		"LADDER":                             342,
		"LIGHT_GRAY_CONCRETE":                343,
		"OAK_FENCE":                          344,
		"PITCHER_CROP":                       345,
		"BIRCH_HANGING_SIGN":                 346,
		"DEAD_FIRE_CORAL_BLOCK":              347,
		"LILY_OF_THE_VALLEY":                 348,
		"CHERRY_WOOD":                        349,
		"VINE":                               350,
		"WAXED_OXIDIZED_CUT_COPPER_SLAB":     351,
		"PRISMARINE":                         352,
		"TINTED_GLASS":                       353,
		"BLUE_GLAZED_TERRACOTTA":             354,
		"LIGHT_BLUE_TERRACOTTA":              355,
		"MANGROVE_PROPAGULE":                 356,
		"PACKED_ICE":                         357,
		"DEAD_BRAIN_CORAL":                   358,
		"SMOOTH_SANDSTONE_STAIRS":            359,
		"RED_GLAZED_TERRACOTTA":              360,
		"RED_NETHER_BRICK_SLAB":              361,
		"REDSTONE_LAMP":                      362,
		"ACACIA_WALL_SIGN":                   363,
		"BIG_DRIPLEAF_STEM":                  364,
		"CHISELED_TUFF":                      365,
		"FLOWERING_AZALEA_LEAVES":            366,
		"MANGROVE_DOOR":                      367,
		"SPRUCE_LEAVES":                      368,
		"STRIPPED_CRIMSON_STEM":              369,
		"LAPIS_BLOCK":                        370,
		"PRISMARINE_STAIRS":                  371,
		"QUARTZ_PILLAR":                      372,
		"LODESTONE":                          373,
		"STRIPPED_BAMBOO_BLOCK":              374,
		"BLUE_BED":                           375,
		"CARTOGRAPHY_TABLE":                  376,
		"DEAD_BUBBLE_CORAL_BLOCK":            377,
		"END_STONE_BRICK_STAIRS":             378,
		"OAK_FENCE_GATE":                     379,
		"DEEPSLATE_IRON_ORE":                 380,
		"DEEPSLATE_TILE_SLAB":                381,
		"POLISHED_GRANITE_SLAB":              382,
		"WAXED_OXIDIZED_CHISELED_COPPER":     383,
		"AZURE_BLUET":                        384,
		"CUT_SANDSTONE":                      385,
		"LIME_BANNER":                        386,
		"SEA_LANTERN":                        387,
		"BRAIN_CORAL_WALL_FAN":               388,
		"LIME_CARPET":                        389,
		"MAGENTA_BED":                        390,
		"BROWN_MUSHROOM_BLOCK":               391,
		"DEAD_BUBBLE_CORAL":                  392,
		"GREEN_TERRACOTTA":                   393,
		"PINK_CANDLE_CAKE":                   394,
		"WHITE_CONCRETE":                     395,
		"BEACON":                             396,
		"BLACK_BED":                          397,
		"CYAN_BANNER":                        398,
		"SMOOTH_QUARTZ":                      399,
		"WAXED_OXIDIZED_COPPER_DOOR":         400,
		"LOOM":                               401,
		"NETHER_BRICK_STAIRS":                402,
		"ORANGE_GLAZED_TERRACOTTA":           403,
		"STONE_SLAB":                         404,
		"CAULDRON":                           405,
		"CORNFLOWER":                         406,
		"DEAD_FIRE_CORAL_FAN":                407,
		"GREEN_CONCRETE":                     408,
		"POINTED_DRIPSTONE":                  409,
		"CHORUS_FLOWER":                      410,
		"HOPPER":                             411,
		"RAW_COPPER_BLOCK":                   412,
		"WEATHERED_CUT_COPPER":               413,
		"CHAIN":                              414,
		"DEAD_BUBBLE_CORAL_FAN":              415,
		"DEEPSLATE_COAL_ORE":                 416,
		"YELLOW_BANNER":                      417,
		"BREWING_STAND":                      418,
		"DIORITE_WALL":                       419,
		"SPRUCE_HANGING_SIGN":                420,
		"STRIPPED_DARK_OAK_LOG":              421,
		"STRUCTURE_VOID":                     422,
		"SMOOTH_STONE_SLAB":                  423,
		"WARPED_WALL_HANGING_SIGN":           424,
		"WARPED_WART_BLOCK":                  425,
		"BLAST_FURNACE":                      426,
		"LIGHT_GRAY_TERRACOTTA":              427,
		"MAGENTA_CANDLE":                     428,
		"MOSSY_STONE_BRICK_STAIRS":           429,
		"RED_NETHER_BRICK_STAIRS":            430,
		"STRIPPED_CHERRY_LOG":                431,
		"STRIPPED_WARPED_STEM":               432,
		"CHISELED_BOOKSHELF":                 433,
		"COMMAND_BLOCK":                      434,
		"LIME_CONCRETE_POWDER":               435,
		"MANGROVE_TRAPDOOR":                  436,
		"MELON_STEM":                         437,
		"COBBLED_DEEPSLATE_STAIRS":           438,
		"WHITE_CANDLE":                       439,
		"POLISHED_BLACKSTONE_BRICK_SLAB":     440,
		"REDSTONE_TORCH":                     441,
		"STRIPPED_SPRUCE_WOOD":               442,
		"WEEPING_VINES_PLANT":                443,
		"YELLOW_CONCRETE":                    444,
		"GREEN_CARPET":                       445,
		"SANDSTONE_STAIRS":                   446,
		"SEAGRASS":                           447,
		"CHISELED_STONE_BRICKS":              448,
		"CRIMSON_SLAB":                       449,
		"CYAN_CANDLE_CAKE":                   450,
		"ORANGE_CARPET":                      451,
		"SPRUCE_SAPLING":                     452,
		"SPRUCE_BUTTON":                      453,
		"GRANITE_SLAB":                       454,
		"POLISHED_BLACKSTONE_WALL":           455,
		"POLISHED_DIORITE_STAIRS":            456,
		"RED_SANDSTONE":                      457,
		"SOUL_SOIL":                          458,
		"ANCIENT_DEBRIS":                     459,
		"CREEPER_HEAD":                       460,
		"GLOWSTONE":                          461,
		"OXIDIZED_COPPER_TRAPDOOR":           462,
		"WARPED_SLAB":                        463,
		"WHITE_WOOL":                         464,
		"DARK_OAK_TRAPDOOR":                  465,
		"RED_SANDSTONE_WALL":                 466,
		"WEATHERED_COPPER":                   467,
		"GOLD_BLOCK":                         468,
		"HONEY_BLOCK":                        469,
		"INFESTED_COBBLESTONE":               470,
		"MAGENTA_WOOL":                       471,
		"PINK_STAINED_GLASS_PANE":            472,
		"ACACIA_FENCE":                       473,
		"BROWN_STAINED_GLASS":                474,
		"SCULK_CATALYST":                     475,
		"SUSPICIOUS_SAND":                    476,
		"WAXED_EXPOSED_CUT_COPPER_SLAB":      477,
		"BUBBLE_CORAL_FAN":                   478,
		"DEEPSLATE_TILE_WALL":                479,
		"GRAY_TERRACOTTA":                    480,
		"PURPLE_SHULKER_BOX":                 481,
		"QUARTZ_STAIRS":                      482,
		"DEAD_BUSH":                          483,
		"LIME_STAINED_GLASS":                 484,
		"PURPLE_GLAZED_TERRACOTTA":           485,
		"POLISHED_ANDESITE_STAIRS":           486,
		"SMALL_DRIPLEAF":                     487,
		"DIRT":                               488,
		"GRAY_GLAZED_TERRACOTTA":             489,
		"LARGE_FERN":                         490,
		"LIGHT_BLUE_WOOL":                    491,
		"LIME_CONCRETE":                      492,
		"STONE_BRICK_WALL":                   493,
		"BLACKSTONE":                         494,
		"COBWEB":                             495,
		"DIORITE_SLAB":                       496,
		"NETHER_WART_BLOCK":                  497,
		"PURPLE_BED":                         498,
		"BAMBOO_FENCE_GATE":                  499,
		"MOSSY_COBBLESTONE_SLAB":             500,
		"TUFF_BRICK_SLAB":                    501,
		"BROWN_WOOL":                         502,
		"OAK_TRAPDOOR":                       503,
		"YELLOW_CONCRETE_POWDER":             504,
		"CRIMSON_BUTTON":                     505,
		"BUDDING_AMETHYST":                   506,
		"PINK_WOOL":                          507,
		"YELLOW_TERRACOTTA":                  508,
		"BLUE_TERRACOTTA":                    509,
		"DEEPSLATE_TILE_STAIRS":              510,
		"NETHERRACK":                         511,
		"WARPED_STAIRS":                      512,
		"WEATHERED_COPPER_GRATE":             513,
		"ACACIA_PRESSURE_PLATE":              514,
		"BLUE_STAINED_GLASS_PANE":            515,
		"BRAIN_CORAL_BLOCK":                  516,
		"DAYLIGHT_DETECTOR":                  517,
		"END_GATEWAY":                        518,
		"POLISHED_BLACKSTONE_BRICK_WALL":     519,
		"WEATHERED_CHISELED_COPPER":          520,
		"YELLOW_WALL_BANNER":                 521,
		"CYAN_CARPET":                        522,
		"DEAD_FIRE_CORAL":                    523,
		"ENCHANTING_TABLE":                   524,
		"ICE":                                525,
		"LIME_SHULKER_BOX":                   526,
		"BLUE_CONCRETE":                      527,
		"MYCELIUM":                           528,
		"CAMPFIRE":                           529,
		"STRIPPED_OAK_WOOD":                  530,
		"CRACKED_DEEPSLATE_BRICKS":           531,
		"GRAY_WALL_BANNER":                   532,
		"GREEN_CANDLE":                       533,
		"TUFF_BRICK_STAIRS":                  534,
		"DIRT_PATH":                          535,
		"LIGHT_WEIGHTED_PRESSURE_PLATE":      536,
		"PISTON_HEAD":                        537,
		"PRISMARINE_SLAB":                    538,
		"STRIPPED_BIRCH_WOOD":                539,
		"BIRCH_SIGN":                         540,
		"CRIMSON_DOOR":                       541,
		"CYAN_CANDLE":                        542,
		"IRON_BARS":                          543,
		"BAMBOO_HANGING_SIGN":                544,
		"MAGENTA_STAINED_GLASS_PANE":         545,
		"POTTED_OAK_SAPLING":                 546,
		"PRISMARINE_BRICKS":                  547,
		"REDSTONE_WIRE":                      548,
		"ACACIA_DOOR":                        549,
		"AMETHYST_CLUSTER":                   550,
		"CUT_SANDSTONE_SLAB":                 551,
		"POTTED_LILY_OF_THE_VALLEY":          552,
		"RED_SHULKER_BOX":                    553,
		"CRIMSON_SIGN":                       554,
		"FIRE":                               555,
		"JIGSAW":                             556,
		"WITHER_SKELETON_SKULL":              557,
		"CHISELED_RED_SANDSTONE":             558,
		"MAGENTA_CANDLE_CAKE":                559,
		"RED_MUSHROOM_BLOCK":                 560,
		"SPRUCE_DOOR":                        561,
		"DARK_PRISMARINE":                    562,
		"DARK_OAK_WALL_HANGING_SIGN":         563,
		"LIGHT_BLUE_CANDLE_CAKE":             564,
		"PEARLESCENT_FROGLIGHT":              565,
		"SPRUCE_WOOD":                        566,
		"TALL_GRASS":                         567,
		"PURPUR_BLOCK":                       568,
		"ACACIA_PLANKS":                      569,
		"CLAY":                               570,
		"DARK_OAK_PRESSURE_PLATE":            571,
		"GRAY_CANDLE":                        572,
		"INFESTED_STONE_BRICKS":              573,
		"WAXED_WEATHERED_CHISELED_COPPER":    574,
		"CRACKED_POLISHED_BLACKSTONE_BRICKS": 575,
		"FIRE_CORAL_FAN":                     576,
		"HORN_CORAL_FAN":                     577,
		"POTTED_TORCHFLOWER":                 578,
		"WAXED_EXPOSED_CUT_COPPER":           579,
		"SMOOTH_RED_SANDSTONE_SLAB":          580,
		"STONE_BRICKS":                       581,
		"WHEAT":                              582,
		"MAGENTA_STAINED_GLASS":              583,
		"MANGROVE_LOG":                       584,
		"PINK_BED":                           585,
		"PINK_CARPET":                        586,
		"POLISHED_BLACKSTONE_BRICKS":         587,
		"CRIMSON_STAIRS":                     588,
		"RED_NETHER_BRICK_WALL":              589,
		"SANDSTONE_SLAB":                     590,
		"SOUL_SAND":                          591,
		"TORCH":                              592,
		"GREEN_STAINED_GLASS":                593,
		"LANTERN":                            594,
		"SCULK_SENSOR":                       595,
		"TARGET":                             596,
		"WHITE_TULIP":                        597,
		"GRAY_BED":                           598,
		"CAVE_VINES":                         599,
		"CHERRY_BUTTON":                      600,
		"KELP_PLANT":                         601,
		"WATER":                              602,
		"ANDESITE_STAIRS":                    603,
		"PIGLIN_WALL_HEAD":                   604,
		"ACACIA_TRAPDOOR":                    605,
		"CHERRY_WALL_SIGN":                   606,
		"MOSSY_STONE_BRICKS":                 607,
		"POTTED_MANGROVE_PROPAGULE":          608,
		"PUMPKIN":                            609,
		"RED_CARPET":                         610,
		"SMOOTH_SANDSTONE":                   611,
		"DEAD_TUBE_CORAL_WALL_FAN":           612,
		"FIRE_CORAL":                         613,
		"INFESTED_MOSSY_STONE_BRICKS":        614,
		"MANGROVE_FENCE_GATE":                615,
		"MOSSY_COBBLESTONE_STAIRS":           616,
		"BIRCH_STAIRS":                       617,
		"BRICK_STAIRS":                       618,
		"SHULKER_BOX":                        619,
		"DEEPSLATE_EMERALD_ORE":              620,
		"STRUCTURE_BLOCK":                    621,
		"WARPED_DOOR":                        622,
		"BLACK_WALL_BANNER":                  623,
		"DARK_OAK_HANGING_SIGN":              624,
		"WET_SPONGE":                         625,
		"POTTED_PINK_TULIP":                  626,
		"SOUL_LANTERN":                       627,
		"SPRUCE_WALL_HANGING_SIGN":           628,
		"BIRCH_PLANKS":                       629,
		"BROWN_CANDLE":                       630,
		"MOVING_PISTON":                      631,
		"MUD_BRICK_SLAB":                     632,
		"MUD_BRICK_STAIRS":                   633,
		"BAMBOO_TRAPDOOR":                    634,
		"GRAY_CARPET":                        635,
		"ORANGE_BANNER":                      636,
		"BELL":                               637,
		"GREEN_BANNER":                       638,
		"SMOOTH_BASALT":                      639,
		"SUGAR_CANE":                         640,
		"ACACIA_HANGING_SIGN":                641,
		"BLUE_WALL_BANNER":                   642,
		"COBBLED_DEEPSLATE":                  643,
		"END_PORTAL_FRAME":                   644,
		"TUFF_SLAB":                          645,
		"DEEPSLATE_REDSTONE_ORE":             646,
		"PURPLE_WOOL":                        647,
		"WAXED_COPPER_BLOCK":                 648,
		"BLACK_CONCRETE_POWDER":              649,
		"MANGROVE_BUTTON":                    650,
		"OXIDIZED_CUT_COPPER":                651,
		"BAMBOO_MOSAIC_SLAB":                 652,
		"DEAD_HORN_CORAL_FAN":                653,
		"TALL_SEAGRASS":                      654,
		"WARPED_SIGN":                        655,
		"ACACIA_LOG":                         656,
		"RED_WOOL":                           657,
		"WARPED_FENCE_GATE":                  658,
		"WAXED_OXIDIZED_COPPER_BULB":         659,
		"ACACIA_WOOD":                        660,
		"HONEYCOMB_BLOCK":                    661,
		"MANGROVE_PLANKS":                    662,
		"WHITE_BANNER":                       663,
		"WITHER_SKELETON_WALL_SKULL":         664,
		"CRIMSON_PRESSURE_PLATE":             665,
		"SPRUCE_SLAB":                        666,
		"CHERRY_PRESSURE_PLATE":              667,
		"TUFF_BRICKS":                        668,
		"BOOKSHELF":                          669,
		"POLISHED_ANDESITE":                  670,
		"YELLOW_WOOL":                        671,
		"CYAN_TERRACOTTA":                    672,
		"EXPOSED_COPPER_TRAPDOOR":            673,
		"REDSTONE_WALL_TORCH":                674,
		"TUBE_CORAL_BLOCK":                   675,
		"WAXED_WEATHERED_COPPER_BULB":        676,
		"BIG_DRIPLEAF":                       677,
		"BIRCH_WALL_SIGN":                    678,
		"DAMAGED_ANVIL":                      679,
		"END_STONE_BRICK_WALL":               680,
		"RAIL":                               681,
		"JUNGLE_PRESSURE_PLATE":              682,
		"OAK_LOG":                            683,
		"RED_TULIP":                          684,
		"TUFF_WALL":                          685,
		"YELLOW_BED":                         686,
		"BLUE_CONCRETE_POWDER":               687,
		"ORANGE_TERRACOTTA":                  688,
		"PRISMARINE_BRICK_SLAB":              689,
		"SHROOMLIGHT":                        690,
		"ORANGE_TULIP":                       691,
		"WALL_TORCH":                         692,
		"CANDLE":                             693,
		"DEEPSLATE_TILES":                    694,
		"FLETCHING_TABLE":                    695,
		"POTTED_BIRCH_SAPLING":               696,
		"WHITE_SHULKER_BOX":                  697,
		"BIRCH_SAPLING":                      698,
		"CHEST":                              699,
		"DARK_OAK_STAIRS":                    700,
		"MEDIUM_AMETHYST_BUD":                701,
		"POTTED_AZALEA_BUSH":                 702,
		"WAXED_CUT_COPPER_SLAB":              703,
		"DEAD_BRAIN_CORAL_WALL_FAN":          704,
		"SPRUCE_TRAPDOOR":                    705,
		"SPORE_BLOSSOM":                      706,
		"TRIPWIRE":                           707,
		"TUFF":                               708,
		"CYAN_CONCRETE_POWDER":               709,
		"LAVA":                               710,
		"ORANGE_CANDLE_CAKE":                 711,
		"STONE_BUTTON":                       712,
		"BAMBOO_MOSAIC":                      713,
		"COPPER_TRAPDOOR":                    714,
		"CYAN_CONCRETE":                      715,
		"MAGENTA_WALL_BANNER":                716,
		"COBBLED_DEEPSLATE_SLAB":             717,
		"CRIMSON_WALL_HANGING_SIGN":          718,
		"DARK_OAK_WALL_SIGN":                 719,
		"POLISHED_BLACKSTONE_PRESSURE_PLATE": 720,
		"WEEPING_VINES":                      721,
		"BLACK_BANNER":                       722,
		"BLUE_CANDLE_CAKE":                   723,
		"BLUE_SHULKER_BOX":                   724,
		"BROWN_CARPET":                       725,
		"WARPED_ROOTS":                       726,
		"CALIBRATED_SCULK_SENSOR":            727,
		"POLISHED_ANDESITE_SLAB":             728,
		"SANDSTONE_WALL":                     729,
		"YELLOW_CANDLE":                      730,
		"RED_CONCRETE":                       731,
		"ACACIA_LEAVES":                      732,
		"COCOA":                              733,
		"NETHER_BRICKS":                      734,
		"NETHER_WART":                        735,
		"OAK_SLAB":                           736,
		"BIRCH_BUTTON":                       737,
		"BROWN_WALL_BANNER":                  738,
		"AIR":                                739,
		"BIRCH_LOG":                          740,
		"BLACK_SHULKER_BOX":                  741,
		"MUD":                                742,
		"FURNACE":                            743,
		"GREEN_CANDLE_CAKE":                  744,
		"ORANGE_WOOL":                        745,
		"BRAIN_CORAL_FAN":                    746,
		"SPRUCE_WALL_SIGN":                   747,
		"WARPED_WALL_SIGN":                   748,
		"SPRUCE_PRESSURE_PLATE":              749,
		"CAKE":                               750,
		"POLISHED_BLACKSTONE_BUTTON":         751,
		"POTTED_ACACIA_SAPLING":              752,
		"WAXED_CUT_COPPER_STAIRS":            753,
		"WAXED_WEATHERED_COPPER":             754,
		"BLUE_CARPET":                        755,
		"DEAD_BRAIN_CORAL_BLOCK":             756,
		"POPPY":                              757,
		"PURPLE_CONCRETE_POWDER":             758,
		"REDSTONE_BLOCK":                     759,
		"ACACIA_SLAB":                        760,
		"CANDLE_CAKE":                        761,
		"SEA_PICKLE":                         762,
		"BAMBOO_PRESSURE_PLATE":              763,
		"GREEN_STAINED_GLASS_PANE":           764,
		"BARREL":                             765,
		"BRAIN_CORAL":                        766,
		"CHISELED_DEEPSLATE":                 767,
		"GRAY_CONCRETE_POWDER":               768,
		"PINK_CANDLE":                        769,
		"CREEPER_WALL_HEAD":                  770,
		"DARK_OAK_SIGN":                      771,
		"PISTON":                             772,
		"PLAYER_HEAD":                        773,
		"SPAWNER":                            774,
		"BAMBOO":                             775,
		"OXIDIZED_COPPER_BULB":               776,
		"PURPLE_CONCRETE":                    777,
		"POLISHED_BLACKSTONE_BRICK_STAIRS":   778,
		"PURPLE_WALL_BANNER":                 779,
		"ACACIA_STAIRS":                      780,
		"BRICK_WALL":                         781,
		"BUBBLE_CORAL_WALL_FAN":              782,
		"IRON_ORE":                           783,
		"MUD_BRICK_WALL":                     784,
		"MOSS_BLOCK":                         785,
		"PINK_PETALS":                        786,
		"POLISHED_TUFF":                      787,
		"CHERRY_LEAVES":                      788,
		"LIGHT_BLUE_CONCRETE":                789,
		"LIGHT_BLUE_STAINED_GLASS_PANE":      790,
		"MANGROVE_SIGN":                      791,
		"MANGROVE_WALL_HANGING_SIGN":         792,
		"END_STONE_BRICKS":                   793,
		"STRIPPED_MANGROVE_LOG":              794,
		"WARPED_HANGING_SIGN":                795,
		"CRIMSON_FENCE_GATE":                 796,
		"DARK_OAK_PLANKS":                    797,
		"ENDER_CHEST":                        798,
		"GRAVEL":                             799,
		"ORANGE_CONCRETE_POWDER":             800,
		"COBBLESTONE":                        801,
		"DARK_OAK_DOOR":                      802,
		"MOSS_CARPET":                        803,
		"QUARTZ_BLOCK":                       804,
		"WARPED_PRESSURE_PLATE":              805,
		"TORCHFLOWER":                        806,
		"TUBE_CORAL":                         807,
		"TUFF_STAIRS":                        808,
		"BUBBLE_COLUMN":                      809,
		"DRAGON_HEAD":                        810,
		"PURPUR_SLAB":                        811,
		"SCULK_SHRIEKER":                     812,
		"STRIPPED_CRIMSON_HYPHAE":            813,
		"WATER_CAULDRON":                     814,
		"BLUE_WOOL":                          815,
		"BUBBLE_CORAL_BLOCK":                 816,
		"FLOWER_POT":                         817,
		"CAVE_VINES_PLANT":                   818,
		"CHISELED_TUFF_BRICKS":               819,
		"POTTED_RED_MUSHROOM":                820,
		"VOID_AIR":                           821,
		"WHITE_CARPET":                       822,
		"LIGHT_BLUE_CANDLE":                  823,
		"OXIDIZED_COPPER_GRATE":              824,
		"SCAFFOLDING":                        825,
		"BLACKSTONE_STAIRS":                  826,
		"CHISELED_NETHER_BRICKS":             827,
		"COPPER_GRATE":                       828,
		"CYAN_WALL_BANNER":                   829,
		"DEEPSLATE_GOLD_ORE":                 830,
		"SOUL_WALL_TORCH":                    831,
		"BLACK_STAINED_GLASS":                832,
		"NETHER_QUARTZ_ORE":                  833,
		"RED_BED":                            834,
		"ZOMBIE_WALL_HEAD":                   835,
		"CAVE_AIR":                           836,
		"CHERRY_DOOR":                        837,
		"SKELETON_SKULL":                     838,
		"ZOMBIE_HEAD":                        839,
		"COBBLESTONE_SLAB":                   840,
		"EXPOSED_CUT_COPPER":                 841,
		"OCHRE_FROGLIGHT":                    842,
		"ORANGE_BED":                         843,
		"SMOOTH_QUARTZ_SLAB":                 844,
		"CRIMSON_PLANKS":                     845,
		"WAXED_COPPER_BULB":                  846,
		"CRAFTER":                            847,
		"POLISHED_DEEPSLATE_STAIRS":          848,
		"CUT_RED_SANDSTONE":                  849,
		"EXPOSED_COPPER_GRATE":               850,
		"EXPOSED_CUT_COPPER_SLAB":            851,
		"SOUL_CAMPFIRE":                      852,
		"BROWN_MUSHROOM":                     853,
		"CRACKED_NETHER_BRICKS":              854,
		"CYAN_GLAZED_TERRACOTTA":             855,
		"NETHER_BRICK_FENCE":                 856,
		"POTTED_OXEYE_DAISY":                 857,
		"STRIPPED_WARPED_HYPHAE":             858,
		"DRAGON_WALL_HEAD":                   859,
		"JUNGLE_HANGING_SIGN":                860,
		"MOSSY_STONE_BRICK_SLAB":             861,
		"SCULK_VEIN":                         862,
		"STONE_BRICK_STAIRS":                 863,
		"DEAD_TUBE_CORAL":                    864,
		"OXIDIZED_CUT_COPPER_STAIRS":         865,
		"POTTED_SPRUCE_SAPLING":              866,
		"PUMPKIN_STEM":                       867,
		"POWDER_SNOW_CAULDRON":               868,
		"RED_BANNER":                         869,
		"WAXED_COPPER_DOOR":                  870,
		"LIGHT_GRAY_CARPET":                  871,
		"MELON":                              872,
		"PACKED_MUD":                         873,
		"PETRIFIED_OAK_SLAB":                 874,
		"POTTED_RED_TULIP":                   875,
		"DEEPSLATE_DIAMOND_ORE":              876,
		"POLISHED_BLACKSTONE_STAIRS":         877,
		"POTATOES":                           878,
		"SMOOTH_RED_SANDSTONE_STAIRS":        879,
		"SPRUCE_STAIRS":                      880,
		"MAGENTA_GLAZED_TERRACOTTA":          881,
		"WARPED_PLANKS":                      882,
		"WAXED_WEATHERED_COPPER_TRAPDOOR":    883,
		"MAGMA_BLOCK":                        884,
		"MANGROVE_STAIRS":                    885,
		"WAXED_EXPOSED_CHISELED_COPPER":      886,
		"WAXED_EXPOSED_COPPER_TRAPDOOR":      887,
		"OAK_WOOD":                           888,
		"POLISHED_DIORITE":                   889,
		"POTTED_ORANGE_TULIP":                890,
		"RED_SAND":                           891,
		"SMOKER":                             892,
		"JUNGLE_SAPLING":                     893,
		"LIGHT_BLUE_CONCRETE_POWDER":         894,
		"LIGHT_GRAY_STAINED_GLASS":           895,
		"WAXED_EXPOSED_COPPER":               896,
		"CUT_COPPER_STAIRS":                  897,
		"FLOWERING_AZALEA":                   898,
		"OXIDIZED_CUT_COPPER_SLAB":           899,
		"POTTED_CRIMSON_ROOTS":               900,
		"RED_STAINED_GLASS_PANE":             901,
		"DEAD_HORN_CORAL_WALL_FAN":           902,
		"GRANITE":                            903,
		"NETHER_BRICK_SLAB":                  904,
		"WAXED_EXPOSED_COPPER_DOOR":          905,
		"ACACIA_SAPLING":                     906,
		"CHERRY_HANGING_SIGN":                907,
		"JUNGLE_DOOR":                        908,
		"POTTED_JUNGLE_SAPLING":              909,
		"SLIME_BLOCK":                        910,
		"VERDANT_FROGLIGHT":                  911,
		"WHITE_WALL_BANNER":                  912,
		"AMETHYST_BLOCK":                     913,
		"COAL_BLOCK":                         914,
		"DANDELION":                          915,
		"MANGROVE_PRESSURE_PLATE":            916,
		"SMALL_AMETHYST_BUD":                 917,
		"EXPOSED_COPPER_BULB":                918,
		"INFESTED_CHISELED_STONE_BRICKS":     919,
		"WARPED_STEM":                        920,
		"BLACK_TERRACOTTA":                   921,
		"CHERRY_WALL_HANGING_SIGN":           922,
		"PURPLE_STAINED_GLASS_PANE":          923,
		"LIME_TERRACOTTA":                    924,
		"PURPLE_TERRACOTTA":                  925,
		"STONE_BRICK_SLAB":                   926,
		"STRIPPED_OAK_LOG":                   927,
		"BLACK_GLAZED_TERRACOTTA":            928,
		"TERRACOTTA":                         929,
		"RAW_IRON_BLOCK":                     930,
		"STRIPPED_ACACIA_LOG":                931,
		"BLACK_STAINED_GLASS_PANE":           932,
		"DECORATED_POT":                      933,
		"DEEPSLATE_COPPER_ORE":               934,
		"STRIPPED_SPRUCE_LOG":                935,
		"DARK_OAK_SLAB":                      936,
		"DEAD_FIRE_CORAL_WALL_FAN":           937,
		"SPRUCE_FENCE_GATE":                  938,
		"DARK_PRISMARINE_STAIRS":             939,
		"LEVER":                              940,
		"POLISHED_DEEPSLATE_SLAB":            941,
		"BAMBOO_BLOCK":                       942,
		"BAMBOO_FENCE":                       943,
		"DIAMOND_BLOCK":                      944,
		"ORANGE_CONCRETE":                    945,
		"WAXED_OXIDIZED_CUT_COPPER":          946,
		"PINK_GLAZED_TERRACOTTA":             947,
		"WAXED_CUT_COPPER":                   948,
		"BROWN_BANNER":                       949,
		"CHISELED_POLISHED_BLACKSTONE":       950,
		"GREEN_GLAZED_TERRACOTTA":            951,
		"MAGENTA_BANNER":                     952,
		"MANGROVE_ROOTS":                     953,
		"OAK_SAPLING":                        954,
		"STRIPPED_MANGROVE_WOOD":             955,
		"SUSPICIOUS_GRAVEL":                  956,
		"BAMBOO_BUTTON":                      957,
		"GRAY_STAINED_GLASS_PANE":            958,
		"HEAVY_WEIGHTED_PRESSURE_PLATE":      959,
		"HORN_CORAL":                         960,
		"JUNGLE_FENCE_GATE":                  961,
		"BIRCH_WOOD":                         962,
		"CHERRY_SLAB":                        963,
		"END_ROD":                            964,
		"PRISMARINE_WALL":                    965,
		"DRIPSTONE_BLOCK":                    966,
		"LIGHT":                              967,
		"POTTED_BAMBOO":                      968,
		"ANDESITE":                           969,
		"NETHERITE_BLOCK":                    970,
		"POTTED_FERN":                        971,
		"STRIPPED_JUNGLE_LOG":                972,
		"STRIPPED_ACACIA_WOOD":               973,
		"WARPED_FENCE":                       974,
		"MUSHROOM_STEM":                      975,
		"STONE":                              976,
		"CHERRY_TRAPDOOR":                    977,
		"CYAN_BED":                           978,
		"DEEPSLATE_BRICKS":                   979,
		"JUNGLE_FENCE":                       980,
		"LIGHT_BLUE_BANNER":                  981,
		"MUDDY_MANGROVE_ROOTS":               982,
		"WAXED_EXPOSED_CUT_COPPER_STAIRS":    983,
		"WEATHERED_COPPER_TRAPDOOR":          984,
		"YELLOW_CANDLE_CAKE":                 985,
		"GLASS":                              986,
		"GRASS_BLOCK":                        987,
		"JUNGLE_PLANKS":                      988,
		"BLACK_CANDLE":                       989,
		"CYAN_STAINED_GLASS_PANE":            990,
		"CYAN_WOOL":                          991,
		"FROGSPAWN":                          992,
		"FROSTED_ICE":                        993,
		"MAGENTA_TERRACOTTA":                 994,
		"TNT":                                995,
		"BLACK_CONCRETE":                     996,
		"STONE_PRESSURE_PLATE":               997,
		"CRIMSON_FUNGUS":                     998,
		"DEAD_BRAIN_CORAL_FAN":               999,
		"GRAY_CANDLE_CAKE":                   1000,
		"JUNGLE_LEAVES":                      1001,
		"COARSE_DIRT":                        1002,
		"CRIMSON_FENCE":                      1003,
		"LAPIS_ORE":                          1004,
		"SANDSTONE":                          1005,
		"POLISHED_BLACKSTONE":                1006,
		"POTTED_POPPY":                       1007,
		"PURPLE_CANDLE_CAKE":                 1008,
		"WARPED_FUNGUS":                      1009,
		"CRIMSON_TRAPDOOR":                   1010,
		"LIGHT_BLUE_CARPET":                  1011,
		"LIGHT_GRAY_BANNER":                  1012,
		"TRAPPED_CHEST":                      1013,
		"TRIPWIRE_HOOK":                      1014,
		"PURPLE_STAINED_GLASS":               1015,
		"ACACIA_SIGN":                        1016,
		"EXPOSED_CUT_COPPER_STAIRS":          1017,
		"POLISHED_BLACKSTONE_SLAB":           1018,
		"POLISHED_TUFF_SLAB":                 1019,
		"POTTED_CHERRY_SAPLING":              1020,
		"SNIFFER_EGG":                        1021,
		"BASALT":                             1022,
		"BROWN_CANDLE_CAKE":                  1023,
		"JUNGLE_WALL_SIGN":                   1024,
		"POLISHED_DIORITE_SLAB":              1025,
		"PRISMARINE_BRICK_STAIRS":            1026,
		"ACACIA_WALL_HANGING_SIGN":           1027,
		"DARK_OAK_LOG":                       1028,
		"POLISHED_TUFF_WALL":                 1029,
		"NOTE_BLOCK":                         1030,
		"SPRUCE_PLANKS":                      1031,
		"BROWN_GLAZED_TERRACOTTA":            1032,
		"MOSSY_COBBLESTONE":                  1033,
		"WAXED_WEATHERED_CUT_COPPER_STAIRS":  1034,
		"BAMBOO_STAIRS":                      1035,
		"CRIMSON_HANGING_SIGN":               1036,
		"GRAY_SHULKER_BOX":                   1037,
		"OXIDIZED_COPPER":                    1038,
		"POLISHED_BASALT":                    1039,
		"SCULK":                              1040,
		"YELLOW_STAINED_GLASS_PANE":          1041,
		"ANVIL":                              1042,
		"EMERALD_BLOCK":                      1043,
		"PINK_STAINED_GLASS":                 1044,
		"PURPLE_BANNER":                      1045,
		"REPEATER":                           1046,
		"ORANGE_CANDLE":                      1047,
		"PINK_CONCRETE_POWDER":               1048,
		"PURPLE_CARPET":                      1049,
		"POTTED_CRIMSON_FUNGUS":              1050,
		"POTTED_WARPED_ROOTS":                1051,
		"ROOTED_DIRT":                        1052,
		"BEE_NEST":                           1053,
		"BROWN_TERRACOTTA":                   1054,
		"DISPENSER":                          1055,
		"MAGENTA_CARPET":                     1056,
		"POTTED_BROWN_MUSHROOM":              1057,
	}
)

func (x Material) Enum() *Material {
	p := new(Material)
	*p = x
	return p
}

func (x Material) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Material) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[22].Descriptor()
}

func (Material) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[22]
}

func (x Material) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Material.Descriptor instead.
func (Material) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{22}
}

type BlockPalette struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*BlockPaletteEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *BlockPalette) Reset() {
	*x = BlockPalette{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPalette) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPalette) ProtoMessage() {}

func (x *BlockPalette) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPalette.ProtoReflect.Descriptor instead.
func (*BlockPalette) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{0}
}

func (x *BlockPalette) GetEntries() []*BlockPaletteEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type BlockPaletteEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material Material          `protobuf:"varint,1,opt,name=material,proto3,enum=Material" json:"material,omitempty"`
	Data     *BlockPaletteData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BlockPaletteEntry) Reset() {
	*x = BlockPaletteEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPaletteEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPaletteEntry) ProtoMessage() {}

func (x *BlockPaletteEntry) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPaletteEntry.ProtoReflect.Descriptor instead.
func (*BlockPaletteEntry) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{1}
}

func (x *BlockPaletteEntry) GetMaterial() Material {
	if x != nil {
		return x.Material
	}
	return Material_CUT_COPPER_SLAB
}

func (x *BlockPaletteEntry) GetData() *BlockPaletteData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BlockPaletteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties *BlockProperties     `protobuf:"bytes,1,opt,name=properties,proto3,oneof" json:"properties,omitempty"`
	States     []*BlockPaletteState `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *BlockPaletteData) Reset() {
	*x = BlockPaletteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPaletteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPaletteData) ProtoMessage() {}

func (x *BlockPaletteData) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPaletteData.ProtoReflect.Descriptor instead.
func (*BlockPaletteData) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{2}
}

func (x *BlockPaletteData) GetProperties() *BlockProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *BlockPaletteData) GetStates() []*BlockPaletteState {
	if x != nil {
		return x.States
	}
	return nil
}

type BlockPaletteState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default    *bool                 `protobuf:"varint,1,opt,name=default,proto3,oneof" json:"default,omitempty"`
	Id         uint32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Properties *BlockStateProperties `protobuf:"bytes,3,opt,name=properties,proto3,oneof" json:"properties,omitempty"`
}

func (x *BlockPaletteState) Reset() {
	*x = BlockPaletteState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPaletteState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPaletteState) ProtoMessage() {}

func (x *BlockPaletteState) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPaletteState.ProtoReflect.Descriptor instead.
func (*BlockPaletteState) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{3}
}

func (x *BlockPaletteState) GetDefault() bool {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return false
}

func (x *BlockPaletteState) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlockPaletteState) GetProperties() *BlockStateProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type BlockProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age               []uint32            `protobuf:"varint,1,rep,packed,name=age,proto3" json:"age,omitempty"`
	Attached          []bool              `protobuf:"varint,2,rep,packed,name=attached,proto3" json:"attached,omitempty"`
	Attachment        []Attachment        `protobuf:"varint,3,rep,packed,name=attachment,proto3,enum=Attachment" json:"attachment,omitempty"`
	Axis              []Axis              `protobuf:"varint,4,rep,packed,name=axis,proto3,enum=Axis" json:"axis,omitempty"`
	Berries           []bool              `protobuf:"varint,5,rep,packed,name=berries,proto3" json:"berries,omitempty"`
	Bites             []uint32            `protobuf:"varint,6,rep,packed,name=bites,proto3" json:"bites,omitempty"`
	Bottom            []bool              `protobuf:"varint,7,rep,packed,name=bottom,proto3" json:"bottom,omitempty"`
	CanSummon         []bool              `protobuf:"varint,8,rep,packed,name=can_summon,json=canSummon,proto3" json:"can_summon,omitempty"`
	Candles           []uint32            `protobuf:"varint,9,rep,packed,name=candles,proto3" json:"candles,omitempty"`
	Conditional       []bool              `protobuf:"varint,10,rep,packed,name=conditional,proto3" json:"conditional,omitempty"`
	Cracked           []bool              `protobuf:"varint,11,rep,packed,name=cracked,proto3" json:"cracked,omitempty"`
	Crafting          []bool              `protobuf:"varint,12,rep,packed,name=crafting,proto3" json:"crafting,omitempty"`
	Delay             []uint32            `protobuf:"varint,13,rep,packed,name=delay,proto3" json:"delay,omitempty"`
	Disarmed          []bool              `protobuf:"varint,14,rep,packed,name=disarmed,proto3" json:"disarmed,omitempty"`
	Distance          []uint32            `protobuf:"varint,15,rep,packed,name=distance,proto3" json:"distance,omitempty"`
	Down              []bool              `protobuf:"varint,16,rep,packed,name=down,proto3" json:"down,omitempty"`
	Drag              []bool              `protobuf:"varint,17,rep,packed,name=drag,proto3" json:"drag,omitempty"`
	Dusted            []uint32            `protobuf:"varint,18,rep,packed,name=dusted,proto3" json:"dusted,omitempty"`
	East              []East              `protobuf:"varint,19,rep,packed,name=east,proto3,enum=East" json:"east,omitempty"`
	Eggs              []uint32            `protobuf:"varint,20,rep,packed,name=eggs,proto3" json:"eggs,omitempty"`
	Enabled           []bool              `protobuf:"varint,21,rep,packed,name=enabled,proto3" json:"enabled,omitempty"`
	Extended          []bool              `protobuf:"varint,22,rep,packed,name=extended,proto3" json:"extended,omitempty"`
	Type              []Type              `protobuf:"varint,23,rep,packed,name=type,proto3,enum=Type" json:"type,omitempty"`
	Face              []Face              `protobuf:"varint,24,rep,packed,name=face,proto3,enum=Face" json:"face,omitempty"`
	Facing            []Facing            `protobuf:"varint,25,rep,packed,name=facing,proto3,enum=Facing" json:"facing,omitempty"`
	FlowerAmount      []uint32            `protobuf:"varint,26,rep,packed,name=flower_amount,json=flowerAmount,proto3" json:"flower_amount,omitempty"`
	Half              []Half              `protobuf:"varint,27,rep,packed,name=half,proto3,enum=Half" json:"half,omitempty"`
	Hanging           []bool              `protobuf:"varint,28,rep,packed,name=hanging,proto3" json:"hanging,omitempty"`
	HasBook           []bool              `protobuf:"varint,29,rep,packed,name=has_book,json=hasBook,proto3" json:"has_book,omitempty"`
	HasBottle_0       []bool              `protobuf:"varint,30,rep,packed,name=has_bottle_0,json=hasBottle0,proto3" json:"has_bottle_0,omitempty"`
	HasBottle_1       []bool              `protobuf:"varint,31,rep,packed,name=has_bottle_1,json=hasBottle1,proto3" json:"has_bottle_1,omitempty"`
	HasBottle_2       []bool              `protobuf:"varint,32,rep,packed,name=has_bottle_2,json=hasBottle2,proto3" json:"has_bottle_2,omitempty"`
	HasRecord         []bool              `protobuf:"varint,33,rep,packed,name=has_record,json=hasRecord,proto3" json:"has_record,omitempty"`
	Hinge             []Hinge             `protobuf:"varint,34,rep,packed,name=hinge,proto3,enum=Hinge" json:"hinge,omitempty"`
	HoneyLevel        []uint32            `protobuf:"varint,35,rep,packed,name=honey_level,json=honeyLevel,proto3" json:"honey_level,omitempty"`
	Instrument        []Instrument        `protobuf:"varint,36,rep,packed,name=instrument,proto3,enum=Instrument" json:"instrument,omitempty"`
	Inverted          []bool              `protobuf:"varint,37,rep,packed,name=inverted,proto3" json:"inverted,omitempty"`
	Layers            []uint32            `protobuf:"varint,38,rep,packed,name=layers,proto3" json:"layers,omitempty"`
	Leaves            []Leaves            `protobuf:"varint,39,rep,packed,name=leaves,proto3,enum=Leaves" json:"leaves,omitempty"`
	Lit               []bool              `protobuf:"varint,40,rep,packed,name=lit,proto3" json:"lit,omitempty"`
	Locked            []bool              `protobuf:"varint,41,rep,packed,name=locked,proto3" json:"locked,omitempty"`
	Mode              []Mode              `protobuf:"varint,42,rep,packed,name=mode,proto3,enum=Mode" json:"mode,omitempty"`
	Moisture          []uint32            `protobuf:"varint,43,rep,packed,name=moisture,proto3" json:"moisture,omitempty"`
	North             []North             `protobuf:"varint,44,rep,packed,name=north,proto3,enum=North" json:"north,omitempty"`
	Orientation       []Orientation       `protobuf:"varint,45,rep,packed,name=orientation,proto3,enum=Orientation" json:"orientation,omitempty"`
	Note              []uint32            `protobuf:"varint,46,rep,packed,name=note,proto3" json:"note,omitempty"`
	Occupied          []bool              `protobuf:"varint,47,rep,packed,name=occupied,proto3" json:"occupied,omitempty"`
	InWall            []bool              `protobuf:"varint,48,rep,packed,name=in_wall,json=inWall,proto3" json:"in_wall,omitempty"`
	Open              []bool              `protobuf:"varint,49,rep,packed,name=open,proto3" json:"open,omitempty"`
	Persistent        []bool              `protobuf:"varint,50,rep,packed,name=persistent,proto3" json:"persistent,omitempty"`
	Pickles           []uint32            `protobuf:"varint,51,rep,packed,name=pickles,proto3" json:"pickles,omitempty"`
	Power             []uint32            `protobuf:"varint,52,rep,packed,name=power,proto3" json:"power,omitempty"`
	Powered           []bool              `protobuf:"varint,53,rep,packed,name=powered,proto3" json:"powered,omitempty"`
	Rotation          []uint32            `protobuf:"varint,54,rep,packed,name=rotation,proto3" json:"rotation,omitempty"`
	Part              []Part              `protobuf:"varint,55,rep,packed,name=part,proto3,enum=Part" json:"part,omitempty"`
	SculkSensorPhase  []SculkSensorPhase  `protobuf:"varint,56,rep,packed,name=sculk_sensor_phase,json=sculkSensorPhase,proto3,enum=SculkSensorPhase" json:"sculk_sensor_phase,omitempty"`
	Shape             []Shape             `protobuf:"varint,57,rep,packed,name=shape,proto3,enum=Shape" json:"shape,omitempty"`
	Short             []bool              `protobuf:"varint,58,rep,packed,name=short,proto3" json:"short,omitempty"`
	Shrieking         []bool              `protobuf:"varint,59,rep,packed,name=shrieking,proto3" json:"shrieking,omitempty"`
	SignalFire        []bool              `protobuf:"varint,60,rep,packed,name=signal_fire,json=signalFire,proto3" json:"signal_fire,omitempty"`
	Slot_0Occupied    []bool              `protobuf:"varint,61,rep,packed,name=slot_0_occupied,json=slot0Occupied,proto3" json:"slot_0_occupied,omitempty"`
	Slot_1Occupied    []bool              `protobuf:"varint,62,rep,packed,name=slot_1_occupied,json=slot1Occupied,proto3" json:"slot_1_occupied,omitempty"`
	Slot_2Occupied    []bool              `protobuf:"varint,63,rep,packed,name=slot_2_occupied,json=slot2Occupied,proto3" json:"slot_2_occupied,omitempty"`
	Slot_3Occupied    []bool              `protobuf:"varint,64,rep,packed,name=slot_3_occupied,json=slot3Occupied,proto3" json:"slot_3_occupied,omitempty"`
	Slot_4Occupied    []bool              `protobuf:"varint,65,rep,packed,name=slot_4_occupied,json=slot4Occupied,proto3" json:"slot_4_occupied,omitempty"`
	Slot_5Occupied    []bool              `protobuf:"varint,66,rep,packed,name=slot_5_occupied,json=slot5Occupied,proto3" json:"slot_5_occupied,omitempty"`
	Snowy             []bool              `protobuf:"varint,67,rep,packed,name=snowy,proto3" json:"snowy,omitempty"`
	South             []South             `protobuf:"varint,68,rep,packed,name=south,proto3,enum=South" json:"south,omitempty"`
	Stage             []uint32            `protobuf:"varint,69,rep,packed,name=stage,proto3" json:"stage,omitempty"`
	Thickness         []Thickness         `protobuf:"varint,70,rep,packed,name=thickness,proto3,enum=Thickness" json:"thickness,omitempty"`
	Tilt              []Tilt              `protobuf:"varint,71,rep,packed,name=tilt,proto3,enum=Tilt" json:"tilt,omitempty"`
	Triggered         []bool              `protobuf:"varint,72,rep,packed,name=triggered,proto3" json:"triggered,omitempty"`
	TrialSpawnerState []TrialSpawnerState `protobuf:"varint,73,rep,packed,name=trial_spawner_state,json=trialSpawnerState,proto3,enum=TrialSpawnerState" json:"trial_spawner_state,omitempty"`
	Unstable          []bool              `protobuf:"varint,74,rep,packed,name=unstable,proto3" json:"unstable,omitempty"`
	Up                []bool              `protobuf:"varint,75,rep,packed,name=up,proto3" json:"up,omitempty"`
	VerticalDirection []VerticalDirection `protobuf:"varint,76,rep,packed,name=vertical_direction,json=verticalDirection,proto3,enum=VerticalDirection" json:"vertical_direction,omitempty"`
	Waterlogged       []bool              `protobuf:"varint,77,rep,packed,name=waterlogged,proto3" json:"waterlogged,omitempty"`
	West              []West              `protobuf:"varint,78,rep,packed,name=west,proto3,enum=West" json:"west,omitempty"`
	Level             []uint32            `protobuf:"varint,79,rep,packed,name=level,proto3" json:"level,omitempty"`
	Eye               []bool              `protobuf:"varint,80,rep,packed,name=eye,proto3" json:"eye,omitempty"`
	Charges           []uint32            `protobuf:"varint,81,rep,packed,name=charges,proto3" json:"charges,omitempty"`
	Bloom             []bool              `protobuf:"varint,82,rep,packed,name=bloom,proto3" json:"bloom,omitempty"`
	Hatch             []uint32            `protobuf:"varint,83,rep,packed,name=hatch,proto3" json:"hatch,omitempty"`
}

func (x *BlockProperties) Reset() {
	*x = BlockProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockProperties) ProtoMessage() {}

func (x *BlockProperties) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockProperties.ProtoReflect.Descriptor instead.
func (*BlockProperties) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{4}
}

func (x *BlockProperties) GetAge() []uint32 {
	if x != nil {
		return x.Age
	}
	return nil
}

func (x *BlockProperties) GetAttached() []bool {
	if x != nil {
		return x.Attached
	}
	return nil
}

func (x *BlockProperties) GetAttachment() []Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *BlockProperties) GetAxis() []Axis {
	if x != nil {
		return x.Axis
	}
	return nil
}

func (x *BlockProperties) GetBerries() []bool {
	if x != nil {
		return x.Berries
	}
	return nil
}

func (x *BlockProperties) GetBites() []uint32 {
	if x != nil {
		return x.Bites
	}
	return nil
}

func (x *BlockProperties) GetBottom() []bool {
	if x != nil {
		return x.Bottom
	}
	return nil
}

func (x *BlockProperties) GetCanSummon() []bool {
	if x != nil {
		return x.CanSummon
	}
	return nil
}

func (x *BlockProperties) GetCandles() []uint32 {
	if x != nil {
		return x.Candles
	}
	return nil
}

func (x *BlockProperties) GetConditional() []bool {
	if x != nil {
		return x.Conditional
	}
	return nil
}

func (x *BlockProperties) GetCracked() []bool {
	if x != nil {
		return x.Cracked
	}
	return nil
}

func (x *BlockProperties) GetCrafting() []bool {
	if x != nil {
		return x.Crafting
	}
	return nil
}

func (x *BlockProperties) GetDelay() []uint32 {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *BlockProperties) GetDisarmed() []bool {
	if x != nil {
		return x.Disarmed
	}
	return nil
}

func (x *BlockProperties) GetDistance() []uint32 {
	if x != nil {
		return x.Distance
	}
	return nil
}

func (x *BlockProperties) GetDown() []bool {
	if x != nil {
		return x.Down
	}
	return nil
}

func (x *BlockProperties) GetDrag() []bool {
	if x != nil {
		return x.Drag
	}
	return nil
}

func (x *BlockProperties) GetDusted() []uint32 {
	if x != nil {
		return x.Dusted
	}
	return nil
}

func (x *BlockProperties) GetEast() []East {
	if x != nil {
		return x.East
	}
	return nil
}

func (x *BlockProperties) GetEggs() []uint32 {
	if x != nil {
		return x.Eggs
	}
	return nil
}

func (x *BlockProperties) GetEnabled() []bool {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *BlockProperties) GetExtended() []bool {
	if x != nil {
		return x.Extended
	}
	return nil
}

func (x *BlockProperties) GetType() []Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BlockProperties) GetFace() []Face {
	if x != nil {
		return x.Face
	}
	return nil
}

func (x *BlockProperties) GetFacing() []Facing {
	if x != nil {
		return x.Facing
	}
	return nil
}

func (x *BlockProperties) GetFlowerAmount() []uint32 {
	if x != nil {
		return x.FlowerAmount
	}
	return nil
}

func (x *BlockProperties) GetHalf() []Half {
	if x != nil {
		return x.Half
	}
	return nil
}

func (x *BlockProperties) GetHanging() []bool {
	if x != nil {
		return x.Hanging
	}
	return nil
}

func (x *BlockProperties) GetHasBook() []bool {
	if x != nil {
		return x.HasBook
	}
	return nil
}

func (x *BlockProperties) GetHasBottle_0() []bool {
	if x != nil {
		return x.HasBottle_0
	}
	return nil
}

func (x *BlockProperties) GetHasBottle_1() []bool {
	if x != nil {
		return x.HasBottle_1
	}
	return nil
}

func (x *BlockProperties) GetHasBottle_2() []bool {
	if x != nil {
		return x.HasBottle_2
	}
	return nil
}

func (x *BlockProperties) GetHasRecord() []bool {
	if x != nil {
		return x.HasRecord
	}
	return nil
}

func (x *BlockProperties) GetHinge() []Hinge {
	if x != nil {
		return x.Hinge
	}
	return nil
}

func (x *BlockProperties) GetHoneyLevel() []uint32 {
	if x != nil {
		return x.HoneyLevel
	}
	return nil
}

func (x *BlockProperties) GetInstrument() []Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

func (x *BlockProperties) GetInverted() []bool {
	if x != nil {
		return x.Inverted
	}
	return nil
}

func (x *BlockProperties) GetLayers() []uint32 {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *BlockProperties) GetLeaves() []Leaves {
	if x != nil {
		return x.Leaves
	}
	return nil
}

func (x *BlockProperties) GetLit() []bool {
	if x != nil {
		return x.Lit
	}
	return nil
}

func (x *BlockProperties) GetLocked() []bool {
	if x != nil {
		return x.Locked
	}
	return nil
}

func (x *BlockProperties) GetMode() []Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *BlockProperties) GetMoisture() []uint32 {
	if x != nil {
		return x.Moisture
	}
	return nil
}

func (x *BlockProperties) GetNorth() []North {
	if x != nil {
		return x.North
	}
	return nil
}

func (x *BlockProperties) GetOrientation() []Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *BlockProperties) GetNote() []uint32 {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *BlockProperties) GetOccupied() []bool {
	if x != nil {
		return x.Occupied
	}
	return nil
}

func (x *BlockProperties) GetInWall() []bool {
	if x != nil {
		return x.InWall
	}
	return nil
}

func (x *BlockProperties) GetOpen() []bool {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *BlockProperties) GetPersistent() []bool {
	if x != nil {
		return x.Persistent
	}
	return nil
}

func (x *BlockProperties) GetPickles() []uint32 {
	if x != nil {
		return x.Pickles
	}
	return nil
}

func (x *BlockProperties) GetPower() []uint32 {
	if x != nil {
		return x.Power
	}
	return nil
}

func (x *BlockProperties) GetPowered() []bool {
	if x != nil {
		return x.Powered
	}
	return nil
}

func (x *BlockProperties) GetRotation() []uint32 {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *BlockProperties) GetPart() []Part {
	if x != nil {
		return x.Part
	}
	return nil
}

func (x *BlockProperties) GetSculkSensorPhase() []SculkSensorPhase {
	if x != nil {
		return x.SculkSensorPhase
	}
	return nil
}

func (x *BlockProperties) GetShape() []Shape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *BlockProperties) GetShort() []bool {
	if x != nil {
		return x.Short
	}
	return nil
}

func (x *BlockProperties) GetShrieking() []bool {
	if x != nil {
		return x.Shrieking
	}
	return nil
}

func (x *BlockProperties) GetSignalFire() []bool {
	if x != nil {
		return x.SignalFire
	}
	return nil
}

func (x *BlockProperties) GetSlot_0Occupied() []bool {
	if x != nil {
		return x.Slot_0Occupied
	}
	return nil
}

func (x *BlockProperties) GetSlot_1Occupied() []bool {
	if x != nil {
		return x.Slot_1Occupied
	}
	return nil
}

func (x *BlockProperties) GetSlot_2Occupied() []bool {
	if x != nil {
		return x.Slot_2Occupied
	}
	return nil
}

func (x *BlockProperties) GetSlot_3Occupied() []bool {
	if x != nil {
		return x.Slot_3Occupied
	}
	return nil
}

func (x *BlockProperties) GetSlot_4Occupied() []bool {
	if x != nil {
		return x.Slot_4Occupied
	}
	return nil
}

func (x *BlockProperties) GetSlot_5Occupied() []bool {
	if x != nil {
		return x.Slot_5Occupied
	}
	return nil
}

func (x *BlockProperties) GetSnowy() []bool {
	if x != nil {
		return x.Snowy
	}
	return nil
}

func (x *BlockProperties) GetSouth() []South {
	if x != nil {
		return x.South
	}
	return nil
}

func (x *BlockProperties) GetStage() []uint32 {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *BlockProperties) GetThickness() []Thickness {
	if x != nil {
		return x.Thickness
	}
	return nil
}

func (x *BlockProperties) GetTilt() []Tilt {
	if x != nil {
		return x.Tilt
	}
	return nil
}

func (x *BlockProperties) GetTriggered() []bool {
	if x != nil {
		return x.Triggered
	}
	return nil
}

func (x *BlockProperties) GetTrialSpawnerState() []TrialSpawnerState {
	if x != nil {
		return x.TrialSpawnerState
	}
	return nil
}

func (x *BlockProperties) GetUnstable() []bool {
	if x != nil {
		return x.Unstable
	}
	return nil
}

func (x *BlockProperties) GetUp() []bool {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *BlockProperties) GetVerticalDirection() []VerticalDirection {
	if x != nil {
		return x.VerticalDirection
	}
	return nil
}

func (x *BlockProperties) GetWaterlogged() []bool {
	if x != nil {
		return x.Waterlogged
	}
	return nil
}

func (x *BlockProperties) GetWest() []West {
	if x != nil {
		return x.West
	}
	return nil
}

func (x *BlockProperties) GetLevel() []uint32 {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *BlockProperties) GetEye() []bool {
	if x != nil {
		return x.Eye
	}
	return nil
}

func (x *BlockProperties) GetCharges() []uint32 {
	if x != nil {
		return x.Charges
	}
	return nil
}

func (x *BlockProperties) GetBloom() []bool {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *BlockProperties) GetHatch() []uint32 {
	if x != nil {
		return x.Hatch
	}
	return nil
}

type BlockStateProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age               *uint32            `protobuf:"varint,1,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Attached          *bool              `protobuf:"varint,2,opt,name=attached,proto3,oneof" json:"attached,omitempty"`
	Attachment        *Attachment        `protobuf:"varint,3,opt,name=attachment,proto3,enum=Attachment,oneof" json:"attachment,omitempty"`
	Axis              *Axis              `protobuf:"varint,4,opt,name=axis,proto3,enum=Axis,oneof" json:"axis,omitempty"`
	Berries           *bool              `protobuf:"varint,5,opt,name=berries,proto3,oneof" json:"berries,omitempty"`
	Bites             *uint32            `protobuf:"varint,6,opt,name=bites,proto3,oneof" json:"bites,omitempty"`
	Bottom            *bool              `protobuf:"varint,7,opt,name=bottom,proto3,oneof" json:"bottom,omitempty"`
	CanSummon         *bool              `protobuf:"varint,8,opt,name=can_summon,json=canSummon,proto3,oneof" json:"can_summon,omitempty"`
	Candles           *uint32            `protobuf:"varint,9,opt,name=candles,proto3,oneof" json:"candles,omitempty"`
	Conditional       *bool              `protobuf:"varint,10,opt,name=conditional,proto3,oneof" json:"conditional,omitempty"`
	Cracked           *bool              `protobuf:"varint,11,opt,name=cracked,proto3,oneof" json:"cracked,omitempty"`
	Crafting          *bool              `protobuf:"varint,12,opt,name=crafting,proto3,oneof" json:"crafting,omitempty"`
	Delay             *uint32            `protobuf:"varint,13,opt,name=delay,proto3,oneof" json:"delay,omitempty"`
	Disarmed          *bool              `protobuf:"varint,14,opt,name=disarmed,proto3,oneof" json:"disarmed,omitempty"`
	Distance          *uint32            `protobuf:"varint,15,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	Down              *bool              `protobuf:"varint,16,opt,name=down,proto3,oneof" json:"down,omitempty"`
	Drag              *bool              `protobuf:"varint,17,opt,name=drag,proto3,oneof" json:"drag,omitempty"`
	Dusted            *uint32            `protobuf:"varint,18,opt,name=dusted,proto3,oneof" json:"dusted,omitempty"`
	East              *East              `protobuf:"varint,19,opt,name=east,proto3,enum=East,oneof" json:"east,omitempty"`
	Eggs              *uint32            `protobuf:"varint,20,opt,name=eggs,proto3,oneof" json:"eggs,omitempty"`
	Enabled           *bool              `protobuf:"varint,21,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Extended          *bool              `protobuf:"varint,22,opt,name=extended,proto3,oneof" json:"extended,omitempty"`
	Type              *Type              `protobuf:"varint,23,opt,name=type,proto3,enum=Type,oneof" json:"type,omitempty"`
	Face              *Face              `protobuf:"varint,24,opt,name=face,proto3,enum=Face,oneof" json:"face,omitempty"`
	Facing            *Facing            `protobuf:"varint,25,opt,name=facing,proto3,enum=Facing,oneof" json:"facing,omitempty"`
	FlowerAmount      *uint32            `protobuf:"varint,26,opt,name=flower_amount,json=flowerAmount,proto3,oneof" json:"flower_amount,omitempty"`
	Half              *Half              `protobuf:"varint,27,opt,name=half,proto3,enum=Half,oneof" json:"half,omitempty"`
	Hanging           *bool              `protobuf:"varint,28,opt,name=hanging,proto3,oneof" json:"hanging,omitempty"`
	HasBook           *bool              `protobuf:"varint,29,opt,name=has_book,json=hasBook,proto3,oneof" json:"has_book,omitempty"`
	HasBottle_0       *bool              `protobuf:"varint,30,opt,name=has_bottle_0,json=hasBottle0,proto3,oneof" json:"has_bottle_0,omitempty"`
	HasBottle_1       *bool              `protobuf:"varint,31,opt,name=has_bottle_1,json=hasBottle1,proto3,oneof" json:"has_bottle_1,omitempty"`
	HasBottle_2       *bool              `protobuf:"varint,32,opt,name=has_bottle_2,json=hasBottle2,proto3,oneof" json:"has_bottle_2,omitempty"`
	HasRecord         *bool              `protobuf:"varint,33,opt,name=has_record,json=hasRecord,proto3,oneof" json:"has_record,omitempty"`
	Hinge             *Hinge             `protobuf:"varint,34,opt,name=hinge,proto3,enum=Hinge,oneof" json:"hinge,omitempty"`
	HoneyLevel        *uint32            `protobuf:"varint,35,opt,name=honey_level,json=honeyLevel,proto3,oneof" json:"honey_level,omitempty"`
	Instrument        *Instrument        `protobuf:"varint,36,opt,name=instrument,proto3,enum=Instrument,oneof" json:"instrument,omitempty"`
	Inverted          *bool              `protobuf:"varint,37,opt,name=inverted,proto3,oneof" json:"inverted,omitempty"`
	Layers            *uint32            `protobuf:"varint,38,opt,name=layers,proto3,oneof" json:"layers,omitempty"`
	Leaves            *Leaves            `protobuf:"varint,39,opt,name=leaves,proto3,enum=Leaves,oneof" json:"leaves,omitempty"`
	Lit               *bool              `protobuf:"varint,40,opt,name=lit,proto3,oneof" json:"lit,omitempty"`
	Locked            *bool              `protobuf:"varint,41,opt,name=locked,proto3,oneof" json:"locked,omitempty"`
	Mode              *Mode              `protobuf:"varint,42,opt,name=mode,proto3,enum=Mode,oneof" json:"mode,omitempty"`
	Moisture          *uint32            `protobuf:"varint,43,opt,name=moisture,proto3,oneof" json:"moisture,omitempty"`
	North             *North             `protobuf:"varint,44,opt,name=north,proto3,enum=North,oneof" json:"north,omitempty"`
	Orientation       *Orientation       `protobuf:"varint,45,opt,name=orientation,proto3,enum=Orientation,oneof" json:"orientation,omitempty"`
	Note              *uint32            `protobuf:"varint,46,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Occupied          *bool              `protobuf:"varint,47,opt,name=occupied,proto3,oneof" json:"occupied,omitempty"`
	InWall            *bool              `protobuf:"varint,48,opt,name=in_wall,json=inWall,proto3,oneof" json:"in_wall,omitempty"`
	Open              *bool              `protobuf:"varint,49,opt,name=open,proto3,oneof" json:"open,omitempty"`
	Persistent        *bool              `protobuf:"varint,50,opt,name=persistent,proto3,oneof" json:"persistent,omitempty"`
	Pickles           *uint32            `protobuf:"varint,51,opt,name=pickles,proto3,oneof" json:"pickles,omitempty"`
	Power             *uint32            `protobuf:"varint,52,opt,name=power,proto3,oneof" json:"power,omitempty"`
	Powered           *bool              `protobuf:"varint,53,opt,name=powered,proto3,oneof" json:"powered,omitempty"`
	Rotation          *uint32            `protobuf:"varint,54,opt,name=rotation,proto3,oneof" json:"rotation,omitempty"`
	Part              *Part              `protobuf:"varint,55,opt,name=part,proto3,enum=Part,oneof" json:"part,omitempty"`
	SculkSensorPhase  *SculkSensorPhase  `protobuf:"varint,56,opt,name=sculk_sensor_phase,json=sculkSensorPhase,proto3,enum=SculkSensorPhase,oneof" json:"sculk_sensor_phase,omitempty"`
	Shape             *Shape             `protobuf:"varint,57,opt,name=shape,proto3,enum=Shape,oneof" json:"shape,omitempty"`
	Short             *bool              `protobuf:"varint,58,opt,name=short,proto3,oneof" json:"short,omitempty"`
	Shrieking         *bool              `protobuf:"varint,59,opt,name=shrieking,proto3,oneof" json:"shrieking,omitempty"`
	SignalFire        *bool              `protobuf:"varint,60,opt,name=signal_fire,json=signalFire,proto3,oneof" json:"signal_fire,omitempty"`
	Slot_0Occupied    *bool              `protobuf:"varint,61,opt,name=slot_0_occupied,json=slot0Occupied,proto3,oneof" json:"slot_0_occupied,omitempty"`
	Slot_1Occupied    *bool              `protobuf:"varint,62,opt,name=slot_1_occupied,json=slot1Occupied,proto3,oneof" json:"slot_1_occupied,omitempty"`
	Slot_2Occupied    *bool              `protobuf:"varint,63,opt,name=slot_2_occupied,json=slot2Occupied,proto3,oneof" json:"slot_2_occupied,omitempty"`
	Slot_3Occupied    *bool              `protobuf:"varint,64,opt,name=slot_3_occupied,json=slot3Occupied,proto3,oneof" json:"slot_3_occupied,omitempty"`
	Slot_4Occupied    *bool              `protobuf:"varint,65,opt,name=slot_4_occupied,json=slot4Occupied,proto3,oneof" json:"slot_4_occupied,omitempty"`
	Slot_5Occupied    *bool              `protobuf:"varint,66,opt,name=slot_5_occupied,json=slot5Occupied,proto3,oneof" json:"slot_5_occupied,omitempty"`
	Snowy             *bool              `protobuf:"varint,67,opt,name=snowy,proto3,oneof" json:"snowy,omitempty"`
	South             *South             `protobuf:"varint,68,opt,name=south,proto3,enum=South,oneof" json:"south,omitempty"`
	Stage             *uint32            `protobuf:"varint,69,opt,name=stage,proto3,oneof" json:"stage,omitempty"`
	Thickness         *Thickness         `protobuf:"varint,70,opt,name=thickness,proto3,enum=Thickness,oneof" json:"thickness,omitempty"`
	Tilt              *Tilt              `protobuf:"varint,71,opt,name=tilt,proto3,enum=Tilt,oneof" json:"tilt,omitempty"`
	Triggered         *bool              `protobuf:"varint,72,opt,name=triggered,proto3,oneof" json:"triggered,omitempty"`
	TrialSpawnerState *TrialSpawnerState `protobuf:"varint,73,opt,name=trial_spawner_state,json=trialSpawnerState,proto3,enum=TrialSpawnerState,oneof" json:"trial_spawner_state,omitempty"`
	Unstable          *bool              `protobuf:"varint,74,opt,name=unstable,proto3,oneof" json:"unstable,omitempty"`
	Up                *bool              `protobuf:"varint,75,opt,name=up,proto3,oneof" json:"up,omitempty"`
	VerticalDirection *VerticalDirection `protobuf:"varint,76,opt,name=vertical_direction,json=verticalDirection,proto3,enum=VerticalDirection,oneof" json:"vertical_direction,omitempty"`
	Waterlogged       *bool              `protobuf:"varint,77,opt,name=waterlogged,proto3,oneof" json:"waterlogged,omitempty"`
	West              *West              `protobuf:"varint,78,opt,name=west,proto3,enum=West,oneof" json:"west,omitempty"`
	Level             *uint32            `protobuf:"varint,79,opt,name=level,proto3,oneof" json:"level,omitempty"`
	Eye               *bool              `protobuf:"varint,80,opt,name=eye,proto3,oneof" json:"eye,omitempty"`
	Charges           *uint32            `protobuf:"varint,81,opt,name=charges,proto3,oneof" json:"charges,omitempty"`
	Bloom             *bool              `protobuf:"varint,82,opt,name=bloom,proto3,oneof" json:"bloom,omitempty"`
	Hatch             *uint32            `protobuf:"varint,83,opt,name=hatch,proto3,oneof" json:"hatch,omitempty"`
}

func (x *BlockStateProperties) Reset() {
	*x = BlockStateProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStateProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStateProperties) ProtoMessage() {}

func (x *BlockStateProperties) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStateProperties.ProtoReflect.Descriptor instead.
func (*BlockStateProperties) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{5}
}

func (x *BlockStateProperties) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *BlockStateProperties) GetAttached() bool {
	if x != nil && x.Attached != nil {
		return *x.Attached
	}
	return false
}

func (x *BlockStateProperties) GetAttachment() Attachment {
	if x != nil && x.Attachment != nil {
		return *x.Attachment
	}
	return Attachment_ATTACHMENT_FLOOR
}

func (x *BlockStateProperties) GetAxis() Axis {
	if x != nil && x.Axis != nil {
		return *x.Axis
	}
	return Axis_AXIS_X
}

func (x *BlockStateProperties) GetBerries() bool {
	if x != nil && x.Berries != nil {
		return *x.Berries
	}
	return false
}

func (x *BlockStateProperties) GetBites() uint32 {
	if x != nil && x.Bites != nil {
		return *x.Bites
	}
	return 0
}

func (x *BlockStateProperties) GetBottom() bool {
	if x != nil && x.Bottom != nil {
		return *x.Bottom
	}
	return false
}

func (x *BlockStateProperties) GetCanSummon() bool {
	if x != nil && x.CanSummon != nil {
		return *x.CanSummon
	}
	return false
}

func (x *BlockStateProperties) GetCandles() uint32 {
	if x != nil && x.Candles != nil {
		return *x.Candles
	}
	return 0
}

func (x *BlockStateProperties) GetConditional() bool {
	if x != nil && x.Conditional != nil {
		return *x.Conditional
	}
	return false
}

func (x *BlockStateProperties) GetCracked() bool {
	if x != nil && x.Cracked != nil {
		return *x.Cracked
	}
	return false
}

func (x *BlockStateProperties) GetCrafting() bool {
	if x != nil && x.Crafting != nil {
		return *x.Crafting
	}
	return false
}

func (x *BlockStateProperties) GetDelay() uint32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *BlockStateProperties) GetDisarmed() bool {
	if x != nil && x.Disarmed != nil {
		return *x.Disarmed
	}
	return false
}

func (x *BlockStateProperties) GetDistance() uint32 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

func (x *BlockStateProperties) GetDown() bool {
	if x != nil && x.Down != nil {
		return *x.Down
	}
	return false
}

func (x *BlockStateProperties) GetDrag() bool {
	if x != nil && x.Drag != nil {
		return *x.Drag
	}
	return false
}

func (x *BlockStateProperties) GetDusted() uint32 {
	if x != nil && x.Dusted != nil {
		return *x.Dusted
	}
	return 0
}

func (x *BlockStateProperties) GetEast() East {
	if x != nil && x.East != nil {
		return *x.East
	}
	return East_EAST_NONE
}

func (x *BlockStateProperties) GetEggs() uint32 {
	if x != nil && x.Eggs != nil {
		return *x.Eggs
	}
	return 0
}

func (x *BlockStateProperties) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *BlockStateProperties) GetExtended() bool {
	if x != nil && x.Extended != nil {
		return *x.Extended
	}
	return false
}

func (x *BlockStateProperties) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_TYPE_TOP
}

func (x *BlockStateProperties) GetFace() Face {
	if x != nil && x.Face != nil {
		return *x.Face
	}
	return Face_FACE_FLOOR
}

func (x *BlockStateProperties) GetFacing() Facing {
	if x != nil && x.Facing != nil {
		return *x.Facing
	}
	return Facing_FACING_NORTH
}

func (x *BlockStateProperties) GetFlowerAmount() uint32 {
	if x != nil && x.FlowerAmount != nil {
		return *x.FlowerAmount
	}
	return 0
}

func (x *BlockStateProperties) GetHalf() Half {
	if x != nil && x.Half != nil {
		return *x.Half
	}
	return Half_HALF_TOP
}

func (x *BlockStateProperties) GetHanging() bool {
	if x != nil && x.Hanging != nil {
		return *x.Hanging
	}
	return false
}

func (x *BlockStateProperties) GetHasBook() bool {
	if x != nil && x.HasBook != nil {
		return *x.HasBook
	}
	return false
}

func (x *BlockStateProperties) GetHasBottle_0() bool {
	if x != nil && x.HasBottle_0 != nil {
		return *x.HasBottle_0
	}
	return false
}

func (x *BlockStateProperties) GetHasBottle_1() bool {
	if x != nil && x.HasBottle_1 != nil {
		return *x.HasBottle_1
	}
	return false
}

func (x *BlockStateProperties) GetHasBottle_2() bool {
	if x != nil && x.HasBottle_2 != nil {
		return *x.HasBottle_2
	}
	return false
}

func (x *BlockStateProperties) GetHasRecord() bool {
	if x != nil && x.HasRecord != nil {
		return *x.HasRecord
	}
	return false
}

func (x *BlockStateProperties) GetHinge() Hinge {
	if x != nil && x.Hinge != nil {
		return *x.Hinge
	}
	return Hinge_HINGE_LEFT
}

func (x *BlockStateProperties) GetHoneyLevel() uint32 {
	if x != nil && x.HoneyLevel != nil {
		return *x.HoneyLevel
	}
	return 0
}

func (x *BlockStateProperties) GetInstrument() Instrument {
	if x != nil && x.Instrument != nil {
		return *x.Instrument
	}
	return Instrument_INSTRUMENT_HARP
}

func (x *BlockStateProperties) GetInverted() bool {
	if x != nil && x.Inverted != nil {
		return *x.Inverted
	}
	return false
}

func (x *BlockStateProperties) GetLayers() uint32 {
	if x != nil && x.Layers != nil {
		return *x.Layers
	}
	return 0
}

func (x *BlockStateProperties) GetLeaves() Leaves {
	if x != nil && x.Leaves != nil {
		return *x.Leaves
	}
	return Leaves_LEAVES_NONE
}

func (x *BlockStateProperties) GetLit() bool {
	if x != nil && x.Lit != nil {
		return *x.Lit
	}
	return false
}

func (x *BlockStateProperties) GetLocked() bool {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return false
}

func (x *BlockStateProperties) GetMode() Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Mode_MODE_SAVE
}

func (x *BlockStateProperties) GetMoisture() uint32 {
	if x != nil && x.Moisture != nil {
		return *x.Moisture
	}
	return 0
}

func (x *BlockStateProperties) GetNorth() North {
	if x != nil && x.North != nil {
		return *x.North
	}
	return North_NORTH_NONE
}

func (x *BlockStateProperties) GetOrientation() Orientation {
	if x != nil && x.Orientation != nil {
		return *x.Orientation
	}
	return Orientation_ORIENTATION_DOWN_EAST
}

func (x *BlockStateProperties) GetNote() uint32 {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return 0
}

func (x *BlockStateProperties) GetOccupied() bool {
	if x != nil && x.Occupied != nil {
		return *x.Occupied
	}
	return false
}

func (x *BlockStateProperties) GetInWall() bool {
	if x != nil && x.InWall != nil {
		return *x.InWall
	}
	return false
}

func (x *BlockStateProperties) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return false
}

func (x *BlockStateProperties) GetPersistent() bool {
	if x != nil && x.Persistent != nil {
		return *x.Persistent
	}
	return false
}

func (x *BlockStateProperties) GetPickles() uint32 {
	if x != nil && x.Pickles != nil {
		return *x.Pickles
	}
	return 0
}

func (x *BlockStateProperties) GetPower() uint32 {
	if x != nil && x.Power != nil {
		return *x.Power
	}
	return 0
}

func (x *BlockStateProperties) GetPowered() bool {
	if x != nil && x.Powered != nil {
		return *x.Powered
	}
	return false
}

func (x *BlockStateProperties) GetRotation() uint32 {
	if x != nil && x.Rotation != nil {
		return *x.Rotation
	}
	return 0
}

func (x *BlockStateProperties) GetPart() Part {
	if x != nil && x.Part != nil {
		return *x.Part
	}
	return Part_PART_HEAD
}

func (x *BlockStateProperties) GetSculkSensorPhase() SculkSensorPhase {
	if x != nil && x.SculkSensorPhase != nil {
		return *x.SculkSensorPhase
	}
	return SculkSensorPhase_SCULK_SENSOR_PHASE_INACTIVE
}

func (x *BlockStateProperties) GetShape() Shape {
	if x != nil && x.Shape != nil {
		return *x.Shape
	}
	return Shape_SHAPE_NORTH_SOUTH
}

func (x *BlockStateProperties) GetShort() bool {
	if x != nil && x.Short != nil {
		return *x.Short
	}
	return false
}

func (x *BlockStateProperties) GetShrieking() bool {
	if x != nil && x.Shrieking != nil {
		return *x.Shrieking
	}
	return false
}

func (x *BlockStateProperties) GetSignalFire() bool {
	if x != nil && x.SignalFire != nil {
		return *x.SignalFire
	}
	return false
}

func (x *BlockStateProperties) GetSlot_0Occupied() bool {
	if x != nil && x.Slot_0Occupied != nil {
		return *x.Slot_0Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSlot_1Occupied() bool {
	if x != nil && x.Slot_1Occupied != nil {
		return *x.Slot_1Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSlot_2Occupied() bool {
	if x != nil && x.Slot_2Occupied != nil {
		return *x.Slot_2Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSlot_3Occupied() bool {
	if x != nil && x.Slot_3Occupied != nil {
		return *x.Slot_3Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSlot_4Occupied() bool {
	if x != nil && x.Slot_4Occupied != nil {
		return *x.Slot_4Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSlot_5Occupied() bool {
	if x != nil && x.Slot_5Occupied != nil {
		return *x.Slot_5Occupied
	}
	return false
}

func (x *BlockStateProperties) GetSnowy() bool {
	if x != nil && x.Snowy != nil {
		return *x.Snowy
	}
	return false
}

func (x *BlockStateProperties) GetSouth() South {
	if x != nil && x.South != nil {
		return *x.South
	}
	return South_SOUTH_NONE
}

func (x *BlockStateProperties) GetStage() uint32 {
	if x != nil && x.Stage != nil {
		return *x.Stage
	}
	return 0
}

func (x *BlockStateProperties) GetThickness() Thickness {
	if x != nil && x.Thickness != nil {
		return *x.Thickness
	}
	return Thickness_THICKNESS_TIP_MERGE
}

func (x *BlockStateProperties) GetTilt() Tilt {
	if x != nil && x.Tilt != nil {
		return *x.Tilt
	}
	return Tilt_TILT_NONE
}

func (x *BlockStateProperties) GetTriggered() bool {
	if x != nil && x.Triggered != nil {
		return *x.Triggered
	}
	return false
}

func (x *BlockStateProperties) GetTrialSpawnerState() TrialSpawnerState {
	if x != nil && x.TrialSpawnerState != nil {
		return *x.TrialSpawnerState
	}
	return TrialSpawnerState_TRIAL_SPAWNER_STATE_INACTIVE
}

func (x *BlockStateProperties) GetUnstable() bool {
	if x != nil && x.Unstable != nil {
		return *x.Unstable
	}
	return false
}

func (x *BlockStateProperties) GetUp() bool {
	if x != nil && x.Up != nil {
		return *x.Up
	}
	return false
}

func (x *BlockStateProperties) GetVerticalDirection() VerticalDirection {
	if x != nil && x.VerticalDirection != nil {
		return *x.VerticalDirection
	}
	return VerticalDirection_VERTICAL_DIRECTION_UP
}

func (x *BlockStateProperties) GetWaterlogged() bool {
	if x != nil && x.Waterlogged != nil {
		return *x.Waterlogged
	}
	return false
}

func (x *BlockStateProperties) GetWest() West {
	if x != nil && x.West != nil {
		return *x.West
	}
	return West_WEST_NONE
}

func (x *BlockStateProperties) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *BlockStateProperties) GetEye() bool {
	if x != nil && x.Eye != nil {
		return *x.Eye
	}
	return false
}

func (x *BlockStateProperties) GetCharges() uint32 {
	if x != nil && x.Charges != nil {
		return *x.Charges
	}
	return 0
}

func (x *BlockStateProperties) GetBloom() bool {
	if x != nil && x.Bloom != nil {
		return *x.Bloom
	}
	return false
}

func (x *BlockStateProperties) GetHatch() uint32 {
	if x != nil && x.Hatch != nil {
		return *x.Hatch
	}
	return 0
}

var File_blocks_proto protoreflect.FileDescriptor

var file_blocks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c,
	0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x11,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x25, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x84, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0xc1, 0x13, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x04, 0x61, 0x78, 0x69, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x05, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x52, 0x04, 0x61, 0x78, 0x69, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x65, 0x72, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x62,
	0x65, 0x72, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x07, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x61, 0x67, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04, 0x64, 0x72, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x65, 0x61, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x05, 0x2e, 0x45, 0x61, 0x73, 0x74, 0x52, 0x04, 0x65, 0x61, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x67, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x65, 0x67,
	0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x16, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x05, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x07,
	0x2e, 0x46, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x66, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x6c, 0x66, 0x52, 0x04, 0x68, 0x61, 0x6c, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x30, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42,
	0x6f, 0x74, 0x74, 0x6c, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x31, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61,
	0x73, 0x42, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f,
	0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x32, 0x18, 0x20, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a,
	0x68, 0x61, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x21, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09,
	0x68, 0x61, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x68, 0x69, 0x6e,
	0x67, 0x65, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x48, 0x69, 0x6e, 0x67, 0x65,
	0x52, 0x05, 0x68, 0x69, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6e, 0x65, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f,
	0x6e, 0x65, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x25, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x26, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x73, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x69,
	0x74, 0x18, 0x28, 0x20, 0x03, 0x28, 0x08, 0x52, 0x03, 0x6c, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x29, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2a, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x05, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x69, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18, 0x2b, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x69, 0x73, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x4e, 0x6f, 0x72,
	0x74, 0x68, 0x52, 0x05, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72,
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x08, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x18, 0x30, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x57, 0x61,
	0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x31, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65,
	0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x34, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x65,
	0x64, 0x18, 0x35, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x36, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04,
	0x70, 0x61, 0x72, 0x74, 0x18, 0x37, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x12, 0x73, 0x63, 0x75, 0x6c, 0x6b,
	0x5f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x38, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x53, 0x63, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x10, 0x73, 0x63, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x18, 0x39, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18,
	0x3a, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x68, 0x72, 0x69, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x3b, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x09, 0x73, 0x68, 0x72, 0x69, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x30, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x3d,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x30, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x31, 0x5f, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c,
	0x6f, 0x74, 0x31, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x32, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x3f,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x32, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x33, 0x5f, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x40, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c,
	0x6f, 0x74, 0x33, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x34, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x41,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x34, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x35, 0x5f, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x42, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6c,
	0x6f, 0x74, 0x35, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6e, 0x6f, 0x77, 0x79, 0x18, 0x43, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6e, 0x6f, 0x77,
	0x79, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x18, 0x44, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x06, 0x2e, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x45, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x54, 0x68, 0x69, 0x63, 0x6b,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x19, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x74, 0x18, 0x47, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x05, 0x2e,
	0x54, 0x69, 0x6c, 0x74, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x18, 0x48, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x13, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x49, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x74, 0x72, 0x69, 0x61, 0x6c,
	0x53, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x4a, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x4b,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x41, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x4c,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x4d, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x0b, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x04, 0x77, 0x65, 0x73, 0x74, 0x18, 0x4e, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x57, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x77, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x4f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x79, 0x65, 0x18, 0x50, 0x20, 0x03, 0x28, 0x08, 0x52, 0x03, 0x65, 0x79, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x18, 0x51, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x6f, 0x6d, 0x18, 0x52, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x74, 0x63, 0x68, 0x18, 0x53, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x05, 0x68, 0x61, 0x74, 0x63, 0x68, 0x22, 0x89, 0x1f, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x78, 0x69,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x48, 0x03,
	0x52, 0x04, 0x61, 0x78, 0x69, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x65, 0x72,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x07, 0x62, 0x65,
	0x72, 0x72, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x07, 0x63,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x08, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x0c, 0x52, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x72, 0x6d, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x72,
	0x6d, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x0e, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0f, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x72, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10,
	0x52, 0x04, 0x64, 0x72, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x11, 0x52, 0x06, 0x64, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x65, 0x61, 0x73, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x45, 0x61, 0x73, 0x74, 0x48, 0x12, 0x52, 0x04, 0x65,
	0x61, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x65, 0x67, 0x67, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x13, 0x52, 0x04, 0x65, 0x67, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x14, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x15, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x16, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e,
	0x46, 0x61, 0x63, 0x65, 0x48, 0x17, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x18, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x19, 0x52, 0x0c,
	0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x66, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e,
	0x48, 0x61, 0x6c, 0x66, 0x48, 0x1a, 0x52, 0x04, 0x68, 0x61, 0x6c, 0x66, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x1b, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x1c, 0x52, 0x07, 0x68, 0x61, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x30, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x1d, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6c,
	0x65, 0x30, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x1e, 0x52, 0x0a, 0x68,
	0x61, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x31, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c,
	0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x32, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x1f, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x32,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x48, 0x20, 0x52, 0x09, 0x68, 0x61, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x68, 0x69, 0x6e, 0x67, 0x65,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x48, 0x69, 0x6e, 0x67, 0x65, 0x48, 0x21,
	0x52, 0x05, 0x68, 0x69, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x68, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x22, 0x52, 0x0a, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x23, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x25,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x24, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x25, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x48, 0x26, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x69, 0x74, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x27, 0x52, 0x03, 0x6c, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x48, 0x28, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x48,
	0x29, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6f,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x2a, 0x52, 0x08,
	0x6d, 0x6f, 0x69, 0x73, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x4e, 0x6f, 0x72,
	0x74, 0x68, 0x48, 0x2b, 0x52, 0x05, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x2c, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x2d, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x2e,
	0x52, 0x08, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x69, 0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x48, 0x2f,
	0x52, 0x06, 0x69, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x31, 0x20, 0x01, 0x28, 0x08, 0x48, 0x30, 0x52, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x31, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x69, 0x63,
	0x6b, 0x6c, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x32, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x6b, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x33, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x34, 0x52, 0x07, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x35, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x48, 0x36, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x12, 0x73, 0x63, 0x75, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x53, 0x63, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x48, 0x37, 0x52, 0x10, 0x73, 0x63, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x50, 0x68, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x48, 0x38, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x39, 0x52, 0x05, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x68, 0x72, 0x69, 0x65,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x3a, 0x52, 0x09, 0x73, 0x68,
	0x72, 0x69, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x3b, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x30, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x69, 0x65, 0x64, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x3c, 0x52, 0x0d, 0x73, 0x6c, 0x6f,
	0x74, 0x30, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x31, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x3d, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x31, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x32, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x3f, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x3e, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x32, 0x4f, 0x63, 0x63, 0x75,
	0x70, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x33, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x3f, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x33, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x34, 0x5f, 0x6f,
	0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x48, 0x40, 0x52,
	0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x34, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x35, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x70, 0x69, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x08, 0x48, 0x41, 0x52, 0x0d, 0x73, 0x6c,
	0x6f, 0x74, 0x35, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x18, 0x43, 0x20, 0x01, 0x28, 0x08, 0x48, 0x42, 0x52,
	0x05, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x6f, 0x75,
	0x74, 0x68, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x53, 0x6f, 0x75, 0x74, 0x68,
	0x48, 0x43, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x44, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x54, 0x68, 0x69,
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x48, 0x45, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x74, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6c, 0x74, 0x48, 0x46, 0x52, 0x04, 0x74,
	0x69, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x48, 0x20, 0x01, 0x28, 0x08, 0x48, 0x47, 0x52, 0x09, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x13, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x49, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x70,
	0x61, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x48, 0x52, 0x11, 0x74, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x4a,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x49, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x4a, 0x52, 0x02, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x4c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x4b, 0x52, 0x11, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18,
	0x4d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x4c, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x77, 0x65, 0x73, 0x74, 0x18,
	0x4e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x57, 0x65, 0x73, 0x74, 0x48, 0x4d, 0x52, 0x04,
	0x77, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x4f, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x4e, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x79, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x4f, 0x52, 0x03, 0x65, 0x79, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x73, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x50, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x6f,
	0x6d, 0x18, 0x52, 0x20, 0x01, 0x28, 0x08, 0x48, 0x51, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x68, 0x61, 0x74, 0x63, 0x68, 0x18, 0x53, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x52, 0x52, 0x05, 0x68, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x62, 0x65, 0x72, 0x72, 0x69, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x69, 0x74, 0x65,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x64, 0x72, 0x61, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65, 0x61, 0x73, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65,
	0x67, 0x67, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x68, 0x61, 0x6c, 0x66, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x30, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x31, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x32,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x68, 0x69, 0x6e, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6c, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x70, 0x69, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x6c,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x69, 0x63,
	0x6b, 0x6c, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x63, 0x75, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x68, 0x72, 0x69, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x30, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x31, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x32, 0x5f, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x33,
	0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x34, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x35, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x69, 0x6c, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x65, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x75, 0x70,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x65, 0x73, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x79, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x68, 0x61, 0x74,
	0x63, 0x68, 0x2a, 0x72, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x10, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x4c, 0x4f, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x45, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x4e,
	0x47, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f,
	0x57, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x2a, 0x2a, 0x0a, 0x04, 0x41, 0x78, 0x69, 0x73, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x58, 0x49, 0x53, 0x5f, 0x58, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x58,
	0x49, 0x53, 0x5f, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x58, 0x49, 0x53, 0x5f, 0x5a,
	0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x04, 0x45, 0x61, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x41,
	0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x41, 0x53,
	0x54, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x41, 0x53, 0x54, 0x5f,
	0x54, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x46, 0x41,
	0x4c, 0x53, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x55, 0x50,
	0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x10,
	0x06, 0x2a, 0x37, 0x0a, 0x04, 0x46, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x43, 0x45, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x6e, 0x0a, 0x06, 0x46, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e,
	0x4f, 0x52, 0x54, 0x48, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x43, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x41, 0x43, 0x49,
	0x4e, 0x47, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x41, 0x43,
	0x49, 0x4e, 0x47, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41,
	0x43, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x41, 0x43,
	0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x2a, 0x45, 0x0a, 0x04, 0x48, 0x61,
	0x6c, 0x66, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x55, 0x50, 0x50, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10,
	0x03, 0x2a, 0x28, 0x0a, 0x05, 0x48, 0x69, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x49,
	0x4e, 0x47, 0x45, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x49,
	0x4e, 0x47, 0x45, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x01, 0x2a, 0xb0, 0x04, 0x0a, 0x0a,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e,
	0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x41, 0x52, 0x50, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x41,
	0x53, 0x45, 0x44, 0x52, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54,
	0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4e, 0x41, 0x52, 0x45, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x41, 0x54,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x42, 0x41, 0x53, 0x53, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x52,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4c, 0x55, 0x54, 0x45, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x45, 0x4c, 0x4c,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x47, 0x55, 0x49, 0x54, 0x41, 0x52, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53,
	0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x49, 0x4d, 0x45, 0x10, 0x08, 0x12,
	0x18, 0x0a, 0x14, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x58, 0x59,
	0x4c, 0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x53,
	0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x52, 0x4f, 0x4e, 0x5f, 0x58, 0x59, 0x4c,
	0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54,
	0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x57, 0x5f, 0x42, 0x45, 0x4c, 0x4c, 0x10,
	0x0b, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x44, 0x49, 0x44, 0x47, 0x45, 0x52, 0x49, 0x44, 0x4f, 0x4f, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x10, 0x0d,
	0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42,
	0x41, 0x4e, 0x4a, 0x4f, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x5a, 0x4f, 0x4d, 0x42, 0x49,
	0x45, 0x10, 0x10, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e, 0x10, 0x11, 0x12, 0x16, 0x0a, 0x12,
	0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x45, 0x50,
	0x45, 0x52, 0x10, 0x12, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x10, 0x13, 0x12, 0x1e, 0x0a, 0x1a, 0x49,
	0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e, 0x10, 0x14, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x49, 0x47, 0x4c, 0x49, 0x4e,
	0x10, 0x15, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x16, 0x2a, 0x3d,
	0x0a, 0x06, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x56,
	0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x45, 0x41,
	0x56, 0x45, 0x53, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c,
	0x45, 0x41, 0x56, 0x45, 0x53, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x02, 0x2a, 0x69, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x41,
	0x56, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x4f, 0x41,
	0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x4e,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x52, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55,
	0x42, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x05, 0x2a, 0x75, 0x0a, 0x05, 0x4e, 0x6f, 0x72, 0x74,
	0x68, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x55, 0x50, 0x10, 0x05, 0x12,
	0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x10, 0x06, 0x2a,
	0xc7, 0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x15, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52,
	0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x4e,
	0x4f, 0x52, 0x54, 0x48, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x17, 0x0a,
	0x13, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x5f,
	0x45, 0x41, 0x53, 0x54, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x10, 0x05,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52,
	0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x5f, 0x57, 0x45, 0x53,
	0x54, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x50, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13,
	0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x41, 0x53, 0x54,
	0x5f, 0x55, 0x50, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x55, 0x50, 0x10, 0x0a, 0x12,
	0x18, 0x0a, 0x14, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x4f, 0x55, 0x54, 0x48, 0x5f, 0x55, 0x50, 0x10, 0x0b, 0x2a, 0x24, 0x0a, 0x04, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x46, 0x4f, 0x4f, 0x54, 0x10, 0x01, 0x2a,
	0x73, 0x0a, 0x10, 0x53, 0x63, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x53, 0x45, 0x4e,
	0x53, 0x4f, 0x52, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x53, 0x45,
	0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x53, 0x45, 0x4e,
	0x53, 0x4f, 0x52, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f,
	0x57, 0x4e, 0x10, 0x02, 0x2a, 0xe3, 0x02, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x53, 0x4f,
	0x55, 0x54, 0x48, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x48,
	0x41, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x41,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x41, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x48, 0x41,
	0x50, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4f, 0x55,
	0x54, 0x48, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x53, 0x4f,
	0x55, 0x54, 0x48, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48,
	0x41, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x07,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f,
	0x57, 0x45, 0x53, 0x54, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x49, 0x47, 0x48, 0x54, 0x10, 0x0a,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f,
	0x4c, 0x45, 0x46, 0x54, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x0c, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x46,
	0x54, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x4f, 0x55, 0x54,
	0x45, 0x52, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x0e, 0x2a, 0x75, 0x0a, 0x05, 0x53, 0x6f,
	0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x57,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x41, 0x4c, 0x4c,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x52, 0x55, 0x45,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x55, 0x50, 0x10,
	0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x10,
	0x06, 0x2a, 0x78, 0x0a, 0x09, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x13, 0x54, 0x48, 0x49, 0x43, 0x4b, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x49, 0x50, 0x5f,
	0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48, 0x49, 0x43, 0x4b,
	0x4e, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x49, 0x50, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x48,
	0x49, 0x43, 0x4b, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x52, 0x55, 0x53, 0x54, 0x55, 0x4d, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x48, 0x49, 0x43, 0x4b, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x4d,
	0x49, 0x44, 0x44, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x48, 0x49, 0x43, 0x4b,
	0x4e, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x04, 0x2a, 0x49, 0x0a, 0x04, 0x54,
	0x69, 0x6c, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x49, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x49, 0x4c, 0x54, 0x5f, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4c, 0x54, 0x5f,
	0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x2a, 0x82, 0x02, 0x0a, 0x11, 0x54, 0x72, 0x69, 0x61, 0x6c,
	0x53, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c,
	0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x2b,
	0x0a, 0x27, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f,
	0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x54,
	0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x54,
	0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x27, 0x0a, 0x23, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x49,
	0x41, 0x4c, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x2a, 0x88, 0x01, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x50,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f,
	0x4d, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42,
	0x4c, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49,
	0x4e, 0x47, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x49, 0x43, 0x4b, 0x59, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x45, 0x46, 0x54, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x07, 0x2a, 0x4b, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x56,
	0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x50, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43,
	0x41, 0x4c, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x01, 0x2a, 0x6d, 0x0a, 0x04, 0x57, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x57,
	0x45, 0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x45,
	0x53, 0x54, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x53, 0x54, 0x5f,
	0x54, 0x52, 0x55, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x41, 0x4c, 0x53, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x55,
	0x50, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x49, 0x44, 0x45,
	0x10, 0x06, 0x2a, 0xcb, 0xb8, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53,
	0x4c, 0x41, 0x42, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47,
	0x52, 0x41, 0x59, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49,
	0x4c, 0x59, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x4e, 0x47,
	0x52, 0x4f, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0x03, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c,
	0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f,
	0x4e, 0x44, 0x55, 0x49, 0x54, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x55, 0x52, 0x54, 0x4c,
	0x45, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x06, 0x12, 0x22, 0x0a, 0x1e, 0x57, 0x41, 0x58, 0x45, 0x44,
	0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x45,
	0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f,
	0x4f, 0x52, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x41, 0x4b, 0x5f, 0x42, 0x55, 0x54, 0x54,
	0x4f, 0x4e, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x48, 0x55,
	0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x52,
	0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57,
	0x44, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x0c, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x4d, 0x45, 0x54, 0x48, 0x59, 0x53, 0x54, 0x5f,
	0x42, 0x55, 0x44, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52,
	0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x4c, 0x42, 0x10, 0x0e,
	0x12, 0x1c, 0x0a, 0x18, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0x0f, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x55, 0x4b, 0x45, 0x42, 0x4f, 0x58, 0x10, 0x11, 0x12,
	0x19, 0x0a, 0x15, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50,
	0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x12, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x41,
	0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f,
	0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x41, 0x4b, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53,
	0x53, 0x10, 0x15, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f,
	0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x16, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x49, 0x55, 0x4d, 0x10, 0x17, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x53, 0x45, 0x10, 0x18, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x45, 0x4f, 0x4e, 0x59, 0x10,
	0x19, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f,
	0x57, 0x41, 0x4c, 0x4c, 0x10, 0x1a, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f,
	0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f,
	0x50, 0x50, 0x45, 0x52, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x49,
	0x43, 0x45, 0x10, 0x1c, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x45, 0x52, 0x4e, 0x10, 0x1d, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x10, 0x1e, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45,
	0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x1f, 0x12, 0x16,
	0x0a, 0x12, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52,
	0x5f, 0x42, 0x4f, 0x58, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x41, 0x4c, 0x5f, 0x4f,
	0x52, 0x45, 0x10, 0x21, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54,
	0x45, 0x10, 0x22, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x55, 0x53, 0x48, 0x52,
	0x4f, 0x4f, 0x4d, 0x10, 0x23, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42,
	0x4c, 0x55, 0x45, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41,
	0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x24, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b,
	0x45, 0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x41, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x10, 0x26, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x27, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x55, 0x52, 0x50, 0x55, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x28, 0x12,
	0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x29,
	0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54,
	0x10, 0x2a, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x55, 0x42, 0x42, 0x4c,
	0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e,
	0x10, 0x2b, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e,
	0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x2c, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x52,
	0x45, 0x45, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57,
	0x44, 0x45, 0x52, 0x10, 0x2d, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x2e, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x2f, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x55, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x30, 0x12, 0x14, 0x0a, 0x10, 0x50,
	0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x49, 0x54, 0x45, 0x10,
	0x31, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x32, 0x12, 0x11, 0x0a,
	0x0d, 0x43, 0x48, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x56, 0x49, 0x4c, 0x10, 0x33,
	0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x46, 0x45, 0x4e,
	0x43, 0x45, 0x10, 0x34, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x56, 0x41, 0x5f, 0x43, 0x41, 0x55,
	0x4c, 0x44, 0x52, 0x4f, 0x4e, 0x10, 0x35, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x4d, 0x4f, 0x4f, 0x54,
	0x48, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10,
	0x36, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45,
	0x10, 0x37, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x10, 0x38, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4e, 0x4f, 0x57, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x39, 0x12, 0x18, 0x0a, 0x14, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x3a, 0x12, 0x0f, 0x0a,
	0x0b, 0x57, 0x49, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x53, 0x45, 0x10, 0x3b, 0x12, 0x16,
	0x0a, 0x12, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52,
	0x5f, 0x42, 0x4f, 0x58, 0x10, 0x3c, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x3d, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x44,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x10, 0x3e, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45, 0x54,
	0x48, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x10, 0x3f, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x42, 0x53, 0x49, 0x44, 0x49, 0x41, 0x4e, 0x10, 0x40, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4f,
	0x57, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x4e, 0x4f, 0x57, 0x10, 0x41, 0x12, 0x0f, 0x0a, 0x0b, 0x45,
	0x4d, 0x45, 0x52, 0x41, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0x42, 0x12, 0x1a, 0x0a, 0x16,
	0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x43, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x49, 0x4e, 0x4b,
	0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x44, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x57, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x56, 0x49, 0x4e, 0x45, 0x53, 0x10,
	0x45, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x5f, 0x4c, 0x41, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x10, 0x46, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x5a, 0x41, 0x4c, 0x45, 0x41, 0x10,
	0x47, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x48, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x41, 0x4d, 0x4f,
	0x4e, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0x49, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x41, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x4a, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x42, 0x42,
	0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x4b,
	0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x4c, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x5f, 0x42, 0x45, 0x44, 0x10, 0x4d, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x55, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x4e, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x4f, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x45, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x5f, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52,
	0x10, 0x50, 0x12, 0x1c, 0x0a, 0x18, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x47, 0x4c, 0x41,
	0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x51,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x42, 0x45, 0x44, 0x10, 0x52, 0x12,
	0x12, 0x0a, 0x0e, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x10, 0x53, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x4c, 0x4f,
	0x47, 0x10, 0x54, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x42, 0x52,
	0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x55, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x41,
	0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x10, 0x56, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x57, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x52, 0x41, 0x47, 0x4f,
	0x4e, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x58, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x49, 0x4e, 0x4b, 0x5f,
	0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0x59, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x45, 0x44, 0x5f, 0x4d, 0x45, 0x4c, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x5a,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x5b,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x5f,
	0x42, 0x55, 0x53, 0x48, 0x10, 0x5c, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x45,
	0x54, 0x48, 0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x5d, 0x12, 0x17, 0x0a,
	0x13, 0x54, 0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x46, 0x41, 0x4e, 0x10, 0x5e, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x45, 0x44, 0x52, 0x4f, 0x43,
	0x4b, 0x10, 0x5f, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10,
	0x60, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x4b, 0x53, 0x10, 0x61, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b,
	0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x62, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x41,
	0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0x63, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x52,
	0x59, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x42, 0x53, 0x49, 0x44, 0x49, 0x41, 0x4e, 0x10, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4b, 0x45, 0x4c, 0x50, 0x10, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x4d,
	0x42, 0x4f, 0x4f, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x66, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48,
	0x45, 0x52, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45,
	0x10, 0x68, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43,
	0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x69,
	0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x6a, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f,
	0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x10, 0x6b, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52,
	0x45, 0x54, 0x45, 0x10, 0x6c, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45,
	0x44, 0x5f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10,
	0x6d, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45,
	0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x6e, 0x12, 0x0c, 0x0a, 0x08,
	0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0x6f, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52,
	0x10, 0x70, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x54,
	0x55, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x71, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x72, 0x12,
	0x11, 0x0a, 0x0d, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e,
	0x10, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x55, 0x42, 0x45, 0x5f,
	0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x74, 0x12, 0x1a, 0x0a, 0x16, 0x4d,
	0x4f, 0x53, 0x53, 0x59, 0x5f, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x75, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x76, 0x12, 0x17,
	0x0a, 0x13, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x77, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x41, 0x43, 0x49,
	0x41, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x78, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52,
	0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0x79, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10,
	0x7a, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4f, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x48, 0x10, 0x7b,
	0x12, 0x24, 0x0a, 0x20, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a,
	0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x52, 0x53, 0x10, 0x7c, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f,
	0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0x7d, 0x12, 0x19,
	0x0a, 0x15, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45,
	0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0x7e, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x52, 0x49,
	0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x7f, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x49,
	0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x48, 0x59, 0x50, 0x48, 0x41, 0x45, 0x10, 0x80, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f,
	0x4e, 0x10, 0x81, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x82, 0x01, 0x12,
	0x19, 0x0a, 0x14, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x83, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x4d,
	0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x52, 0x53, 0x10, 0x84, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x57, 0x49, 0x53, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x56, 0x49, 0x4e, 0x45, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0x85, 0x01,
	0x12, 0x16, 0x0a, 0x11, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45,
	0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x86, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x4f, 0x50, 0x50,
	0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x87, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x45,
	0x54, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x41, 0x49, 0x4c, 0x10, 0x88, 0x01, 0x12, 0x0d,
	0x0a, 0x08, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x42, 0x45, 0x44, 0x10, 0x89, 0x01, 0x12, 0x13, 0x0a,
	0x0e, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x8a, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x42, 0x52, 0x49,
	0x43, 0x4b, 0x53, 0x10, 0x8b, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x4e, 0x44, 0x45, 0x53, 0x49,
	0x54, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x8c, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x48,
	0x4f, 0x52, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0x8d, 0x01, 0x12, 0x0f, 0x0a,
	0x0a, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x8e, 0x01, 0x12, 0x17,
	0x0a, 0x12, 0x4f, 0x41, 0x4b, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50,
	0x4c, 0x41, 0x54, 0x45, 0x10, 0x8f, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x49, 0x4e, 0x4b, 0x5f,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x90, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x91,
	0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x4f, 0x41, 0x4b, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10,
	0x92, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x46, 0x4c, 0x4f, 0x57, 0x45,
	0x52, 0x5f, 0x43, 0x52, 0x4f, 0x50, 0x10, 0x93, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x48, 0x41,
	0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x94, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x52, 0x4f, 0x44, 0x10, 0x95, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x50, 0x4f, 0x44, 0x5a, 0x4f,
	0x4c, 0x10, 0x96, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x44,
	0x4c, 0x45, 0x10, 0x97, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x98, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x44,
	0x52, 0x49, 0x45, 0x44, 0x5f, 0x4b, 0x45, 0x4c, 0x50, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x99, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x4b, 0x55, 0x4c, 0x4c, 0x10, 0x9a, 0x01, 0x12, 0x12, 0x0a, 0x0d,
	0x53, 0x54, 0x49, 0x43, 0x4b, 0x59, 0x5f, 0x50, 0x49, 0x53, 0x54, 0x4f, 0x4e, 0x10, 0x9b, 0x01,
	0x12, 0x16, 0x0a, 0x11, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x52, 0x4e, 0x46,
	0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x9c, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x57, 0x41, 0x58, 0x45,
	0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f,
	0x52, 0x10, 0x9d, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x9e,
	0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10,
	0x9f, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x49, 0x52, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44,
	0x4f, 0x4f, 0x52, 0x10, 0xa0, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44,
	0x5f, 0x44, 0x41, 0x4e, 0x44, 0x45, 0x4c, 0x49, 0x4f, 0x4e, 0x10, 0xa1, 0x01, 0x12, 0x19, 0x0a,
	0x14, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x46,
	0x55, 0x4e, 0x47, 0x55, 0x53, 0x10, 0xa2, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x4d, 0x42,
	0x4f, 0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10, 0xa3, 0x01, 0x12, 0x1a, 0x0a, 0x15,
	0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xa4, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x49, 0x4d,
	0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x59, 0x4c, 0x49, 0x55, 0x4d, 0x10, 0xa5, 0x01, 0x12, 0x12, 0x0a,
	0x0d, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x43, 0x54, 0x55, 0x53, 0x10, 0xa6,
	0x01, 0x12, 0x12, 0x0a, 0x0d, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x48, 0x59, 0x50, 0x48,
	0x41, 0x45, 0x10, 0xa7, 0x01, 0x12, 0x0c, 0x0a, 0x07, 0x43, 0x41, 0x4c, 0x43, 0x49, 0x54, 0x45,
	0x10, 0xa8, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50,
	0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x54,
	0x45, 0x10, 0xa9, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xaa, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x41, 0x49, 0x4c, 0x10, 0xab, 0x01, 0x12, 0x19, 0x0a,
	0x14, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xac, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x46, 0x41, 0x52, 0x4d,
	0x4c, 0x41, 0x4e, 0x44, 0x10, 0xad, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x54, 0x52, 0x49, 0x50,
	0x50, 0x45, 0x44, 0x5f, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xae, 0x01,
	0x12, 0x10, 0x0a, 0x0b, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x4f, 0x52, 0x43, 0x48, 0x49, 0x44, 0x10,
	0xaf, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xb0, 0x01, 0x12, 0x12, 0x0a,
	0x0d, 0x50, 0x49, 0x54, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0xb1,
	0x01, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x53, 0x53,
	0x10, 0xb2, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x4f, 0x52, 0x45, 0x10, 0xb3, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f,
	0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f,
	0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0xb4, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x57, 0x48, 0x49, 0x54,
	0x45, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f,
	0x54, 0x54, 0x41, 0x10, 0xb5, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f,
	0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xb6, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x43,
	0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0xb7, 0x01, 0x12,
	0x1b, 0x0a, 0x16, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x41,
	0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xb8, 0x01, 0x12, 0x0d, 0x0a, 0x08,
	0x4f, 0x41, 0x4b, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xb9, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x50,
	0x49, 0x47, 0x4c, 0x49, 0x4e, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0xba, 0x01, 0x12, 0x1c, 0x0a,
	0x17, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0xbb, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x52,
	0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44,
	0x45, 0x52, 0x10, 0xbc, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45,
	0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x55,
	0x4c, 0x42, 0x10, 0xbd, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x41, 0x52, 0x56, 0x45, 0x44, 0x5f,
	0x50, 0x55, 0x4d, 0x50, 0x4b, 0x49, 0x4e, 0x10, 0xbe, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f,
	0x42, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x57, 0x41, 0x4c, 0x4c, 0x10, 0xbf, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x4f, 0x50, 0x50, 0x45,
	0x52, 0x5f, 0x42, 0x55, 0x4c, 0x42, 0x10, 0xc0, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f,
	0x42, 0x4f, 0x58, 0x10, 0xc1, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x42, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41,
	0x53, 0x53, 0x10, 0xc2, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f,
	0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xc3, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x50, 0x52, 0x55,
	0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xc4, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x57, 0x48, 0x49,
	0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xc5,
	0x01, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x41, 0x46, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0xc6, 0x01, 0x12, 0x0c, 0x0a, 0x07, 0x44, 0x49, 0x4f, 0x52, 0x49, 0x54,
	0x45, 0x10, 0xc7, 0x01, 0x12, 0x22, 0x0a, 0x1d, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52,
	0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53,
	0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0xc8, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x4c, 0x49, 0x4d, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50,
	0x41, 0x4e, 0x45, 0x10, 0xc9, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x53, 0x50, 0x52, 0x4f, 0x55, 0x54, 0x53, 0x10, 0xca, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x42,
	0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45,
	0x10, 0xcb, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f,
	0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xcc, 0x01, 0x12, 0x16, 0x0a, 0x11,
	0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0xcd, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41,
	0x4e, 0x45, 0x10, 0xce, 0x01, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x55, 0x4e, 0x46, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x10, 0xcf, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x57,
	0x4f, 0x4f, 0x4c, 0x10, 0xd0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x48,
	0x4f, 0x52, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0xd1, 0x01, 0x12, 0x1c, 0x0a, 0x17,
	0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44,
	0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xd2, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x47, 0x4c,
	0x4f, 0x57, 0x5f, 0x4c, 0x49, 0x43, 0x48, 0x45, 0x4e, 0x10, 0xd3, 0x01, 0x12, 0x17, 0x0a, 0x12,
	0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x4f, 0x52, 0x43, 0x48,
	0x49, 0x44, 0x10, 0xd4, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f,
	0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0xd5, 0x01, 0x12, 0x0e, 0x0a, 0x09, 0x49, 0x52, 0x4f, 0x4e,
	0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xd6, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54,
	0x45, 0x44, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0xd7,
	0x01, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x57, 0x41, 0x4c, 0x4c, 0x10, 0xd8, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x42, 0x4c, 0x55, 0x45, 0x5f,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xd9, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4d, 0x49,
	0x54, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xda, 0x01, 0x12, 0x19,
	0x0a, 0x14, 0x52, 0x45, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45,
	0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xdb, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x42, 0x41, 0x4d,
	0x42, 0x4f, 0x4f, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xdc, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x42,
	0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xdd,
	0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10,
	0xde, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x4c,
	0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0xdf, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x41, 0x4e, 0x47,
	0x52, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xe0, 0x01, 0x12, 0x0e, 0x0a, 0x09,
	0x42, 0x45, 0x45, 0x54, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0xe1, 0x01, 0x12, 0x18, 0x0a, 0x13,
	0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x41, 0x50, 0x49, 0x53, 0x5f,
	0x4f, 0x52, 0x45, 0x10, 0xe2, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x52, 0x49, 0x4e, 0x44, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x10, 0xe3, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x50, 0x4f, 0x57, 0x45, 0x52,
	0x45, 0x44, 0x5f, 0x52, 0x41, 0x49, 0x4c, 0x10, 0xe4, 0x01, 0x12, 0x0c, 0x0a, 0x07, 0x42, 0x41,
	0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0xe5, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x49, 0x4c, 0x44,
	0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xe6, 0x01,
	0x12, 0x12, 0x0a, 0x0d, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x4e, 0x59, 0x4c, 0x49, 0x55,
	0x4d, 0x10, 0xe7, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x41, 0x43, 0x54, 0x55, 0x53, 0x10, 0xe8,
	0x01, 0x12, 0x0e, 0x0a, 0x09, 0x48, 0x41, 0x59, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xe9,
	0x01, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x47, 0x52,
	0x41, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xea, 0x01, 0x12,
	0x10, 0x0a, 0x0b, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xeb,
	0x01, 0x12, 0x1d, 0x0a, 0x18, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xec, 0x01,
	0x12, 0x19, 0x0a, 0x14, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55,
	0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xed, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x50,
	0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x41, 0x5a, 0x41, 0x4c, 0x45, 0x41, 0x5f, 0x42, 0x55, 0x53, 0x48, 0x10, 0xee, 0x01, 0x12, 0x09,
	0x0a, 0x04, 0x53, 0x41, 0x4e, 0x44, 0x10, 0xef, 0x01, 0x12, 0x09, 0x0a, 0x04, 0x53, 0x4e, 0x4f,
	0x57, 0x10, 0xf0, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x46, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xf1, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x43,
	0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xf2, 0x01,
	0x12, 0x1c, 0x0a, 0x17, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50,
	0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4c, 0x45, 0x53, 0x10, 0xf3, 0x01, 0x12, 0x1f,
	0x0a, 0x1a, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0xf4, 0x01, 0x12,
	0x17, 0x0a, 0x12, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf5, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0xf6, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x59, 0x41,
	0x4e, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0xf7, 0x01,
	0x12, 0x22, 0x0a, 0x1d, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x52, 0x41,
	0x43, 0x4b, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x53, 0x10, 0xf8, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x4e, 0x44, 0x45, 0x53, 0x49, 0x54, 0x45,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xf9, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x48, 0x45, 0x44, 0x5f, 0x50, 0x55, 0x4d, 0x50, 0x4b, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x45,
	0x4d, 0x10, 0xfa, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xfb, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x53,
	0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x53, 0x4c, 0x41, 0x42, 0x10, 0xfc, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x43, 0x55, 0x54, 0x54, 0x45, 0x52, 0x10, 0xfd, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x57, 0x41, 0x58,
	0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54,
	0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xfe, 0x01, 0x12,
	0x11, 0x0a, 0x0c, 0x47, 0x52, 0x41, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10,
	0xff, 0x01, 0x12, 0x0e, 0x0a, 0x09, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x45, 0x44, 0x10,
	0x80, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x81, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x45,
	0x44, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0x82, 0x02,
	0x12, 0x21, 0x0a, 0x1c, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x47,
	0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41,
	0x10, 0x83, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41,
	0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x84,
	0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x45, 0x10,
	0x85, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x5a, 0x55,
	0x52, 0x45, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x54, 0x10, 0x86, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x42,
	0x49, 0x52, 0x43, 0x48, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x87, 0x02, 0x12, 0x0f, 0x0a, 0x0a,
	0x42, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x88, 0x02, 0x12, 0x0e, 0x0a,
	0x09, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0x89, 0x02, 0x12, 0x10, 0x0a,
	0x0b, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x8a, 0x02, 0x12,
	0x11, 0x0a, 0x0c, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x8b, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x8c, 0x02, 0x12, 0x1b, 0x0a,
	0x16, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x48, 0x55, 0x4c,
	0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x8d, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54,
	0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x57, 0x4f,
	0x4f, 0x44, 0x10, 0x8e, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x4c,
	0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0x8f, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x48, 0x4f, 0x52, 0x4e,
	0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x90, 0x02, 0x12,
	0x10, 0x0a, 0x0b, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x91,
	0x02, 0x12, 0x10, 0x0a, 0x0b, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0x92, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44,
	0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0x93, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x94, 0x02, 0x12, 0x18, 0x0a, 0x13,
	0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47,
	0x41, 0x54, 0x45, 0x10, 0x95, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x54,
	0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x96, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x97, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x4f,
	0x58, 0x45, 0x59, 0x45, 0x5f, 0x44, 0x41, 0x49, 0x53, 0x59, 0x10, 0x98, 0x02, 0x12, 0x13, 0x0a,
	0x0e, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10,
	0x99, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x57,
	0x4f, 0x4f, 0x44, 0x10, 0x9a, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43,
	0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x9b, 0x02,
	0x12, 0x0f, 0x0a, 0x0a, 0x49, 0x52, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x9c,
	0x02, 0x12, 0x19, 0x0a, 0x14, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f,
	0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x9d, 0x02, 0x12, 0x15, 0x0a, 0x10,
	0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52,
	0x10, 0x9e, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x50, 0x55, 0x52, 0x50, 0x55, 0x52, 0x5f, 0x50, 0x49,
	0x4c, 0x4c, 0x41, 0x52, 0x10, 0x9f, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x57, 0x41, 0x58, 0x45, 0x44,
	0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x10, 0xa0, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x46, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xa1, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x43,
	0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xa2,
	0x02, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45,
	0x10, 0xa3, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xa4,
	0x02, 0x12, 0x0c, 0x0a, 0x07, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xa5, 0x02, 0x12,
	0x13, 0x0a, 0x0e, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x42, 0x45,
	0x44, 0x10, 0xa6, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0xa7, 0x02, 0x12, 0x21, 0x0a, 0x1c, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54,
	0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41,
	0x54, 0x45, 0x10, 0xa8, 0x02, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x50, 0x4f, 0x4e, 0x47, 0x45, 0x10,
	0xa9, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0xaa, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52,
	0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xab, 0x02, 0x12, 0x0b, 0x0a, 0x06, 0x41, 0x4c, 0x4c,
	0x49, 0x55, 0x4d, 0x10, 0xac, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0xad, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x46,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0xae, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xaf, 0x02, 0x12, 0x15, 0x0a, 0x10,
	0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45,
	0x10, 0xb0, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x50, 0x52, 0x49, 0x53,
	0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xb1, 0x02, 0x12, 0x0e,
	0x0a, 0x09, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xb2, 0x02, 0x12, 0x15,
	0x0a, 0x10, 0x53, 0x57, 0x45, 0x45, 0x54, 0x5f, 0x42, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x42, 0x55,
	0x53, 0x48, 0x10, 0xb3, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f,
	0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xb4, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x57,
	0x48, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10,
	0xb5, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x53, 0x48,
	0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0xb6, 0x02, 0x12, 0x13, 0x0a, 0x0e,
	0x52, 0x41, 0x57, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb7,
	0x02, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x10, 0xb8,
	0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10,
	0xb9, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x46, 0x45, 0x4e,
	0x43, 0x45, 0x10, 0xba, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x10, 0xbb, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45,
	0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x49, 0x52, 0x53, 0x10, 0xbc, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f,
	0x53, 0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x10, 0xbd, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x55,
	0x54, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x53, 0x4c, 0x41, 0x42, 0x10, 0xbe, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x47, 0x52, 0x41, 0x4e, 0x49,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xbf, 0x02, 0x12, 0x0e, 0x0a, 0x09,
	0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xc0, 0x02, 0x12, 0x15, 0x0a, 0x10,
	0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45,
	0x10, 0xc1, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x4f, 0x41, 0x4b, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xc2, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x43, 0x41,
	0x52, 0x52, 0x4f, 0x54, 0x53, 0x10, 0xc3, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x45, 0x41, 0x44,
	0x5f, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0xc4, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x47,
	0x4f, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0xc5, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41,
	0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0xc6, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x4f,
	0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xc7,
	0x02, 0x12, 0x14, 0x0a, 0x0f, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x50,
	0x44, 0x4f, 0x4f, 0x52, 0x10, 0xc8, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xc9, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x4d, 0x41,
	0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x10, 0xca, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x4d, 0x55, 0x44, 0x5f, 0x42, 0x52,
	0x49, 0x43, 0x4b, 0x53, 0x10, 0xcb, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54, 0x52, 0x49, 0x50,
	0x50, 0x45, 0x44, 0x5f, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10,
	0xcc, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x5a, 0x41, 0x4c, 0x45, 0x41, 0x5f, 0x4c, 0x45, 0x41,
	0x56, 0x45, 0x53, 0x10, 0xcd, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f,
	0x5f, 0x4d, 0x4f, 0x53, 0x41, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xce,
	0x02, 0x12, 0x0c, 0x0a, 0x07, 0x42, 0x45, 0x45, 0x48, 0x49, 0x56, 0x45, 0x10, 0xcf, 0x02, 0x12,
	0x12, 0x0a, 0x0d, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53,
	0x10, 0xd0, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f,
	0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xd1, 0x02, 0x12, 0x11, 0x0a, 0x0c,
	0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xd2, 0x02, 0x12,
	0x0c, 0x0a, 0x07, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x52, 0x4e, 0x10, 0xd3, 0x02, 0x12, 0x0a, 0x0a,
	0x05, 0x4c, 0x49, 0x4c, 0x41, 0x43, 0x10, 0xd4, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x48, 0x45,
	0x52, 0x52, 0x59, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xd5,
	0x02, 0x12, 0x0b, 0x0a, 0x06, 0x4c, 0x41, 0x44, 0x44, 0x45, 0x52, 0x10, 0xd6, 0x02, 0x12, 0x18,
	0x0a, 0x13, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0xd7, 0x02, 0x12, 0x0e, 0x0a, 0x09, 0x4f, 0x41, 0x4b, 0x5f,
	0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xd8, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x50, 0x49, 0x54, 0x43,
	0x48, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x4f, 0x50, 0x10, 0xd9, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x42,
	0x49, 0x52, 0x43, 0x48, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0xda, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x52,
	0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xdb, 0x02,
	0x12, 0x17, 0x0a, 0x12, 0x4c, 0x49, 0x4c, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x48, 0x45, 0x5f,
	0x56, 0x41, 0x4c, 0x4c, 0x45, 0x59, 0x10, 0xdc, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x48, 0x45,
	0x52, 0x52, 0x59, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xdd, 0x02, 0x12, 0x09, 0x0a, 0x04, 0x56,
	0x49, 0x4e, 0x45, 0x10, 0xde, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f,
	0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50,
	0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xdf, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x50,
	0x52, 0x49, 0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x10, 0xe0, 0x02, 0x12, 0x11, 0x0a, 0x0c,
	0x54, 0x49, 0x4e, 0x54, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xe1, 0x02, 0x12,
	0x1b, 0x0a, 0x16, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54,
	0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe2, 0x02, 0x12, 0x1a, 0x0a, 0x15,
	0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41,
	0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe3, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x47,
	0x52, 0x4f, 0x56, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x41, 0x47, 0x55, 0x4c, 0x45, 0x10, 0xe4,
	0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x49, 0x43, 0x45, 0x10,
	0xe5, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x52, 0x41, 0x49, 0x4e,
	0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0xe6, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x4d, 0x4f,
	0x4f, 0x54, 0x48, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x52, 0x53, 0x10, 0xe7, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x45, 0x44, 0x5f, 0x47,
	0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41,
	0x10, 0xe8, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xe9, 0x02, 0x12,
	0x12, 0x0a, 0x0d, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x4c, 0x41, 0x4d, 0x50,
	0x10, 0xea, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x57, 0x41,
	0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xeb, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x49,
	0x47, 0x5f, 0x44, 0x52, 0x49, 0x50, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0xec, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x55, 0x46, 0x46, 0x10, 0xed, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x41, 0x5a, 0x41, 0x4c, 0x45, 0x41, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45,
	0x53, 0x10, 0xee, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45,
	0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xef, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x50, 0x52, 0x55,
	0x43, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0xf0, 0x02, 0x12, 0x1a, 0x0a, 0x15,
	0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xf1, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x41, 0x50, 0x49,
	0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xf2, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x52,
	0x49, 0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10,
	0xf3, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x50, 0x49, 0x4c,
	0x4c, 0x41, 0x52, 0x10, 0xf4, 0x02, 0x12, 0x0e, 0x0a, 0x09, 0x4c, 0x4f, 0x44, 0x45, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x10, 0xf5, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50,
	0x45, 0x44, 0x5f, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0xf6, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xf7,
	0x02, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x54, 0x4f, 0x47, 0x52, 0x41, 0x50, 0x48, 0x59,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xf8, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x45, 0x41,
	0x44, 0x5f, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xf9, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52,
	0x53, 0x10, 0xfa, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x4f, 0x41, 0x4b, 0x5f, 0x46, 0x45, 0x4e, 0x43,
	0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xfb, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x44, 0x45, 0x45,
	0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x52, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x45, 0x10,
	0xfc, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x54, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xfd, 0x02, 0x12, 0x1a, 0x0a, 0x15,
	0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x49, 0x54, 0x45,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xfe, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x57, 0x41, 0x58, 0x45,
	0x44, 0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45,
	0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xff, 0x02, 0x12, 0x10, 0x0a,
	0x0b, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x54, 0x10, 0x80, 0x03, 0x12,
	0x12, 0x0a, 0x0d, 0x43, 0x55, 0x54, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x10, 0x81, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e,
	0x45, 0x52, 0x10, 0x82, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x45, 0x41, 0x5f, 0x4c, 0x41, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x10, 0x83, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x52, 0x41, 0x49, 0x4e,
	0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10,
	0x84, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45,
	0x54, 0x10, 0x85, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f,
	0x42, 0x45, 0x44, 0x10, 0x86, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f,
	0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x87,
	0x03, 0x12, 0x16, 0x0a, 0x11, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45,
	0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0x88, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x89, 0x03,
	0x12, 0x15, 0x0a, 0x10, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f,
	0x43, 0x41, 0x4b, 0x45, 0x10, 0x8a, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x57, 0x48, 0x49, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0x8b, 0x03, 0x12, 0x0b, 0x0a, 0x06,
	0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x10, 0x8c, 0x03, 0x12, 0x0e, 0x0a, 0x09, 0x42, 0x4c, 0x41,
	0x43, 0x4b, 0x5f, 0x42, 0x45, 0x44, 0x10, 0x8d, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x59, 0x41,
	0x4e, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x8e, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x53,
	0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x10, 0x8f, 0x03, 0x12,
	0x1f, 0x0a, 0x1a, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45,
	0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x90, 0x03,
	0x12, 0x09, 0x0a, 0x04, 0x4c, 0x4f, 0x4f, 0x4d, 0x10, 0x91, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x4e,
	0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x52, 0x53, 0x10, 0x92, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54,
	0x41, 0x10, 0x93, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c,
	0x41, 0x42, 0x10, 0x94, 0x03, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x55, 0x4c, 0x44, 0x52, 0x4f,
	0x4e, 0x10, 0x95, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x4f, 0x52, 0x4e, 0x46, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x10, 0x96, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x49,
	0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x97, 0x03, 0x12,
	0x13, 0x0a, 0x0e, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x10, 0x98, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x45, 0x44, 0x5f,
	0x44, 0x52, 0x49, 0x50, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0x99, 0x03, 0x12, 0x12, 0x0a, 0x0d,
	0x43, 0x48, 0x4f, 0x52, 0x55, 0x53, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x9a, 0x03,
	0x12, 0x0b, 0x0a, 0x06, 0x48, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x9b, 0x03, 0x12, 0x15, 0x0a,
	0x10, 0x52, 0x41, 0x57, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x9c, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45,
	0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x9d, 0x03, 0x12,
	0x0a, 0x0a, 0x05, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x10, 0x9e, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x44,
	0x45, 0x41, 0x44, 0x5f, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c,
	0x5f, 0x46, 0x41, 0x4e, 0x10, 0x9f, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x44, 0x45, 0x45, 0x50, 0x53,
	0x4c, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x41, 0x4c, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0xa0, 0x03,
	0x12, 0x12, 0x0a, 0x0d, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x10, 0xa1, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x52, 0x45, 0x57, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x4e, 0x44, 0x10, 0xa2, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xa3, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x53,
	0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0xa4, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45,
	0x44, 0x5f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xa5,
	0x03, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x56,
	0x4f, 0x49, 0x44, 0x10, 0xa6, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48,
	0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xa7, 0x03, 0x12, 0x1d,
	0x0a, 0x18, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41,
	0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xa8, 0x03, 0x12, 0x16, 0x0a,
	0x11, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x10, 0xa9, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x46,
	0x55, 0x52, 0x4e, 0x41, 0x43, 0x45, 0x10, 0xaa, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54,
	0x54, 0x41, 0x10, 0xab, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41,
	0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xac, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x4f,
	0x53, 0x53, 0x59, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xad, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x52, 0x45, 0x44,
	0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x52, 0x53, 0x10, 0xae, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54, 0x52, 0x49, 0x50,
	0x50, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xaf,
	0x03, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x57, 0x41,
	0x52, 0x50, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xb0, 0x03, 0x12, 0x17, 0x0a, 0x12,
	0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x53, 0x48, 0x45,
	0x4c, 0x46, 0x10, 0xb1, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb2, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x4c, 0x49, 0x4d,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45,
	0x52, 0x10, 0xb3, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xb4, 0x03, 0x12, 0x0f, 0x0a, 0x0a,
	0x4d, 0x45, 0x4c, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xb5, 0x03, 0x12, 0x1d, 0x0a,
	0x18, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xb6, 0x03, 0x12, 0x11, 0x0a, 0x0c,
	0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xb7, 0x03, 0x12,
	0x23, 0x0a, 0x1e, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41,
	0x42, 0x10, 0xb8, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10, 0xb9, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54, 0x52,
	0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x4f,
	0x44, 0x10, 0xba, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x57, 0x45, 0x45, 0x50, 0x49, 0x4e, 0x47, 0x5f,
	0x56, 0x49, 0x4e, 0x45, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0xbb, 0x03, 0x12, 0x14,
	0x0a, 0x0f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x10, 0xbc, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x43, 0x41,
	0x52, 0x50, 0x45, 0x54, 0x10, 0xbd, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x41, 0x4e, 0x44, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xbe, 0x03, 0x12, 0x0d,
	0x0a, 0x08, 0x53, 0x45, 0x41, 0x47, 0x52, 0x41, 0x53, 0x53, 0x10, 0xbf, 0x03, 0x12, 0x1a, 0x0a,
	0x15, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xc0, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x52, 0x49,
	0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xc1, 0x03, 0x12, 0x15, 0x0a, 0x10,
	0x43, 0x59, 0x41, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45,
	0x10, 0xc2, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41,
	0x52, 0x50, 0x45, 0x54, 0x10, 0xc3, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x50, 0x52, 0x55, 0x43,
	0x45, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xc4, 0x03, 0x12, 0x12, 0x0a, 0x0d,
	0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0xc5, 0x03,
	0x12, 0x11, 0x0a, 0x0c, 0x47, 0x52, 0x41, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0xc6, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f,
	0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10,
	0xc7, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x44,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xc8, 0x03,
	0x12, 0x12, 0x0a, 0x0d, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x10, 0xc9, 0x03, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x53, 0x4f, 0x49,
	0x4c, 0x10, 0xca, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x4e, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x44, 0x45, 0x42, 0x52, 0x49, 0x53, 0x10, 0xcb, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x52, 0x45,
	0x45, 0x50, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0xcc, 0x03, 0x12, 0x0e, 0x0a, 0x09,
	0x47, 0x4c, 0x4f, 0x57, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xcd, 0x03, 0x12, 0x1d, 0x0a, 0x18,
	0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f,
	0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xce, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x57,
	0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xcf, 0x03, 0x12, 0x0f, 0x0a,
	0x0a, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xd0, 0x03, 0x12, 0x16,
	0x0a, 0x11, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44,
	0x4f, 0x4f, 0x52, 0x10, 0xd1, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41,
	0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xd2, 0x03, 0x12,
	0x15, 0x0a, 0x10, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50,
	0x50, 0x45, 0x52, 0x10, 0xd3, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xd4, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x48, 0x4f, 0x4e, 0x45, 0x59,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xd5, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x49, 0x4e, 0x46,
	0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x10, 0xd6, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f,
	0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xd7, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x49, 0x4e, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41,
	0x4e, 0x45, 0x10, 0xd8, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f,
	0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xd9, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x52, 0x4f, 0x57,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10,
	0xda, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x41,
	0x4c, 0x59, 0x53, 0x54, 0x10, 0xdb, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x55, 0x53, 0x50, 0x49,
	0x43, 0x49, 0x4f, 0x55, 0x53, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x10, 0xdc, 0x03, 0x12, 0x22, 0x0a,
	0x1d, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43,
	0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xdd,
	0x03, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41,
	0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xde, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x45, 0x45, 0x50,
	0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10,
	0xdf, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41,
	0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe0, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x55, 0x52, 0x50,
	0x4c, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0xe1,
	0x03, 0x12, 0x12, 0x0a, 0x0d, 0x51, 0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x52, 0x53, 0x10, 0xe2, 0x03, 0x12, 0x0e, 0x0a, 0x09, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x55,
	0x53, 0x48, 0x10, 0xe3, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xe4, 0x03, 0x12, 0x1d,
	0x0a, 0x18, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f,
	0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe5, 0x03, 0x12, 0x1d, 0x0a,
	0x18, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x44, 0x45, 0x53, 0x49,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xe6, 0x03, 0x12, 0x13, 0x0a, 0x0e,
	0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x44, 0x52, 0x49, 0x50, 0x4c, 0x45, 0x41, 0x46, 0x10, 0xe7,
	0x03, 0x12, 0x09, 0x0a, 0x04, 0x44, 0x49, 0x52, 0x54, 0x10, 0xe8, 0x03, 0x12, 0x1b, 0x0a, 0x16,
	0x47, 0x52, 0x41, 0x59, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52,
	0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe9, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x4c, 0x41, 0x52,
	0x47, 0x45, 0x5f, 0x46, 0x45, 0x52, 0x4e, 0x10, 0xea, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xeb, 0x03,
	0x12, 0x12, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x10, 0xec, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52,
	0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xed, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x42,
	0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xee, 0x03, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4f, 0x42, 0x57, 0x45, 0x42, 0x10, 0xef, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x49, 0x4f,
	0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf0, 0x03, 0x12, 0x16, 0x0a, 0x11,
	0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x57, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0xf1, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x42,
	0x45, 0x44, 0x10, 0xf2, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f,
	0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xf3, 0x03, 0x12, 0x1b, 0x0a,
	0x16, 0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf4, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x55,
	0x46, 0x46, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf5, 0x03,
	0x12, 0x0f, 0x0a, 0x0a, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xf6,
	0x03, 0x12, 0x11, 0x0a, 0x0c, 0x4f, 0x41, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f,
	0x52, 0x10, 0xf7, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0xf8,
	0x03, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x54,
	0x54, 0x4f, 0x4e, 0x10, 0xf9, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x55, 0x44, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x41, 0x4d, 0x45, 0x54, 0x48, 0x59, 0x53, 0x54, 0x10, 0xfa, 0x03, 0x12, 0x0e, 0x0a,
	0x09, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xfb, 0x03, 0x12, 0x16, 0x0a,
	0x11, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54,
	0x54, 0x41, 0x10, 0xfc, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x45,
	0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xfd, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x44,
	0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x52, 0x53, 0x10, 0xfe, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x4e, 0x45, 0x54, 0x48, 0x45,
	0x52, 0x52, 0x41, 0x43, 0x4b, 0x10, 0xff, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x57, 0x41, 0x52, 0x50,
	0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x80, 0x04, 0x12, 0x1b, 0x0a, 0x16,
	0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x5f, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0x81, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x43, 0x41,
	0x43, 0x49, 0x41, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41,
	0x54, 0x45, 0x10, 0x82, 0x04, 0x12, 0x1c, 0x0a, 0x17, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45,
	0x10, 0x83, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x52,
	0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x84, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x44,
	0x41, 0x59, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x10, 0x85, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x4e, 0x44, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57,
	0x41, 0x59, 0x10, 0x86, 0x04, 0x12, 0x23, 0x0a, 0x1e, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49,
	0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x87, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x57, 0x45,
	0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44,
	0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x88, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x59, 0x45,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52,
	0x10, 0x89, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x50,
	0x45, 0x54, 0x10, 0x8a, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x49,
	0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0x8b, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45,
	0x4e, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x8c, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x49, 0x43, 0x45, 0x10, 0x8d, 0x04, 0x12, 0x15, 0x0a, 0x10,
	0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58,
	0x10, 0x8e, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x10, 0x8f, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x4d, 0x59, 0x43, 0x45, 0x4c,
	0x49, 0x55, 0x4d, 0x10, 0x90, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x4d, 0x50, 0x46, 0x49,
	0x52, 0x45, 0x10, 0x91, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45,
	0x44, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x92, 0x04, 0x12, 0x1d, 0x0a,
	0x18, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41,
	0x54, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x93, 0x04, 0x12, 0x15, 0x0a, 0x10,
	0x47, 0x52, 0x41, 0x59, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52,
	0x10, 0x94, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x10, 0x95, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x96, 0x04, 0x12, 0x0e,
	0x0a, 0x09, 0x44, 0x49, 0x52, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x97, 0x04, 0x12, 0x22,
	0x0a, 0x1d, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x45, 0x44,
	0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10,
	0x98, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x49, 0x53, 0x54, 0x4f, 0x4e, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x10, 0x99, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52, 0x49,
	0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x9a, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54,
	0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x57, 0x4f, 0x4f,
	0x44, 0x10, 0x9b, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0x9c, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e,
	0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x9d, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x59, 0x41, 0x4e,
	0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x9e, 0x04, 0x12, 0x0e, 0x0a, 0x09, 0x49, 0x52,
	0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x52, 0x53, 0x10, 0x9f, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x41,
	0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0xa0, 0x04, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41,
	0x4e, 0x45, 0x10, 0xa1, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f,
	0x4f, 0x41, 0x4b, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xa2, 0x04, 0x12, 0x16,
	0x0a, 0x11, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49,
	0x43, 0x4b, 0x53, 0x10, 0xa3, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x57, 0x49, 0x52, 0x45, 0x10, 0xa4, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x43,
	0x41, 0x43, 0x49, 0x41, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xa5, 0x04, 0x12, 0x15, 0x0a, 0x10,
	0x41, 0x4d, 0x45, 0x54, 0x48, 0x59, 0x53, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52,
	0x10, 0xa6, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x55, 0x54, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xa7, 0x04, 0x12, 0x1e, 0x0a, 0x19,
	0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4c, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x54,
	0x48, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x4c, 0x45, 0x59, 0x10, 0xa8, 0x04, 0x12, 0x14, 0x0a, 0x0f,
	0x52, 0x45, 0x44, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10,
	0xa9, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0xaa, 0x04, 0x12, 0x09, 0x0a, 0x04, 0x46, 0x49, 0x52, 0x45, 0x10, 0xab, 0x04,
	0x12, 0x0b, 0x0a, 0x06, 0x4a, 0x49, 0x47, 0x53, 0x41, 0x57, 0x10, 0xac, 0x04, 0x12, 0x1a, 0x0a,
	0x15, 0x57, 0x49, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e,
	0x5f, 0x53, 0x4b, 0x55, 0x4c, 0x4c, 0x10, 0xad, 0x04, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x48, 0x49,
	0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x10, 0xae, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x41, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xaf, 0x04,
	0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb0, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x50, 0x52,
	0x55, 0x43, 0x45, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xb1, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x44,
	0x41, 0x52, 0x4b, 0x5f, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x10, 0xb2,
	0x04, 0x12, 0x1f, 0x0a, 0x1a, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x57, 0x41,
	0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10,
	0xb3, 0x04, 0x12, 0x1b, 0x0a, 0x16, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45,
	0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xb4, 0x04, 0x12,
	0x1a, 0x0a, 0x15, 0x50, 0x45, 0x41, 0x52, 0x4c, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x52, 0x4f, 0x47, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0xb5, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x53,
	0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xb6, 0x04, 0x12, 0x0f, 0x0a,
	0x0a, 0x54, 0x41, 0x4c, 0x4c, 0x5f, 0x47, 0x52, 0x41, 0x53, 0x53, 0x10, 0xb7, 0x04, 0x12, 0x11,
	0x0a, 0x0c, 0x50, 0x55, 0x52, 0x50, 0x55, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb8,
	0x04, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x4b, 0x53, 0x10, 0xb9, 0x04, 0x12, 0x09, 0x0a, 0x04, 0x43, 0x4c, 0x41, 0x59, 0x10, 0xba, 0x04,
	0x12, 0x1c, 0x0a, 0x17, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xbb, 0x04, 0x12, 0x10,
	0x0a, 0x0b, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xbc, 0x04,
	0x12, 0x1a, 0x0a, 0x15, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xbd, 0x04, 0x12, 0x24, 0x0a, 0x1f,
	0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f,
	0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10,
	0xbe, 0x04, 0x12, 0x27, 0x0a, 0x22, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xbf, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x46,
	0x49, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xc0, 0x04,
	0x12, 0x13, 0x0a, 0x0e, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46,
	0x41, 0x4e, 0x10, 0xc1, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f,
	0x54, 0x4f, 0x52, 0x43, 0x48, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0xc2, 0x04, 0x12, 0x1d,
	0x0a, 0x18, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f,
	0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xc3, 0x04, 0x12, 0x1e, 0x0a,
	0x19, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44,
	0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xc4, 0x04, 0x12, 0x11, 0x0a,
	0x0c, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xc5, 0x04,
	0x12, 0x0a, 0x0a, 0x05, 0x57, 0x48, 0x45, 0x41, 0x54, 0x10, 0xc6, 0x04, 0x12, 0x1a, 0x0a, 0x15,
	0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xc7, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x41, 0x4e, 0x47,
	0x52, 0x4f, 0x56, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xc8, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x50,
	0x49, 0x4e, 0x4b, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xc9, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x49,
	0x4e, 0x4b, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xca, 0x04, 0x12, 0x1f, 0x0a, 0x1a,
	0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xcb, 0x04, 0x12, 0x13, 0x0a,
	0x0e, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10,
	0xcc, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xcd, 0x04, 0x12, 0x13,
	0x0a, 0x0e, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0xce, 0x04, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x53, 0x41, 0x4e, 0x44,
	0x10, 0xcf, 0x04, 0x12, 0x0a, 0x0a, 0x05, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10, 0xd0, 0x04, 0x12,
	0x18, 0x0a, 0x13, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44,
	0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xd1, 0x04, 0x12, 0x0c, 0x0a, 0x07, 0x4c, 0x41, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x10, 0xd2, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x43, 0x55, 0x4c, 0x4b,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0xd3, 0x04, 0x12, 0x0b, 0x0a, 0x06, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x10, 0xd4, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x57, 0x48, 0x49, 0x54, 0x45,
	0x5f, 0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0xd5, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x47, 0x52, 0x41,
	0x59, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xd6, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x41, 0x56, 0x45,
	0x5f, 0x56, 0x49, 0x4e, 0x45, 0x53, 0x10, 0xd7, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x48, 0x45,
	0x52, 0x52, 0x59, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0xd8, 0x04, 0x12, 0x0f, 0x0a,
	0x0a, 0x4b, 0x45, 0x4c, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0xd9, 0x04, 0x12, 0x0a,
	0x0a, 0x05, 0x57, 0x41, 0x54, 0x45, 0x52, 0x10, 0xda, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x4e,
	0x44, 0x45, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xdb, 0x04,
	0x12, 0x15, 0x0a, 0x10, 0x50, 0x49, 0x47, 0x4c, 0x49, 0x4e, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x10, 0xdc, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x43, 0x41, 0x43, 0x49,
	0x41, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xdd, 0x04, 0x12, 0x15, 0x0a,
	0x10, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0xde, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xdf, 0x04, 0x12, 0x1e, 0x0a,
	0x19, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x41, 0x47, 0x55, 0x4c, 0x45, 0x10, 0xe0, 0x04, 0x12, 0x0c, 0x0a,
	0x07, 0x50, 0x55, 0x4d, 0x50, 0x4b, 0x49, 0x4e, 0x10, 0xe1, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x52,
	0x45, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xe2, 0x04, 0x12, 0x15, 0x0a, 0x10,
	0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x10, 0xe3, 0x04, 0x12, 0x1d, 0x0a, 0x18, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x55, 0x42, 0x45,
	0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10,
	0xe4, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c,
	0x10, 0xe5, 0x04, 0x12, 0x20, 0x0a, 0x1b, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f,
	0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43,
	0x4b, 0x53, 0x10, 0xe6, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56,
	0x45, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xe7, 0x04, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xe8, 0x04, 0x12, 0x11,
	0x0a, 0x0c, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xe9,
	0x04, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52,
	0x53, 0x10, 0xea, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f,
	0x42, 0x4f, 0x58, 0x10, 0xeb, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c,
	0x41, 0x54, 0x45, 0x5f, 0x45, 0x4d, 0x45, 0x52, 0x41, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10,
	0xec, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xed, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x57, 0x41, 0x52, 0x50,
	0x45, 0x44, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xee, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x4c,
	0x41, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10,
	0xef, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x48,
	0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xf0, 0x04, 0x12, 0x0f,
	0x0a, 0x0a, 0x57, 0x45, 0x54, 0x5f, 0x53, 0x50, 0x4f, 0x4e, 0x47, 0x45, 0x10, 0xf1, 0x04, 0x12,
	0x16, 0x0a, 0x11, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x54,
	0x55, 0x4c, 0x49, 0x50, 0x10, 0xf2, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x4f, 0x55, 0x4c, 0x5f,
	0x4c, 0x41, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x10, 0xf3, 0x04, 0x12, 0x1d, 0x0a, 0x18, 0x53, 0x50,
	0x52, 0x55, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xf4, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x49, 0x52,
	0x43, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10, 0xf5, 0x04, 0x12, 0x11, 0x0a, 0x0c,
	0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xf6, 0x04, 0x12,
	0x12, 0x0a, 0x0d, 0x4d, 0x4f, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x49, 0x53, 0x54, 0x4f, 0x4e,
	0x10, 0xf7, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x55, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf8, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x55, 0x44, 0x5f,
	0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xf9, 0x04, 0x12,
	0x14, 0x0a, 0x0f, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f,
	0x4f, 0x52, 0x10, 0xfa, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41,
	0x52, 0x50, 0x45, 0x54, 0x10, 0xfb, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x4f, 0x52, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xfc, 0x04, 0x12, 0x09, 0x0a, 0x04, 0x42,
	0x45, 0x4c, 0x4c, 0x10, 0xfd, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xfe, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x4d, 0x4f,
	0x4f, 0x54, 0x48, 0x5f, 0x42, 0x41, 0x53, 0x41, 0x4c, 0x54, 0x10, 0xff, 0x04, 0x12, 0x0f, 0x0a,
	0x0a, 0x53, 0x55, 0x47, 0x41, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x45, 0x10, 0x80, 0x05, 0x12, 0x18,
	0x0a, 0x13, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x81, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x4c, 0x55, 0x45,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x82, 0x05, 0x12,
	0x16, 0x0a, 0x11, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53,
	0x4c, 0x41, 0x54, 0x45, 0x10, 0x83, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x4e, 0x44, 0x5f, 0x50,
	0x4f, 0x52, 0x54, 0x41, 0x4c, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x84, 0x05, 0x12, 0x0e,
	0x0a, 0x09, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x85, 0x05, 0x12, 0x1b,
	0x0a, 0x16, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x44, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0x86, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x50,
	0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0x87, 0x05, 0x12, 0x17, 0x0a,
	0x12, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x88, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f,
	0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10,
	0x89, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x8a, 0x05, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x58, 0x49, 0x44,
	0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10,
	0x8b, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x4d, 0x4f, 0x53,
	0x41, 0x49, 0x43, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x8c, 0x05, 0x12, 0x18, 0x0a, 0x13, 0x44,
	0x45, 0x41, 0x44, 0x5f, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46,
	0x41, 0x4e, 0x10, 0x8d, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x45,
	0x41, 0x47, 0x52, 0x41, 0x53, 0x53, 0x10, 0x8e, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x57, 0x41, 0x52,
	0x50, 0x45, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x8f, 0x05, 0x12, 0x0f, 0x0a, 0x0a, 0x41,
	0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x90, 0x05, 0x12, 0x0d, 0x0a, 0x08,
	0x52, 0x45, 0x44, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0x91, 0x05, 0x12, 0x16, 0x0a, 0x11, 0x57,
	0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45,
	0x10, 0x92, 0x05, 0x12, 0x1f, 0x0a, 0x1a, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x4f, 0x58, 0x49,
	0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x4c,
	0x42, 0x10, 0x93, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x57,
	0x4f, 0x4f, 0x44, 0x10, 0x94, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x48, 0x4f, 0x4e, 0x45, 0x59, 0x43,
	0x4f, 0x4d, 0x42, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x95, 0x05, 0x12, 0x14, 0x0a, 0x0f,
	0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10,
	0x96, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e,
	0x45, 0x52, 0x10, 0x97, 0x05, 0x12, 0x1f, 0x0a, 0x1a, 0x57, 0x49, 0x54, 0x48, 0x45, 0x52, 0x5f,
	0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x4b,
	0x55, 0x4c, 0x4c, 0x10, 0x98, 0x05, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f,
	0x4e, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45,
	0x10, 0x99, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x53, 0x4c,
	0x41, 0x42, 0x10, 0x9a, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f,
	0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x9b,
	0x05, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53,
	0x10, 0x9c, 0x05, 0x12, 0x0e, 0x0a, 0x09, 0x42, 0x4f, 0x4f, 0x4b, 0x53, 0x48, 0x45, 0x4c, 0x46,
	0x10, 0x9d, 0x05, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f,
	0x41, 0x4e, 0x44, 0x45, 0x53, 0x49, 0x54, 0x45, 0x10, 0x9e, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x59,
	0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0x9f, 0x05, 0x12, 0x14, 0x0a,
	0x0f, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41,
	0x10, 0xa0, 0x05, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43,
	0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xa1,
	0x05, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41,
	0x4c, 0x4c, 0x5f, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10, 0xa2, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x54,
	0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0xa3, 0x05, 0x12, 0x20, 0x0a, 0x1b, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54,
	0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x4c,
	0x42, 0x10, 0xa4, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x49, 0x47, 0x5f, 0x44, 0x52, 0x49, 0x50,
	0x4c, 0x45, 0x41, 0x46, 0x10, 0xa5, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x49, 0x52, 0x43, 0x48,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xa6, 0x05, 0x12, 0x12, 0x0a,
	0x0d, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x56, 0x49, 0x4c, 0x10, 0xa7,
	0x05, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xa8, 0x05, 0x12, 0x09, 0x0a, 0x04,
	0x52, 0x41, 0x49, 0x4c, 0x10, 0xa9, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x4a, 0x55, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45,
	0x10, 0xaa, 0x05, 0x12, 0x0c, 0x0a, 0x07, 0x4f, 0x41, 0x4b, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xab,
	0x05, 0x12, 0x0e, 0x0a, 0x09, 0x52, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0xac,
	0x05, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xad,
	0x05, 0x12, 0x0f, 0x0a, 0x0a, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x42, 0x45, 0x44, 0x10,
	0xae, 0x05, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52,
	0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0xaf, 0x05, 0x12, 0x16, 0x0a,
	0x11, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54,
	0x54, 0x41, 0x10, 0xb0, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52,
	0x49, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xb1,
	0x05, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x10, 0xb2, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x55,
	0x4c, 0x49, 0x50, 0x10, 0xb3, 0x05, 0x12, 0x0f, 0x0a, 0x0a, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x54,
	0x4f, 0x52, 0x43, 0x48, 0x10, 0xb4, 0x05, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x44, 0x4c,
	0x45, 0x10, 0xb5, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x49, 0x4c, 0x45, 0x53, 0x10, 0xb6, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x46, 0x4c,
	0x45, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xb7, 0x05,
	0x12, 0x19, 0x0a, 0x14, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x49, 0x52, 0x43, 0x48,
	0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xb8, 0x05, 0x12, 0x16, 0x0a, 0x11, 0x57,
	0x48, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58,
	0x10, 0xb9, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x41, 0x50,
	0x4c, 0x49, 0x4e, 0x47, 0x10, 0xba, 0x05, 0x12, 0x0a, 0x0a, 0x05, 0x43, 0x48, 0x45, 0x53, 0x54,
	0x10, 0xbb, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xbc, 0x05, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x5f, 0x41, 0x4d, 0x45, 0x54, 0x48, 0x59, 0x53, 0x54, 0x5f, 0x42, 0x55, 0x44,
	0x10, 0xbd, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x5a,
	0x41, 0x4c, 0x45, 0x41, 0x5f, 0x42, 0x55, 0x53, 0x48, 0x10, 0xbe, 0x05, 0x12, 0x1a, 0x0a, 0x15,
	0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xbf, 0x05, 0x12, 0x1e, 0x0a, 0x19, 0x44, 0x45, 0x41, 0x44,
	0x5f, 0x42, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xc0, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x50, 0x52, 0x55,
	0x43, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xc1, 0x05, 0x12, 0x12,
	0x0a, 0x0d, 0x53, 0x50, 0x4f, 0x52, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x53, 0x53, 0x4f, 0x4d, 0x10,
	0xc2, 0x05, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x52, 0x49, 0x50, 0x57, 0x49, 0x52, 0x45, 0x10, 0xc3,
	0x05, 0x12, 0x09, 0x0a, 0x04, 0x54, 0x55, 0x46, 0x46, 0x10, 0xc4, 0x05, 0x12, 0x19, 0x0a, 0x14,
	0x43, 0x59, 0x41, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f,
	0x57, 0x44, 0x45, 0x52, 0x10, 0xc5, 0x05, 0x12, 0x09, 0x0a, 0x04, 0x4c, 0x41, 0x56, 0x41, 0x10,
	0xc6, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xc7, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x53,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0xc8, 0x05, 0x12, 0x12,
	0x0a, 0x0d, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x4d, 0x4f, 0x53, 0x41, 0x49, 0x43, 0x10,
	0xc9, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41,
	0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xca, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x59, 0x41, 0x4e,
	0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0xcb, 0x05, 0x12, 0x18, 0x0a, 0x13,
	0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e,
	0x4e, 0x45, 0x52, 0x10, 0xcc, 0x05, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45,
	0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0xcd, 0x05, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x10, 0xce, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f,
	0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xcf, 0x05, 0x12, 0x27, 0x0a, 0x22,
	0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41,
	0x54, 0x45, 0x10, 0xd0, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x57, 0x45, 0x45, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x56, 0x49, 0x4e, 0x45, 0x53, 0x10, 0xd1, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x4c, 0x41,
	0x43, 0x4b, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xd2, 0x05, 0x12, 0x15, 0x0a, 0x10,
	0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45,
	0x10, 0xd3, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x4c,
	0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0xd4, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x52,
	0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xd5, 0x05, 0x12, 0x11, 0x0a,
	0x0c, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0xd6, 0x05,
	0x12, 0x1c, 0x0a, 0x17, 0x43, 0x41, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x53,
	0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0xd7, 0x05, 0x12, 0x1b,
	0x0a, 0x16, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x44, 0x45, 0x53,
	0x49, 0x54, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xd8, 0x05, 0x12, 0x13, 0x0a, 0x0e, 0x53,
	0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0xd9, 0x05,
	0x12, 0x12, 0x0a, 0x0d, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c,
	0x45, 0x10, 0xda, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x10, 0xdb, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x43, 0x41, 0x43, 0x49,
	0x41, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0xdc, 0x05, 0x12, 0x0a, 0x0a, 0x05, 0x43,
	0x4f, 0x43, 0x4f, 0x41, 0x10, 0xdd, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x4e, 0x45, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xde, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x4e,
	0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x57, 0x41, 0x52, 0x54, 0x10, 0xdf, 0x05, 0x12, 0x0d, 0x0a,
	0x08, 0x4f, 0x41, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xe0, 0x05, 0x12, 0x11, 0x0a, 0x0c,
	0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0xe1, 0x05, 0x12,
	0x16, 0x0a, 0x11, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41,
	0x4e, 0x4e, 0x45, 0x52, 0x10, 0xe2, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x49, 0x52, 0x10, 0xe3,
	0x05, 0x12, 0x0e, 0x0a, 0x09, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xe4,
	0x05, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x48, 0x55, 0x4c, 0x4b,
	0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0xe5, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x55, 0x44,
	0x10, 0xe6, 0x05, 0x12, 0x0c, 0x0a, 0x07, 0x46, 0x55, 0x52, 0x4e, 0x41, 0x43, 0x45, 0x10, 0xe7,
	0x05, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c,
	0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xe8, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x4f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xe9, 0x05, 0x12, 0x14, 0x0a, 0x0f, 0x42,
	0x52, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xea,
	0x05, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xeb, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x57, 0x41, 0x52, 0x50,
	0x45, 0x44, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xec, 0x05, 0x12,
	0x1a, 0x0a, 0x15, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55,
	0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xed, 0x05, 0x12, 0x09, 0x0a, 0x04, 0x43,
	0x41, 0x4b, 0x45, 0x10, 0xee, 0x05, 0x12, 0x1f, 0x0a, 0x1a, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x55,
	0x54, 0x54, 0x4f, 0x4e, 0x10, 0xef, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45,
	0x44, 0x5f, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x10, 0xf0, 0x05, 0x12, 0x1c, 0x0a, 0x17, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54,
	0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xf1,
	0x05, 0x12, 0x1b, 0x0a, 0x16, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48,
	0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xf2, 0x05, 0x12, 0x10,
	0x0a, 0x0b, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xf3, 0x05,
	0x12, 0x1b, 0x0a, 0x16, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x43,
	0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xf4, 0x05, 0x12, 0x0a, 0x0a,
	0x05, 0x50, 0x4f, 0x50, 0x50, 0x59, 0x10, 0xf5, 0x05, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x55, 0x52,
	0x50, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57,
	0x44, 0x45, 0x52, 0x10, 0xf6, 0x05, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x45, 0x44, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xf7, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x41,
	0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xf8, 0x05, 0x12, 0x10, 0x0a,
	0x0b, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xf9, 0x05, 0x12,
	0x0f, 0x0a, 0x0a, 0x53, 0x45, 0x41, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x4c, 0x45, 0x10, 0xfa, 0x05,
	0x12, 0x1a, 0x0a, 0x15, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53,
	0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xfb, 0x05, 0x12, 0x1d, 0x0a, 0x18,
	0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0xfc, 0x05, 0x12, 0x0b, 0x0a, 0x06, 0x42,
	0x41, 0x52, 0x52, 0x45, 0x4c, 0x10, 0xfd, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x42, 0x52, 0x41, 0x49,
	0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0xfe, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x48,
	0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45,
	0x10, 0xff, 0x05, 0x12, 0x19, 0x0a, 0x14, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0x80, 0x06, 0x12, 0x10,
	0x0a, 0x0b, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x81, 0x06,
	0x12, 0x16, 0x0a, 0x11, 0x43, 0x52, 0x45, 0x45, 0x50, 0x45, 0x52, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x82, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b,
	0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x83, 0x06, 0x12, 0x0b, 0x0a, 0x06,
	0x50, 0x49, 0x53, 0x54, 0x4f, 0x4e, 0x10, 0x84, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x85, 0x06, 0x12, 0x0c, 0x0a, 0x07, 0x53,
	0x50, 0x41, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x86, 0x06, 0x12, 0x0b, 0x0a, 0x06, 0x42, 0x41, 0x4d,
	0x42, 0x4f, 0x4f, 0x10, 0x87, 0x06, 0x12, 0x19, 0x0a, 0x14, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a,
	0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x4c, 0x42, 0x10, 0x88,
	0x06, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x10, 0x89, 0x06, 0x12, 0x25, 0x0a, 0x20, 0x50, 0x4f, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x8a, 0x06, 0x12, 0x17,
	0x0a, 0x12, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41,
	0x4e, 0x4e, 0x45, 0x52, 0x10, 0x8b, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x41, 0x43, 0x41, 0x43, 0x49,
	0x41, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x8c, 0x06, 0x12, 0x0f, 0x0a, 0x0a, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x8d, 0x06, 0x12, 0x1a, 0x0a, 0x15,
	0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x8e, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x52, 0x4f, 0x4e,
	0x5f, 0x4f, 0x52, 0x45, 0x10, 0x8f, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x55, 0x44, 0x5f, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x90, 0x06, 0x12, 0x0f, 0x0a, 0x0a,
	0x4d, 0x4f, 0x53, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x91, 0x06, 0x12, 0x10, 0x0a,
	0x0b, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x50, 0x45, 0x54, 0x41, 0x4c, 0x53, 0x10, 0x92, 0x06, 0x12,
	0x12, 0x0a, 0x0d, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x46, 0x46,
	0x10, 0x93, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x4c, 0x45,
	0x41, 0x56, 0x45, 0x53, 0x10, 0x94, 0x06, 0x12, 0x18, 0x0a, 0x13, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0x95,
	0x06, 0x12, 0x22, 0x0a, 0x1d, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41,
	0x4e, 0x45, 0x10, 0x96, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56,
	0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x97, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x41, 0x4e,
	0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x98, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x4e,
	0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x99,
	0x06, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x4d, 0x41,
	0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x9a, 0x06, 0x12, 0x18, 0x0a,
	0x13, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x10, 0x9b, 0x06, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x52, 0x49, 0x4d, 0x53,
	0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0x9c, 0x06,
	0x12, 0x14, 0x0a, 0x0f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x50, 0x4c, 0x41,
	0x4e, 0x4b, 0x53, 0x10, 0x9d, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x43, 0x48, 0x45, 0x53, 0x54, 0x10, 0x9e, 0x06, 0x12, 0x0b, 0x0a, 0x06, 0x47, 0x52, 0x41, 0x56,
	0x45, 0x4c, 0x10, 0x9f, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10,
	0xa0, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x10, 0xa1, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41, 0x4b,
	0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xa2, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x4d, 0x4f, 0x53, 0x53,
	0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xa3, 0x06, 0x12, 0x11, 0x0a, 0x0c, 0x51, 0x55,
	0x41, 0x52, 0x54, 0x5a, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xa4, 0x06, 0x12, 0x1a, 0x0a,
	0x15, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45,
	0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xa5, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x4f, 0x52,
	0x43, 0x48, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0xa6, 0x06, 0x12, 0x0f, 0x0a, 0x0a, 0x54,
	0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0xa7, 0x06, 0x12, 0x10, 0x0a, 0x0b,
	0x54, 0x55, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xa8, 0x06, 0x12, 0x12,
	0x0a, 0x0d, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x10,
	0xa9, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x10, 0xaa, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x55, 0x52, 0x50, 0x55, 0x52, 0x5f, 0x53,
	0x4c, 0x41, 0x42, 0x10, 0xab, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f,
	0x53, 0x48, 0x52, 0x49, 0x45, 0x4b, 0x45, 0x52, 0x10, 0xac, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x53,
	0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f,
	0x48, 0x59, 0x50, 0x48, 0x41, 0x45, 0x10, 0xad, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x57, 0x41, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x41, 0x55, 0x4c, 0x44, 0x52, 0x4f, 0x4e, 0x10, 0xae, 0x06, 0x12, 0x0e,
	0x0a, 0x09, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xaf, 0x06, 0x12, 0x17,
	0x0a, 0x12, 0x42, 0x55, 0x42, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb0, 0x06, 0x12, 0x0f, 0x0a, 0x0a, 0x46, 0x4c, 0x4f, 0x57, 0x45,
	0x52, 0x5f, 0x50, 0x4f, 0x54, 0x10, 0xb1, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x41, 0x56, 0x45,
	0x5f, 0x56, 0x49, 0x4e, 0x45, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0xb2, 0x06, 0x12,
	0x19, 0x0a, 0x14, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x46, 0x46,
	0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xb3, 0x06, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x4f,
	0x54, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f,
	0x4d, 0x10, 0xb4, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x56, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x49, 0x52,
	0x10, 0xb5, 0x06, 0x12, 0x11, 0x0a, 0x0c, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x50, 0x45, 0x54, 0x10, 0xb6, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xb7, 0x06, 0x12, 0x1a,
	0x0a, 0x15, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45,
	0x52, 0x5f, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0xb8, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x43,
	0x41, 0x46, 0x46, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0xb9, 0x06, 0x12, 0x16, 0x0a, 0x11,
	0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52,
	0x53, 0x10, 0xba, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44,
	0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xbb,
	0x06, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x54,
	0x45, 0x10, 0xbc, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xbd, 0x06, 0x12, 0x17, 0x0a, 0x12, 0x44,
	0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x4f, 0x52,
	0x45, 0x10, 0xbe, 0x06, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10, 0xbf, 0x06, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x4c,
	0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53,
	0x53, 0x10, 0xc0, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x51,
	0x55, 0x41, 0x52, 0x54, 0x5a, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0xc1, 0x06, 0x12, 0x0c, 0x0a, 0x07,
	0x52, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xc2, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x5a, 0x4f,
	0x4d, 0x42, 0x49, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0xc3,
	0x06, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x49, 0x52, 0x10, 0xc4, 0x06,
	0x12, 0x10, 0x0a, 0x0b, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10,
	0xc5, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x54, 0x4f, 0x4e, 0x5f, 0x53,
	0x4b, 0x55, 0x4c, 0x4c, 0x10, 0xc6, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x5a, 0x4f, 0x4d, 0x42, 0x49,
	0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0xc7, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x4f, 0x42,
	0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xc8, 0x06,
	0x12, 0x17, 0x0a, 0x12, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f,
	0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xc9, 0x06, 0x12, 0x14, 0x0a, 0x0f, 0x4f, 0x43, 0x48,
	0x52, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x47, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0xca, 0x06, 0x12,
	0x0f, 0x0a, 0x0a, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xcb, 0x06,
	0x12, 0x17, 0x0a, 0x12, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54,
	0x5a, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xcc, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x49,
	0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10, 0xcd, 0x06, 0x12, 0x16,
	0x0a, 0x11, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42,
	0x55, 0x4c, 0x42, 0x10, 0xce, 0x06, 0x12, 0x0c, 0x0a, 0x07, 0x43, 0x52, 0x41, 0x46, 0x54, 0x45,
	0x52, 0x10, 0xcf, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52,
	0x53, 0x10, 0xd0, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x5f,
	0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xd1, 0x06, 0x12, 0x19, 0x0a, 0x14,
	0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x47,
	0x52, 0x41, 0x54, 0x45, 0x10, 0xd2, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x58, 0x50, 0x4f, 0x53,
	0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c,
	0x41, 0x42, 0x10, 0xd3, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x43, 0x41,
	0x4d, 0x50, 0x46, 0x49, 0x52, 0x45, 0x10, 0xd4, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x52, 0x4f,
	0x57, 0x4e, 0x5f, 0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0xd5, 0x06, 0x12, 0x1a,
	0x0a, 0x15, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0xd6, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x59,
	0x41, 0x4e, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43,
	0x4f, 0x54, 0x54, 0x41, 0x10, 0xd7, 0x06, 0x12, 0x17, 0x0a, 0x12, 0x4e, 0x45, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xd8, 0x06,
	0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x58, 0x45, 0x59, 0x45,
	0x5f, 0x44, 0x41, 0x49, 0x53, 0x59, 0x10, 0xd9, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x54, 0x52,
	0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x48, 0x59, 0x50,
	0x48, 0x41, 0x45, 0x10, 0xda, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0xdb, 0x06, 0x12, 0x18, 0x0a,
	0x13, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x10, 0xdc, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x4f, 0x53, 0x53, 0x59,
	0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41,
	0x42, 0x10, 0xdd, 0x06, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x43, 0x55, 0x4c, 0x4b, 0x5f, 0x56, 0x45,
	0x49, 0x4e, 0x10, 0xde, 0x06, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xdf, 0x06, 0x12, 0x14,
	0x0a, 0x0f, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x55, 0x42, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41,
	0x4c, 0x10, 0xe0, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44,
	0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x52, 0x53, 0x10, 0xe1, 0x06, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f,
	0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xe2,
	0x06, 0x12, 0x11, 0x0a, 0x0c, 0x50, 0x55, 0x4d, 0x50, 0x4b, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x45,
	0x4d, 0x10, 0xe3, 0x06, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x4e, 0x4f, 0x57, 0x5f, 0x43, 0x41, 0x55, 0x4c, 0x44, 0x52, 0x4f, 0x4e, 0x10, 0xe4, 0x06, 0x12,
	0x0f, 0x0a, 0x0a, 0x52, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xe5, 0x06,
	0x12, 0x16, 0x0a, 0x11, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52,
	0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xe6, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xe7, 0x06,
	0x12, 0x0a, 0x0a, 0x05, 0x4d, 0x45, 0x4c, 0x4f, 0x4e, 0x10, 0xe8, 0x06, 0x12, 0x0f, 0x0a, 0x0a,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x4d, 0x55, 0x44, 0x10, 0xe9, 0x06, 0x12, 0x17, 0x0a,
	0x12, 0x50, 0x45, 0x54, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x53,
	0x4c, 0x41, 0x42, 0x10, 0xea, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44,
	0x5f, 0x52, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0xeb, 0x06, 0x12, 0x1a, 0x0a,
	0x15, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x41, 0x4d, 0x4f,
	0x4e, 0x44, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0xec, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x50, 0x4f, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xed, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x50, 0x4f,
	0x54, 0x41, 0x54, 0x4f, 0x45, 0x53, 0x10, 0xee, 0x06, 0x12, 0x20, 0x0a, 0x1b, 0x53, 0x4d, 0x4f,
	0x4f, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xef, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x53,
	0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xf0, 0x06, 0x12,
	0x1e, 0x0a, 0x19, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45,
	0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xf1, 0x06, 0x12,
	0x12, 0x0a, 0x0d, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53,
	0x10, 0xf2, 0x06, 0x12, 0x24, 0x0a, 0x1f, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41,
	0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52,
	0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xf3, 0x06, 0x12, 0x10, 0x0a, 0x0b, 0x4d, 0x41, 0x47,
	0x4d, 0x41, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xf4, 0x06, 0x12, 0x14, 0x0a, 0x0f, 0x4d,
	0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xf5,
	0x06, 0x12, 0x22, 0x0a, 0x1d, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53,
	0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50,
	0x45, 0x52, 0x10, 0xf6, 0x06, 0x12, 0x22, 0x0a, 0x1d, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45,
	0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52,
	0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xf7, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x4f, 0x41, 0x4b,
	0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xf8, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x4f, 0x4c, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x5f, 0x44, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x45, 0x10, 0xf9, 0x06, 0x12,
	0x18, 0x0a, 0x13, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x54, 0x55, 0x4c, 0x49, 0x50, 0x10, 0xfa, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x52, 0x45, 0x44,
	0x5f, 0x53, 0x41, 0x4e, 0x44, 0x10, 0xfb, 0x06, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x4d, 0x4f, 0x4b,
	0x45, 0x52, 0x10, 0xfc, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f,
	0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xfd, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0xfe, 0x06, 0x12, 0x1d, 0x0a, 0x18, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xff, 0x06, 0x12, 0x19, 0x0a, 0x14, 0x57, 0x41,
	0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50,
	0x45, 0x52, 0x10, 0x80, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50,
	0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x81, 0x07, 0x12, 0x15, 0x0a,
	0x10, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x5a, 0x41, 0x4c, 0x45,
	0x41, 0x10, 0x82, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44,
	0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0x83, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x52,
	0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0x84, 0x07, 0x12, 0x1b,
	0x0a, 0x16, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0x85, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x44,
	0x45, 0x41, 0x44, 0x5f, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0x86, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x47, 0x52,
	0x41, 0x4e, 0x49, 0x54, 0x45, 0x10, 0x87, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4e, 0x45, 0x54, 0x48,
	0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x88, 0x07,
	0x12, 0x1e, 0x0a, 0x19, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45,
	0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x89, 0x07,
	0x12, 0x13, 0x0a, 0x0e, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49,
	0x4e, 0x47, 0x10, 0x8a, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f,
	0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x8b, 0x07, 0x12,
	0x10, 0x0a, 0x0b, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x8c,
	0x07, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4a, 0x55, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x8d, 0x07, 0x12, 0x10, 0x0a,
	0x0b, 0x53, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x8e, 0x07, 0x12,
	0x16, 0x0a, 0x11, 0x56, 0x45, 0x52, 0x44, 0x41, 0x4e, 0x54, 0x5f, 0x46, 0x52, 0x4f, 0x47, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x8f, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x57, 0x48, 0x49, 0x54, 0x45,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x90, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x41, 0x4d, 0x45, 0x54, 0x48, 0x59, 0x53, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x91, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x4f, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x10, 0x92, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x44, 0x41, 0x4e, 0x44, 0x45, 0x4c, 0x49,
	0x4f, 0x4e, 0x10, 0x93, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56,
	0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x45,
	0x10, 0x94, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x41, 0x4d, 0x45,
	0x54, 0x48, 0x59, 0x53, 0x54, 0x5f, 0x42, 0x55, 0x44, 0x10, 0x95, 0x07, 0x12, 0x18, 0x0a, 0x13,
	0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42,
	0x55, 0x4c, 0x42, 0x10, 0x96, 0x07, 0x12, 0x23, 0x0a, 0x1e, 0x49, 0x4e, 0x46, 0x45, 0x53, 0x54,
	0x45, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e,
	0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x97, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x57,
	0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x98, 0x07, 0x12, 0x15, 0x0a,
	0x10, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54,
	0x41, 0x10, 0x99, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x10, 0x9a, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45,
	0x10, 0x9b, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x4c, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52,
	0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x9c, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x55, 0x52,
	0x50, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x9d,
	0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x9e, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x54, 0x52, 0x49,
	0x50, 0x50, 0x45, 0x44, 0x5f, 0x4f, 0x41, 0x4b, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x9f, 0x07, 0x12,
	0x1c, 0x0a, 0x17, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f,
	0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xa0, 0x07, 0x12, 0x0f, 0x0a,
	0x0a, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xa1, 0x07, 0x12, 0x13,
	0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x49, 0x52, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0xa2, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f,
	0x41, 0x43, 0x41, 0x43, 0x49, 0x41, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xa3, 0x07, 0x12, 0x1d, 0x0a,
	0x18, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47,
	0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0xa4, 0x07, 0x12, 0x12, 0x0a, 0x0d,
	0x44, 0x45, 0x43, 0x4f, 0x52, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x54, 0x10, 0xa5, 0x07,
	0x12, 0x19, 0x0a, 0x14, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x50, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x45, 0x10, 0xa6, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53,
	0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x4c,
	0x4f, 0x47, 0x10, 0xa7, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x41,
	0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xa8, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x44, 0x45, 0x41,
	0x44, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xa9, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x52, 0x55,
	0x43, 0x45, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xaa, 0x07,
	0x12, 0x1b, 0x0a, 0x16, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52,
	0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xab, 0x07, 0x12, 0x0a, 0x0a,
	0x05, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x10, 0xac, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x4f, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x4c, 0x41, 0x42, 0x10, 0xad, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x41, 0x4d, 0x42, 0x4f,
	0x4f, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xae, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x41,
	0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xaf, 0x07, 0x12, 0x12, 0x0a,
	0x0d, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xb0,
	0x07, 0x12, 0x14, 0x0a, 0x0f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x10, 0xb1, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x57, 0x41, 0x58, 0x45, 0x44,
	0x5f, 0x4f, 0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f,
	0x50, 0x50, 0x45, 0x52, 0x10, 0xb2, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x49, 0x4e, 0x4b, 0x5f,
	0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54,
	0x41, 0x10, 0xb3, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x55,
	0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0xb4, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x42,
	0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0xb5, 0x07, 0x12, 0x21,
	0x0a, 0x1c, 0x43, 0x48, 0x49, 0x53, 0x45, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xb6,
	0x07, 0x12, 0x1c, 0x0a, 0x17, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45,
	0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xb7, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x10, 0xb8, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45,
	0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0xb9, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x4f, 0x41, 0x4b,
	0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xba, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x53,
	0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x47, 0x52, 0x4f, 0x56, 0x45,
	0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xbb, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x55, 0x53, 0x50,
	0x49, 0x43, 0x49, 0x4f, 0x55, 0x53, 0x5f, 0x47, 0x52, 0x41, 0x56, 0x45, 0x4c, 0x10, 0xbc, 0x07,
	0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f,
	0x4e, 0x10, 0xbd, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10,
	0xbe, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x48, 0x45, 0x41, 0x56, 0x59, 0x5f, 0x57, 0x45, 0x49, 0x47,
	0x48, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c,
	0x41, 0x54, 0x45, 0x10, 0xbf, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x48, 0x4f, 0x52, 0x4e, 0x5f, 0x43,
	0x4f, 0x52, 0x41, 0x4c, 0x10, 0xc0, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4a, 0x55, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0xc1, 0x07, 0x12,
	0x0f, 0x0a, 0x0a, 0x42, 0x49, 0x52, 0x43, 0x48, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xc2, 0x07,
	0x12, 0x10, 0x0a, 0x0b, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10,
	0xc3, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x44, 0x10, 0xc4, 0x07,
	0x12, 0x14, 0x0a, 0x0f, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x5f, 0x57,
	0x41, 0x4c, 0x4c, 0x10, 0xc5, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x52, 0x49, 0x50, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xc6, 0x07, 0x12, 0x0a, 0x0a, 0x05,
	0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0xc7, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x50, 0x4f, 0x54, 0x54,
	0x45, 0x44, 0x5f, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x10, 0xc8, 0x07, 0x12, 0x0d, 0x0a, 0x08,
	0x41, 0x4e, 0x44, 0x45, 0x53, 0x49, 0x54, 0x45, 0x10, 0xc9, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x4e,
	0x45, 0x54, 0x48, 0x45, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xca,
	0x07, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x45, 0x52, 0x4e,
	0x10, 0xcb, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f,
	0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0xcc, 0x07, 0x12, 0x19, 0x0a,
	0x14, 0x53, 0x54, 0x52, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x41, 0x43, 0x49, 0x41,
	0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0xcd, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x57, 0x41, 0x52, 0x50,
	0x45, 0x44, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xce, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x4d,
	0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xcf, 0x07, 0x12,
	0x0a, 0x0a, 0x05, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xd0, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x43,
	0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0xd1,
	0x07, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x44, 0x10, 0xd2, 0x07,
	0x12, 0x15, 0x0a, 0x10, 0x44, 0x45, 0x45, 0x50, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x52,
	0x49, 0x43, 0x4b, 0x53, 0x10, 0xd3, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x4a, 0x55, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xd4, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10,
	0xd5, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x55, 0x44, 0x44, 0x59, 0x5f, 0x4d, 0x41, 0x4e, 0x47,
	0x52, 0x4f, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0xd6, 0x07, 0x12, 0x24, 0x0a,
	0x1f, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43,
	0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53,
	0x10, 0xd7, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44,
	0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44, 0x4f, 0x4f, 0x52,
	0x10, 0xd8, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x41,
	0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xd9, 0x07, 0x12, 0x0a, 0x0a, 0x05,
	0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xda, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x47, 0x52, 0x41, 0x53,
	0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xdb, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x4a, 0x55,
	0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4b, 0x53, 0x10, 0xdc, 0x07, 0x12, 0x11,
	0x0a, 0x0c, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0xdd,
	0x07, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0xde, 0x07, 0x12,
	0x0e, 0x0a, 0x09, 0x43, 0x59, 0x41, 0x4e, 0x5f, 0x57, 0x4f, 0x4f, 0x4c, 0x10, 0xdf, 0x07, 0x12,
	0x0e, 0x0a, 0x09, 0x46, 0x52, 0x4f, 0x47, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x10, 0xe0, 0x07, 0x12,
	0x10, 0x0a, 0x0b, 0x46, 0x52, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x43, 0x45, 0x10, 0xe1,
	0x07, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x54, 0x45, 0x52,
	0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0xe2, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4e,
	0x54, 0x10, 0xe3, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x4f,
	0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x10, 0xe4, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54,
	0x45, 0x10, 0xe5, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f,
	0x46, 0x55, 0x4e, 0x47, 0x55, 0x53, 0x10, 0xe6, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x45, 0x41,
	0x44, 0x5f, 0x42, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x5f, 0x46, 0x41,
	0x4e, 0x10, 0xe7, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xe8, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x4a,
	0x55, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x53, 0x10, 0xe9, 0x07, 0x12,
	0x10, 0x0a, 0x0b, 0x43, 0x4f, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x54, 0x10, 0xea,
	0x07, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x4e,
	0x43, 0x45, 0x10, 0xeb, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x4c, 0x41, 0x50, 0x49, 0x53, 0x5f, 0x4f,
	0x52, 0x45, 0x10, 0xec, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x41, 0x4e, 0x44, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x10, 0xed, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0xee, 0x07, 0x12,
	0x11, 0x0a, 0x0c, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x50, 0x50, 0x59, 0x10,
	0xef, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4b, 0x45, 0x10, 0xf0, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x57,
	0x41, 0x52, 0x50, 0x45, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x47, 0x55, 0x53, 0x10, 0xf1, 0x07, 0x12,
	0x15, 0x0a, 0x10, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x44,
	0x4f, 0x4f, 0x52, 0x10, 0xf2, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x42, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10, 0xf3, 0x07, 0x12, 0x16,
	0x0a, 0x11, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x42, 0x41, 0x4e,
	0x4e, 0x45, 0x52, 0x10, 0xf4, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x52, 0x41, 0x50, 0x50, 0x45,
	0x44, 0x5f, 0x43, 0x48, 0x45, 0x53, 0x54, 0x10, 0xf5, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x52,
	0x49, 0x50, 0x57, 0x49, 0x52, 0x45, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x10, 0xf6, 0x07, 0x12, 0x19,
	0x0a, 0x14, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44,
	0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0xf7, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x43, 0x41,
	0x43, 0x49, 0x41, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0xf8, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x45,
	0x58, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0xf9, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x50,
	0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0xfa, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f,
	0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x53, 0x4c, 0x41, 0x42,
	0x10, 0xfb, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x48,
	0x45, 0x52, 0x52, 0x59, 0x5f, 0x53, 0x41, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0xfc, 0x07, 0x12,
	0x10, 0x0a, 0x0b, 0x53, 0x4e, 0x49, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x45, 0x47, 0x47, 0x10, 0xfd,
	0x07, 0x12, 0x0b, 0x0a, 0x06, 0x42, 0x41, 0x53, 0x41, 0x4c, 0x54, 0x10, 0xfe, 0x07, 0x12, 0x16,
	0x0a, 0x11, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x43,
	0x41, 0x4b, 0x45, 0x10, 0xff, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x80, 0x08, 0x12, 0x1a, 0x0a,
	0x15, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x44, 0x49, 0x4f, 0x52, 0x49, 0x54,
	0x45, 0x5f, 0x53, 0x4c, 0x41, 0x42, 0x10, 0x81, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x52, 0x49,
	0x53, 0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x52, 0x53, 0x10, 0x82, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x43, 0x41, 0x43, 0x49,
	0x41, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x10, 0x83, 0x08, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4f,
	0x41, 0x4b, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x84, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x4f, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x54, 0x55, 0x46, 0x46, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10,
	0x85, 0x08, 0x12, 0x0f, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x86, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x50, 0x52, 0x55, 0x43, 0x45, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x4b, 0x53, 0x10, 0x87, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x42, 0x52, 0x4f, 0x57, 0x4e,
	0x5f, 0x47, 0x4c, 0x41, 0x5a, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54,
	0x54, 0x41, 0x10, 0x88, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x4f, 0x53, 0x53, 0x59, 0x5f, 0x43,
	0x4f, 0x42, 0x42, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0x89, 0x08, 0x12, 0x26, 0x0a,
	0x21, 0x57, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44,
	0x5f, 0x43, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x52, 0x53, 0x10, 0x8a, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x4d, 0x42, 0x4f, 0x4f, 0x5f,
	0x53, 0x54, 0x41, 0x49, 0x52, 0x53, 0x10, 0x8b, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x52, 0x49,
	0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0x8c, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x48, 0x55,
	0x4c, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x8d, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x4f,
	0x58, 0x49, 0x44, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x50, 0x50, 0x45, 0x52, 0x10, 0x8e,
	0x08, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x4f, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x41,
	0x53, 0x41, 0x4c, 0x54, 0x10, 0x8f, 0x08, 0x12, 0x0a, 0x0a, 0x05, 0x53, 0x43, 0x55, 0x4c, 0x4b,
	0x10, 0x90, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x4e, 0x45,
	0x10, 0x91, 0x08, 0x12, 0x0a, 0x0a, 0x05, 0x41, 0x4e, 0x56, 0x49, 0x4c, 0x10, 0x92, 0x08, 0x12,
	0x12, 0x0a, 0x0d, 0x45, 0x4d, 0x45, 0x52, 0x41, 0x4c, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x93, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x94, 0x08, 0x12, 0x12, 0x0a, 0x0d,
	0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x95, 0x08,
	0x12, 0x0d, 0x0a, 0x08, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x96, 0x08, 0x12,
	0x12, 0x0a, 0x0d, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45,
	0x10, 0x97, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x49, 0x4e, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x10, 0x98, 0x08, 0x12, 0x12,
	0x0a, 0x0d, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x50, 0x45, 0x54, 0x10,
	0x99, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x52, 0x49,
	0x4d, 0x53, 0x4f, 0x4e, 0x5f, 0x46, 0x55, 0x4e, 0x47, 0x55, 0x53, 0x10, 0x9a, 0x08, 0x12, 0x18,
	0x0a, 0x13, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x52, 0x50, 0x45, 0x44, 0x5f,
	0x52, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0x9b, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x52, 0x4f, 0x4f, 0x54,
	0x45, 0x44, 0x5f, 0x44, 0x49, 0x52, 0x54, 0x10, 0x9c, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x42, 0x45,
	0x45, 0x5f, 0x4e, 0x45, 0x53, 0x54, 0x10, 0x9d, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x52, 0x4f,
	0x57, 0x4e, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x41, 0x43, 0x4f, 0x54, 0x54, 0x41, 0x10, 0x9e, 0x08,
	0x12, 0x0e, 0x0a, 0x09, 0x44, 0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x52, 0x10, 0x9f, 0x08,
	0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x5f, 0x43, 0x41, 0x52, 0x50,
	0x45, 0x54, 0x10, 0xa0, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x5f,
	0x42, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0xa1,
	0x08, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blocks_proto_rawDescOnce sync.Once
	file_blocks_proto_rawDescData = file_blocks_proto_rawDesc
)

func file_blocks_proto_rawDescGZIP() []byte {
	file_blocks_proto_rawDescOnce.Do(func() {
		file_blocks_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocks_proto_rawDescData)
	})
	return file_blocks_proto_rawDescData
}

var file_blocks_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_blocks_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_blocks_proto_goTypes = []interface{}{
	(Attachment)(0),              // 0: Attachment
	(Axis)(0),                    // 1: Axis
	(East)(0),                    // 2: East
	(Face)(0),                    // 3: Face
	(Facing)(0),                  // 4: Facing
	(Half)(0),                    // 5: Half
	(Hinge)(0),                   // 6: Hinge
	(Instrument)(0),              // 7: Instrument
	(Leaves)(0),                  // 8: Leaves
	(Mode)(0),                    // 9: Mode
	(North)(0),                   // 10: North
	(Orientation)(0),             // 11: Orientation
	(Part)(0),                    // 12: Part
	(SculkSensorPhase)(0),        // 13: SculkSensorPhase
	(Shape)(0),                   // 14: Shape
	(South)(0),                   // 15: South
	(Thickness)(0),               // 16: Thickness
	(Tilt)(0),                    // 17: Tilt
	(TrialSpawnerState)(0),       // 18: TrialSpawnerState
	(Type)(0),                    // 19: Type
	(VerticalDirection)(0),       // 20: VerticalDirection
	(West)(0),                    // 21: West
	(Material)(0),                // 22: Material
	(*BlockPalette)(nil),         // 23: BlockPalette
	(*BlockPaletteEntry)(nil),    // 24: BlockPaletteEntry
	(*BlockPaletteData)(nil),     // 25: BlockPaletteData
	(*BlockPaletteState)(nil),    // 26: BlockPaletteState
	(*BlockProperties)(nil),      // 27: BlockProperties
	(*BlockStateProperties)(nil), // 28: BlockStateProperties
}
var file_blocks_proto_depIdxs = []int32{
	24, // 0: BlockPalette.entries:type_name -> BlockPaletteEntry
	22, // 1: BlockPaletteEntry.material:type_name -> Material
	25, // 2: BlockPaletteEntry.data:type_name -> BlockPaletteData
	27, // 3: BlockPaletteData.properties:type_name -> BlockProperties
	26, // 4: BlockPaletteData.states:type_name -> BlockPaletteState
	28, // 5: BlockPaletteState.properties:type_name -> BlockStateProperties
	0,  // 6: BlockProperties.attachment:type_name -> Attachment
	1,  // 7: BlockProperties.axis:type_name -> Axis
	2,  // 8: BlockProperties.east:type_name -> East
	19, // 9: BlockProperties.type:type_name -> Type
	3,  // 10: BlockProperties.face:type_name -> Face
	4,  // 11: BlockProperties.facing:type_name -> Facing
	5,  // 12: BlockProperties.half:type_name -> Half
	6,  // 13: BlockProperties.hinge:type_name -> Hinge
	7,  // 14: BlockProperties.instrument:type_name -> Instrument
	8,  // 15: BlockProperties.leaves:type_name -> Leaves
	9,  // 16: BlockProperties.mode:type_name -> Mode
	10, // 17: BlockProperties.north:type_name -> North
	11, // 18: BlockProperties.orientation:type_name -> Orientation
	12, // 19: BlockProperties.part:type_name -> Part
	13, // 20: BlockProperties.sculk_sensor_phase:type_name -> SculkSensorPhase
	14, // 21: BlockProperties.shape:type_name -> Shape
	15, // 22: BlockProperties.south:type_name -> South
	16, // 23: BlockProperties.thickness:type_name -> Thickness
	17, // 24: BlockProperties.tilt:type_name -> Tilt
	18, // 25: BlockProperties.trial_spawner_state:type_name -> TrialSpawnerState
	20, // 26: BlockProperties.vertical_direction:type_name -> VerticalDirection
	21, // 27: BlockProperties.west:type_name -> West
	0,  // 28: BlockStateProperties.attachment:type_name -> Attachment
	1,  // 29: BlockStateProperties.axis:type_name -> Axis
	2,  // 30: BlockStateProperties.east:type_name -> East
	19, // 31: BlockStateProperties.type:type_name -> Type
	3,  // 32: BlockStateProperties.face:type_name -> Face
	4,  // 33: BlockStateProperties.facing:type_name -> Facing
	5,  // 34: BlockStateProperties.half:type_name -> Half
	6,  // 35: BlockStateProperties.hinge:type_name -> Hinge
	7,  // 36: BlockStateProperties.instrument:type_name -> Instrument
	8,  // 37: BlockStateProperties.leaves:type_name -> Leaves
	9,  // 38: BlockStateProperties.mode:type_name -> Mode
	10, // 39: BlockStateProperties.north:type_name -> North
	11, // 40: BlockStateProperties.orientation:type_name -> Orientation
	12, // 41: BlockStateProperties.part:type_name -> Part
	13, // 42: BlockStateProperties.sculk_sensor_phase:type_name -> SculkSensorPhase
	14, // 43: BlockStateProperties.shape:type_name -> Shape
	15, // 44: BlockStateProperties.south:type_name -> South
	16, // 45: BlockStateProperties.thickness:type_name -> Thickness
	17, // 46: BlockStateProperties.tilt:type_name -> Tilt
	18, // 47: BlockStateProperties.trial_spawner_state:type_name -> TrialSpawnerState
	20, // 48: BlockStateProperties.vertical_direction:type_name -> VerticalDirection
	21, // 49: BlockStateProperties.west:type_name -> West
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_blocks_proto_init() }
func file_blocks_proto_init() {
	if File_blocks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blocks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPalette); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPaletteEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPaletteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPaletteState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStateProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blocks_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_blocks_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_blocks_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocks_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blocks_proto_goTypes,
		DependencyIndexes: file_blocks_proto_depIdxs,
		EnumInfos:         file_blocks_proto_enumTypes,
		MessageInfos:      file_blocks_proto_msgTypes,
	}.Build()
	File_blocks_proto = out.File
	file_blocks_proto_rawDesc = nil
	file_blocks_proto_goTypes = nil
	file_blocks_proto_depIdxs = nil
}
